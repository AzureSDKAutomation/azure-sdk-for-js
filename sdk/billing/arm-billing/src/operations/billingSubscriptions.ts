/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/billingSubscriptionsMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a BillingSubscriptions. */
export class BillingSubscriptions {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a BillingSubscriptions.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Lists the subscriptions for a billing account. The operation is supported for billing accounts
   * with agreement type Microsoft Customer Agreement or Microsoft Partner Agreement or Microsoft
   * Online Services Program Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingSubscriptionsListByBillingAccountResponse>
   */
  listByBillingAccount(billingAccountName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingSubscriptionsListByBillingAccountResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param callback The callback
   */
  listByBillingAccount(billingAccountName: string, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccount(billingAccountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  listByBillingAccount(billingAccountName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingSubscriptionsListResult>, callback?: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): Promise<Models.BillingSubscriptionsListByBillingAccountResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        options
      },
      listByBillingAccountOperationSpec,
      callback) as Promise<Models.BillingSubscriptionsListByBillingAccountResponse>;
  }

  /**
   * Gets a billing subscription by id.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingSubscriptionId The ID that uniquely identifies a billing subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingSubscriptionsGetResponse>
   */
  get(billingAccountName: string, billingSubscriptionId: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingSubscriptionsGetResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingSubscriptionId The ID that uniquely identifies a billing subscription.
   * @param callback The callback
   */
  get(billingAccountName: string, billingSubscriptionId: string, callback: msRest.ServiceCallback<Models.BillingSubscription>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingSubscriptionId The ID that uniquely identifies a billing subscription.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(billingAccountName: string, billingSubscriptionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingSubscription>): void;
  get(billingAccountName: string, billingSubscriptionId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingSubscription>, callback?: msRest.ServiceCallback<Models.BillingSubscription>): Promise<Models.BillingSubscriptionsGetResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingSubscriptionId,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.BillingSubscriptionsGetResponse>;
  }

  /**
   * Updates a billing subscription. Currently, cost center can be updated
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingSubscriptionId The ID that uniquely identifies a billing subscription.
   * @param parameters Request parameters that are provided to the update billing subscription
   * operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingSubscriptionsUpdateResponse>
   */
  update(billingAccountName: string, billingSubscriptionId: string, parameters: Models.BillingSubscriptionUpdateRequest, options?: msRest.RequestOptionsBase): Promise<Models.BillingSubscriptionsUpdateResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingSubscriptionId The ID that uniquely identifies a billing subscription.
   * @param parameters Request parameters that are provided to the update billing subscription
   * operation.
   * @param callback The callback
   */
  update(billingAccountName: string, billingSubscriptionId: string, parameters: Models.BillingSubscriptionUpdateRequest, callback: msRest.ServiceCallback<Models.BillingSubscription>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingSubscriptionId The ID that uniquely identifies a billing subscription.
   * @param parameters Request parameters that are provided to the update billing subscription
   * operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  update(billingAccountName: string, billingSubscriptionId: string, parameters: Models.BillingSubscriptionUpdateRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingSubscription>): void;
  update(billingAccountName: string, billingSubscriptionId: string, parameters: Models.BillingSubscriptionUpdateRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingSubscription>, callback?: msRest.ServiceCallback<Models.BillingSubscription>): Promise<Models.BillingSubscriptionsUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingSubscriptionId,
        parameters,
        options
      },
      updateOperationSpec,
      callback) as Promise<Models.BillingSubscriptionsUpdateResponse>;
  }

  /**
   * Lists the subscriptions for a billing profile. The operation is supported for billing accounts
   * with agreement type Microsoft Customer Agreement or Microsoft Partner Agreement or Microsoft
   * Online Services Program Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingSubscriptionsListByBillingProfileResponse>
   */
  listByBillingProfile(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingSubscriptionsListByBillingProfileResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param callback The callback
   */
  listByBillingProfile(billingAccountName: string, billingProfileName: string, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingProfile(billingAccountName: string, billingProfileName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  listByBillingProfile(billingAccountName: string, billingProfileName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingSubscriptionsListResult>, callback?: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): Promise<Models.BillingSubscriptionsListByBillingProfileResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        options
      },
      listByBillingProfileOperationSpec,
      callback) as Promise<Models.BillingSubscriptionsListByBillingProfileResponse>;
  }

  /**
   * Lists the subscriptions for an invoice section. The operation is supported for billing profiles
   * with agreement type Microsoft Customer Agreement or Microsoft Partner Agreement or Microsoft
   * Online Services Program Agreement.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingSubscriptionsListByInvoiceSectionResponse>
   */
  listByInvoiceSection(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingSubscriptionsListByInvoiceSectionResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param callback The callback
   */
  listByInvoiceSection(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param billingProfileName The ID that uniquely identifies a billing profile.
   * @param invoiceSectionName The ID that uniquely identifies an invoice section.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByInvoiceSection(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  listByInvoiceSection(billingAccountName: string, billingProfileName: string, invoiceSectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingSubscriptionsListResult>, callback?: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): Promise<Models.BillingSubscriptionsListByInvoiceSectionResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        billingProfileName,
        invoiceSectionName,
        options
      },
      listByInvoiceSectionOperationSpec,
      callback) as Promise<Models.BillingSubscriptionsListByInvoiceSectionResponse>;
  }

  /**
   * Lists the subscriptions for a billing account. The operation is supported for billing accounts
   * with agreement type Microsoft Customer Agreement or Microsoft Partner Agreement or Microsoft
   * Online Services Program Agreement.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingSubscriptionsListByBillingAccountNextResponse>
   */
  listByBillingAccountNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingSubscriptionsListByBillingAccountNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByBillingAccountNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingAccountNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  listByBillingAccountNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingSubscriptionsListResult>, callback?: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): Promise<Models.BillingSubscriptionsListByBillingAccountNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByBillingAccountNextOperationSpec,
      callback) as Promise<Models.BillingSubscriptionsListByBillingAccountNextResponse>;
  }

  /**
   * Lists the subscriptions for a billing profile. The operation is supported for billing accounts
   * with agreement type Microsoft Customer Agreement or Microsoft Partner Agreement or Microsoft
   * Online Services Program Agreement.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingSubscriptionsListByBillingProfileNextResponse>
   */
  listByBillingProfileNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingSubscriptionsListByBillingProfileNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByBillingProfileNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByBillingProfileNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  listByBillingProfileNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingSubscriptionsListResult>, callback?: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): Promise<Models.BillingSubscriptionsListByBillingProfileNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByBillingProfileNextOperationSpec,
      callback) as Promise<Models.BillingSubscriptionsListByBillingProfileNextResponse>;
  }

  /**
   * Lists the subscriptions for an invoice section. The operation is supported for billing profiles
   * with agreement type Microsoft Customer Agreement or Microsoft Partner Agreement or Microsoft
   * Online Services Program Agreement.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingSubscriptionsListByInvoiceSectionNextResponse>
   */
  listByInvoiceSectionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingSubscriptionsListByInvoiceSectionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByInvoiceSectionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByInvoiceSectionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): void;
  listByInvoiceSectionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingSubscriptionsListResult>, callback?: msRest.ServiceCallback<Models.BillingSubscriptionsListResult>): Promise<Models.BillingSubscriptionsListByInvoiceSectionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByInvoiceSectionNextOperationSpec,
      callback) as Promise<Models.BillingSubscriptionsListByInvoiceSectionNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByBillingAccountOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions",
  urlParameters: [
    Parameters.billingAccountName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingSubscriptionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions/{billingSubscriptionId}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingSubscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingSubscription
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const updateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingSubscriptions/{billingSubscriptionId}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingSubscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.BillingSubscriptionUpdateRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.BillingSubscription
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingProfileOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/billingSubscriptions",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingSubscriptionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByInvoiceSectionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/billingSubscriptions",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.billingProfileName,
    Parameters.invoiceSectionName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingSubscriptionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingAccountNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingSubscriptionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByBillingProfileNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingSubscriptionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};

const listByInvoiceSectionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingSubscriptionsListResult
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
