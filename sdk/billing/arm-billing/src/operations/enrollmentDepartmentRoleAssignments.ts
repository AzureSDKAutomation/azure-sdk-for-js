/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/enrollmentDepartmentRoleAssignmentsMappers";
import * as Parameters from "../models/parameters";
import { BillingManagementClientContext } from "../billingManagementClientContext";

/** Class representing a EnrollmentDepartmentRoleAssignments. */
export class EnrollmentDepartmentRoleAssignments {
  private readonly client: BillingManagementClientContext;

  /**
   * Create a EnrollmentDepartmentRoleAssignments.
   * @param {BillingManagementClientContext} client Reference to the service client.
   */
  constructor(client: BillingManagementClientContext) {
    this.client = client;
  }

  /**
   * Create or update a billing role assignment.
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param departmentName The ID that uniquely identifies a department.
   * @param billingRoleAssignmentName The ID that uniquely identifies a role assignment.
   * @param parameters The new or updated billing role assignment.
   * @param [options] The optional parameters
   * @returns Promise<Models.EnrollmentDepartmentRoleAssignmentsPutResponse>
   */
  put(billingAccountName: string, departmentName: string, billingRoleAssignmentName: string, parameters: Models.BillingRoleAssignment, options?: msRest.RequestOptionsBase): Promise<Models.EnrollmentDepartmentRoleAssignmentsPutResponse>;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param departmentName The ID that uniquely identifies a department.
   * @param billingRoleAssignmentName The ID that uniquely identifies a role assignment.
   * @param parameters The new or updated billing role assignment.
   * @param callback The callback
   */
  put(billingAccountName: string, departmentName: string, billingRoleAssignmentName: string, parameters: Models.BillingRoleAssignment, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  /**
   * @param billingAccountName The ID that uniquely identifies a billing account.
   * @param departmentName The ID that uniquely identifies a department.
   * @param billingRoleAssignmentName The ID that uniquely identifies a role assignment.
   * @param parameters The new or updated billing role assignment.
   * @param options The optional parameters
   * @param callback The callback
   */
  put(billingAccountName: string, departmentName: string, billingRoleAssignmentName: string, parameters: Models.BillingRoleAssignment, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BillingRoleAssignment>): void;
  put(billingAccountName: string, departmentName: string, billingRoleAssignmentName: string, parameters: Models.BillingRoleAssignment, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BillingRoleAssignment>, callback?: msRest.ServiceCallback<Models.BillingRoleAssignment>): Promise<Models.EnrollmentDepartmentRoleAssignmentsPutResponse> {
    return this.client.sendOperationRequest(
      {
        billingAccountName,
        departmentName,
        billingRoleAssignmentName,
        parameters,
        options
      },
      putOperationSpec,
      callback) as Promise<Models.EnrollmentDepartmentRoleAssignmentsPutResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const putOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountName}/departments/{departmentName}/billingRoleAssignments/{billingRoleAssignmentName}",
  urlParameters: [
    Parameters.billingAccountName,
    Parameters.departmentName,
    Parameters.billingRoleAssignmentName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.BillingRoleAssignment,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.BillingRoleAssignment
    },
    default: {
      bodyMapper: Mappers.ErrorResponse
    }
  },
  serializer
};
