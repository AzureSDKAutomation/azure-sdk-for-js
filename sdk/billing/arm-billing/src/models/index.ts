/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Address details.
 */
export interface AddressDetails {
  /**
   * First name.
   */
  firstName?: string;
  /**
   * Last name.
   */
  lastName?: string;
  /**
   * Company name.
   */
  companyName?: string;
  /**
   * Address line 1.
   */
  addressLine1: string;
  /**
   * Address line 2.
   */
  addressLine2?: string;
  /**
   * Address line 3.
   */
  addressLine3?: string;
  /**
   * Address city.
   */
  city?: string;
  /**
   * Address district.
   */
  district?: string;
  /**
   * Address region.
   */
  region?: string;
  /**
   * Country code uses ISO2, 2-digit format.
   */
  country: string;
  /**
   * Postal code.
   */
  postalCode?: string;
  /**
   * Email address.
   */
  email?: string;
  /**
   * Phone number.
   */
  phoneNumber?: string;
  /**
   * Middle name.
   */
  middleName?: string;
}

/**
 * The billing profile details of the partner of the customer for an indirect motion.
 */
export interface IndirectRelationshipInfo {
  /**
   * The billing account name of the partner or the customer for an indirect motion.
   */
  billingAccountName?: string;
  /**
   * The billing profile name of the partner or the customer for an indirect motion.
   */
  billingProfileName?: string;
  /**
   * The display name of the partner or customer for an indirect motion.
   */
  displayName?: string;
}

/**
 * Details of the Azure plan.
 */
export interface AzurePlan {
  /**
   * The sku id.
   */
  skuId?: string;
  /**
   * The sku description.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuDescription?: string;
}

/**
 * The Resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * An invoice section.
 */
export interface InvoiceSection extends Resource {
  /**
   * The name of the invoice section.
   */
  displayName?: string;
  /**
   * Identifies the state of an invoice section. Possible values include: 'Active', 'Restricted'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly state?: InvoiceSectionState;
  /**
   * Dictionary of metadata associated with the invoice section.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The system generated unique identifier for an invoice section.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemId?: string;
  /**
   * Identifies the cloud environments that are associated with an invoice section. This is a
   * system managed optional field and gets updated as the invoice section gets associated with
   * accounts in various clouds. Possible values include: 'USGov', 'USNat', 'USSec'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetCloud?: TargetCloud;
}

/**
 * The invoice sections associated to the billing profile. By default this is not populated, unless
 * it's specified in $expand.
 */
export interface InvoiceSectionsOnExpand {
  /**
   * Indicates whether there are more invoice sections than the ones listed in this collection. The
   * collection lists a maximum of 50 invoice sections. To get all invoice sections, use the list
   * invoice sections API.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasMoreResults?: boolean;
  /**
   * The invoice sections associated to the billing profile.
   */
  value?: InvoiceSection[];
}

/**
 * The details of spending limit policy set on a billing profile.
 */
export interface SpendingLimitDetails {
  /**
   * The initial amount for the billing profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly amount?: number;
  /**
   * The currency in which the charges for the billing profile are billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currency?: string;
  /**
   * The date when this spending limit is no longer in effect.
   */
  endDate?: Date;
  /**
   * The date when this spending limit goes into effect.
   */
  startDate?: Date;
  /**
   * The type of spending limit. Possible values include: 'FreeAccount', 'Sandbox'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: Type;
  /**
   * The status of current spending limit. Possible values include: 'Active', 'Expired', 'Reached',
   * 'Removed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly spendingLimitStatus?: SpendingLimitStatus;
}

/**
 * A billing profile.
 */
export interface BillingProfile extends Resource {
  /**
   * The name of the billing profile.
   */
  displayName?: string;
  /**
   * The purchase order name that will appear on the invoices generated for the billing profile.
   */
  poNumber?: string;
  /**
   * Identifies which services and purchases are paid by a billing profile. Possible values
   * include: 'Direct', 'IndirectCustomer', 'IndirectPartner', 'CSPPartner'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingRelationshipType?: BillingRelationshipType;
  /**
   * Billing address.
   */
  billTo?: AddressDetails;
  /**
   * Flag controlling whether the invoices for the billing profile are sent through email.
   */
  invoiceEmailOptIn?: boolean;
  /**
   * Identifies the billing profile that is linked to another billing profile in indirect purchase
   * motion.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly indirectRelationshipInfo?: IndirectRelationshipInfo;
  /**
   * The day of the month when the invoice for the billing profile is generated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceDay?: number;
  /**
   * The list of email addresses to receive invoices by email for the billing profile.
   */
  invoiceRecipients?: string[];
  /**
   * The currency in which the charges for the billing profile are billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currency?: string;
  /**
   * Information about the enabled azure plans.
   */
  enabledAzurePlans?: AzurePlan[];
  /**
   * The invoice sections associated to the billing profile. By default this is not populated,
   * unless it's specified in $expand.
   */
  invoiceSections?: InvoiceSectionsOnExpand;
  /**
   * Indicates whether user has read access to the billing profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasReadAccess?: boolean;
  /**
   * The system generated unique identifier for a billing profile.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly systemId?: string;
  /**
   * The status of the billing profile. Possible values include: 'Active', 'Disabled', 'Warned'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: BillingProfileStatus;
  /**
   * Reason for the specified billing profile status. Possible values include: 'PastDue',
   * 'SpendingLimitReached', 'SpendingLimitExpired'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly statusReasonCode?: StatusReasonCode;
  /**
   * The billing profile spending limit. Possible values include: 'Off', 'On'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly spendingLimit?: SpendingLimit;
  /**
   * The details of billing profile spending limit.
   */
  spendingLimitDetails?: SpendingLimitDetails[];
  /**
   * Identifies the cloud environments that are associated with a billing profile. This is a system
   * managed optional field and gets updated as the billing profile gets associated with accounts
   * in various clouds.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly targetClouds?: TargetCloud[];
}

/**
 * The billing profiles associated with the billing account. By default this is not populated,
 * unless it's specified in $expand.
 */
export interface BillingProfilesOnExpand {
  /**
   * Indicates whether there are more billing profiles than the ones listed in this collection. The
   * collection lists a maximum of 50 billing profiles. To get all billing profiles, use the list
   * billing profiles API.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasMoreResults?: boolean;
  /**
   * The billing profiles associated with the billing account.
   */
  value?: BillingProfile[];
}

/**
 * An enrollment account.
 */
export interface EnrollmentAccount extends Resource {
  /**
   * The name of the enrollment account.
   */
  accountName?: string;
  /**
   * The cost center associated with the enrollment account.
   */
  costCenter?: string;
  /**
   * The owner of the enrollment account.
   */
  accountOwner?: string;
  /**
   * The status of the enrollment account.
   */
  status?: string;
  /**
   * The start date of the enrollment account.
   */
  startDate?: Date;
  /**
   * The end date of the enrollment account.
   */
  endDate?: Date;
  /**
   * Associated department. By default this is not populated, unless it's specified in $expand.
   */
  department?: Department;
}

/**
 * A department.
 */
export interface Department extends Resource {
  /**
   * The name of the department.
   */
  departmentName?: string;
  /**
   * The cost center associated with the department.
   */
  costCenter?: string;
  /**
   * The status of the department.
   */
  status?: string;
  /**
   * Associated enrollment accounts. By default this is not populated, unless it's specified in
   * $expand.
   */
  enrollmentAccounts?: EnrollmentAccount[];
}

/**
 * The policies for Enterprise Agreement enrollments.
 */
export interface EnrollmentPolicies {
  /**
   * The policy that controls whether Account Owners can view charges.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountOwnerViewCharges?: boolean;
  /**
   * The policy that controls whether Department Administrators can view charges.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly departmentAdminViewCharges?: boolean;
  /**
   * The policy that controls whether Azure marketplace purchases are allowed in the enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly marketplacesEnabled?: boolean;
  /**
   * The policy that controls whether Azure reservation purchases are allowed in the enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reservedInstancesEnabled?: boolean;
}

/**
 * The properties of an enrollment.
 */
export interface Enrollment {
  /**
   * The start date of the enrollment.
   */
  startDate?: Date;
  /**
   * The end date of the enrollment.
   */
  endDate?: Date;
  /**
   * The billing currency for the enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currency?: string;
  /**
   * The channel type of the enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly channel?: string;
  /**
   * The policies for Enterprise Agreement enrollments.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly policies?: EnrollmentPolicies;
  /**
   * The language for the enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly language?: string;
  /**
   * The country code of the enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly countryCode?: string;
  /**
   * The current status of the enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly status?: string;
  /**
   * The billing cycle for the enrollment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingCycle?: string;
}

/**
 * A billing account.
 */
export interface BillingAccount extends Resource {
  /**
   * The current status of the billing account. Possible values include: 'Unknown', 'Active',
   * 'Deleted', 'Disabled', 'Expired', 'Transferred', 'Extended', 'Terminated', 'UnderReview'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountStatus?: AccountStatus;
  /**
   * Reason for the specified billing account status. Possible values include: 'UnusalActivity'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountStatusReasonCode?: AccountStatusReasonCode;
  /**
   * The type of customer. Possible values include: 'Enterprise', 'Individual', 'Partner'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountType?: AccountType;
  /**
   * The type of agreement. Possible values include: 'MicrosoftCustomerAgreement',
   * 'EnterpriseAgreement', 'MicrosoftOnlineServicesProgram', 'MicrosoftPartnerAgreement'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly agreementType?: AgreementType;
  /**
   * The billing profiles associated with the billing account. By default this is not populated,
   * unless it's specified in $expand. This property is available for agreement type Microsoft
   * Customer Agreement and Microsoft Partner Agreement.
   */
  billingProfiles?: BillingProfilesOnExpand;
  /**
   * The departments associated to the enrollment. This property is available for agreement type
   * Enterprise Agreement.
   */
  departments?: Department[];
  /**
   * The billing account name.
   */
  displayName?: string;
  /**
   * The accounts associated to the enrollment. This property is available for agreement type
   * Enterprise Agreement.
   */
  enrollmentAccounts?: EnrollmentAccount[];
  /**
   * The details about the associated legacy enrollment. By default this is not populated, unless
   * it's specified in $expand. This property is available for agreement type Enterprise Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * Notification email address for legacy account. This property is available for agreement type
   * Microsoft Online Services Program.
   */
  notificationEmailAddress?: string;
  /**
   * Indicates whether user has read access to the billing account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasReadAccess?: boolean;
  /**
   * The address of the individual or organization that is responsible for the billing account.
   */
  soldTo?: AddressDetails;
}

/**
 * The request properties of the billing account that can be updated.
 */
export interface BillingAccountUpdateRequest {
  /**
   * The current status of the billing account. Possible values include: 'Unknown', 'Active',
   * 'Deleted', 'Disabled', 'Expired', 'Transferred', 'Extended', 'Terminated', 'UnderReview'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountStatus?: AccountStatus;
  /**
   * Reason for the specified billing account status. Possible values include: 'UnusalActivity'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountStatusReasonCode?: AccountStatusReasonCode;
  /**
   * The type of customer. Possible values include: 'Enterprise', 'Individual', 'Partner'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountType?: AccountType;
  /**
   * The type of agreement. Possible values include: 'MicrosoftCustomerAgreement',
   * 'EnterpriseAgreement', 'MicrosoftOnlineServicesProgram', 'MicrosoftPartnerAgreement'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly agreementType?: AgreementType;
  /**
   * The billing profiles associated with the billing account. By default this is not populated,
   * unless it's specified in $expand. This property is available for agreement type Microsoft
   * Customer Agreement and Microsoft Partner Agreement.
   */
  billingProfiles?: BillingProfilesOnExpand;
  /**
   * The departments associated to the enrollment. This property is available for agreement type
   * Enterprise Agreement.
   */
  departments?: Department[];
  /**
   * The billing account name.
   */
  displayName?: string;
  /**
   * The accounts associated to the enrollment. This property is available for agreement type
   * Enterprise Agreement.
   */
  enrollmentAccounts?: EnrollmentAccount[];
  /**
   * The details about the associated legacy enrollment. By default this is not populated, unless
   * it's specified in $expand. This property is available for agreement type Enterprise Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * Notification email address for legacy account. This property is available for agreement type
   * Microsoft Online Services Program.
   */
  notificationEmailAddress?: string;
  /**
   * Indicates whether user has read access to the billing account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly hasReadAccess?: boolean;
  /**
   * The address of the individual or organization that is responsible for the billing account.
   */
  soldTo?: AddressDetails;
}

/**
 * The list of invoice sections.
 */
export interface InvoiceSectionListResult {
  /**
   * The list of invoice sections.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: InvoiceSection[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * An interface representing ErrorSubDetailsItem.
 */
export interface ErrorSubDetailsItem {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
}

/**
 * The details of the error.
 */
export interface ErrorDetails {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The sub details of the error.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorSubDetailsItem[];
}

/**
 * Error response indicates that the service is not able to process the incoming request. The
 * reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * The details of the error.
   */
  error?: ErrorDetails;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Billing.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed such as invoice and billing subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * Operation type such as read, write and delete.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
}

/**
 * A Billing REST API operation.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * The reason codes for the status of billing subscription.
 */
export interface SubscriptionBillingStatusReasonDetails {
  /**
   * Effective date.
   */
  effectiveDate?: Date;
  /**
   * The reason for the state of the subscription. Possible values include: 'Canceled', 'PastDue',
   * 'SuspiciousActivity', 'Other', 'Transferred', 'PolicyViolation', 'SpendingLimitReached',
   * 'Expired'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionStatusReason?: SubscriptionStatusReason;
}

/**
 * The Goods Services Tax details of the subscription. This property is available for agreement
 * type Microsoft Online Services Program and country India.
 */
export interface SubscriptionTaxDetails {
  /**
   * Represents Goods Services TaxId.
   */
  taxId?: string;
  /**
   * Two digit region code where subscription is taxed, e.g. MH, TN etc.
   */
  region?: string;
  /**
   * Tax Exemption status, Valid or Invalid.
   */
  status?: string;
  /**
   * The tax record type. Possible values include: 'AustraliaABN', 'CNPJId', 'GSTINID',
   * 'IndiaFederalServiceTaxID', 'IndiaPANID', 'IndiaStateCSTID', 'IndiaStateVATID', 'LoveCode',
   * 'MobileBarcode', 'NewZealandGST', 'RegistrationNumber', 'Tin', 'VatId'
   */
  taxRecordType?: TaxRecordType;
}

/**
 * A billing property.
 */
export interface BillingProperty extends Resource {
  /**
   * The notification email address for the account admin. This property is available for agreement
   * type Microsoft Online Services Program.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accountAdminNotificationEmailAddress?: string;
  /**
   * The signed agreement of the billing account. Possible values include:
   * 'MicrosoftCustomerAgreement', 'MicrosoftOnlineServicesProgram', 'MicrosoftPartnerAgreement',
   * 'EnterpriseAgreement'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingAccountAgreementType?: BillingAccountAgreementType;
  /**
   * The name of the billing account to which the subscription is billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingAccountDisplayName?: string;
  /**
   * The ID of the billing account to which the subscription is billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingAccountId?: string;
  /**
   * Country code for billing account's billing address.
   */
  billingAccountSoldToCountry?: string;
  /**
   * The current status of the billing account. Possible values include: 'Unknown', 'Active',
   * 'Deleted', 'Disabled', 'Expired', 'Transferred', 'Extended', 'Terminated', 'PendingReview',
   * 'UnderReview'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingAccountStatus?: BillingAccountStatus;
  /**
   * The type billing account. Possible values include: 'Enterprise', 'Individual', 'Partner',
   * 'USDoD', 'Reseller', 'ClassicPartner', 'Internal'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingAccountType?: BillingAccountType;
  /**
   * The ID of the billing profile to which the subscription is billed. This property is available
   * for agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile to which the subscription is billed. This property is
   * available for agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The billing profile spending limit. This property is available for agreement type Microsoft
   * Customer Agreement and Microsoft Partner Agreement. Possible values include: 'Off', 'On'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileSpendingLimit?: BillingProfileSpendingLimit;
  /**
   * The status of the billing profile. This property is available for agreement type Microsoft
   * Customer Agreement and Microsoft Partner Agreement. Possible values include: 'Active',
   * 'Disabled', 'Warned'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileStatus?: BillingProfileStatus;
  /**
   * The status reason code when the specified billing profile is in Disabled status. This property
   * is for agreement type Microsoft Customer Agreement and Microsoft Partner Agreement. Possible
   * values include: 'PastDue', 'SpendingLimitReached', 'SpendingLimitExpired'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileStatusReasonCode?: BillingProfileStatusReasonCode;
  /**
   * The cost center applied to the subscription. This property is available for agreement type
   * Microsoft Customer Agreement and Microsoft Partner Agreement.
   */
  costCenter?: string;
  /**
   * The ID of the customer to which the subscription is billed. This property is available for
   * agreement type Microsoft Partner Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerId?: string;
  /**
   * The display name of the customer to which the subscription is billed. This property is
   * available for agreement type Microsoft Partner Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerDisplayName?: string;
  /**
   * The end date of the free service benefit for the subscription.
   */
  freeServicesBenefitEndDate?: Date;
  /**
   * The ID of the invoice section to which the subscription is billed. This property is available
   * for agreement type Microsoft Customer Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionId?: string;
  /**
   * The name of the invoice section to which the subscription is billed. This property is
   * available for agreement type Microsoft Customer Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * Indicates whether user is the billing account admin for the subscription. This property is
   * available for agreement type Microsoft Online Services Program.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly isAccountAdmin?: boolean;
  /**
   * The sku ID of the Azure plan for the subscription. This property is available for agreement
   * type Microsoft Customer Agreement and Microsoft Partner Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuId?: string;
  /**
   * The sku description of the Azure plan for the subscription. This property is available for
   * agreement type Microsoft Customer Agreement and Microsoft Partner Agreement.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuDescription?: string;
  /**
   * The subscription status. Possible values include: 'Active', 'Deleted', 'Disabled', 'PastDue'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionBillingStatus?: SubscriptionBillingStatus;
  /**
   * The reason codes for the subscription status.
   */
  subscriptionBillingStatusDetails?: SubscriptionBillingStatusReasonDetails[];
  /**
   * The tax details of the subscription. This property is available for agreement type Microsoft
   * Online Services Program and country India.
   */
  subscriptionTaxDetails?: SubscriptionTaxDetails[];
  /**
   * The type of billing subscription. Possible values include: 'Benefit', 'Free', 'Paid',
   * 'PrePaid'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionBillingType?: SubscriptionBillingType;
  /**
   * The address of the individual or organization where service subscription is being used. This
   * property is available for agreement type Microsoft Online Services Program.
   */
  subscriptionServiceUsageAddress?: AddressDetails;
  /**
   * The Azure workload type of the subscription. Possible values include: 'Production', 'DevTest',
   * 'Internal'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionWorkloadType?: SubscriptionWorkloadType;
}

/**
 * The role assignment
 */
export interface BillingRoleAssignment extends Resource {
  /**
   * The date the role assignment was created.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdOn?: string;
  /**
   * The tenant Id of the user who created the role assignment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdByPrincipalTenantId?: string;
  /**
   * The principal Id of the user who created the role assignment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdByPrincipalId?: string;
  /**
   * The email address of the user who created the role assignment.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdByUserEmailAddress?: string;
  /**
   * The principal id of the user to whom the role was assigned.
   */
  principalId?: string;
  /**
   * The principal tenant id of the user to whom the role was assigned.
   */
  principalTenantId?: string;
  /**
   * The ID of the role definition.
   */
  roleDefinitionId?: string;
  /**
   * The scope at which the role was assigned.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly scope?: string;
  /**
   * The authentication type.
   */
  userAuthenticationType?: string;
  /**
   * The email address of the user.
   */
  userEmailAddress?: string;
}

/**
 * The request parameters to add the role assignment on a scope
 */
export interface BillingRoleAssignmentRequestProperties {
  /**
   * The user's principal id that the role gets assigned to
   */
  principalId?: string;
  /**
   * The role definition id
   */
  roleDefinitionId?: string;
}

/**
 * The subscription state reason.
 */
export interface SubscriptionSuspensionReason1 {
  /**
   * Subscription suspension reason. Possible values include: 'Canceled', 'PastDue',
   * 'SuspiciousActivity', 'Other', 'Transferred', 'PolicyViolation', 'SpendingLimitReached',
   * 'Expired'
   */
  value?: SubscriptionSuspensionReason;
}

/**
 * The amount.
 */
export interface Amount {
  /**
   * The currency for the amount value.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currency?: string;
  /**
   * Amount value.
   */
  value?: number;
}

/**
 * Details of the reseller.
 */
export interface Reseller {
  /**
   * The MPN ID of the reseller.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resellerId?: string;
  /**
   * The name of the reseller.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description?: string;
}

/**
 * A billing subscription.
 */
export interface BillingSubscription extends Resource {
  /**
   * The name of the subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly displayName?: string;
  /**
   * The ID of the subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subscriptionId?: string;
  /**
   * The current billing status of the subscription. Possible values include: 'Active', 'Inactive',
   * 'Abandoned', 'Deleted', 'Warning'
   */
  subscriptionBillingStatus?: BillingSubscriptionStatus;
  /**
   * The suspension reasons for current subscription.
   */
  suspensionReasons?: SubscriptionSuspensionReason1[];
  /**
   * The last month charges.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastMonthCharges?: Amount;
  /**
   * The current month to date charges.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly monthToDateCharges?: Amount;
  /**
   * The ID of the billing profile to which the subscription is billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileId?: string;
  /**
   * The name of the billing profile to which the subscription is billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly billingProfileDisplayName?: string;
  /**
   * The cost center applied to the subscription.
   */
  costCenter?: string;
  /**
   * The ID of the customer for whom the subscription was created. The field is applicable only for
   * Microsoft Partner Agreement billing account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerId?: string;
  /**
   * The name of the customer for whom the subscription was created. The field is applicable only
   * for Microsoft Partner Agreement billing account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly customerDisplayName?: string;
  /**
   * The ID of the invoice section to which the subscription is billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionId?: string;
  /**
   * The name of the invoice section to which the subscription is billed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly invoiceSectionDisplayName?: string;
  /**
   * Reseller for this subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reseller?: Reseller;
  /**
   * The sku ID of the Azure plan for the subscription.
   */
  skuId?: string;
  /**
   * The sku description of the Azure plan for the subscription.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly skuDescription?: string;
}

/**
 * Optional Parameters.
 */
export interface BillingAccountsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the soldTo, invoice sections and billing profiles.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface BillingAccountsGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the soldTo, invoice sections and billing profiles.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface BillingAccountsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the soldTo, invoice sections and billing profiles.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface BillingProfilesListByBillingAccountOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the invoice sections.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface BillingProfilesGetOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the invoice sections.
   */
  expand?: string;
}

/**
 * Optional Parameters.
 */
export interface BillingProfilesListByBillingAccountNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the invoice sections.
   */
  expand?: string;
}

/**
 * An interface representing BillingManagementClientOptions.
 */
export interface BillingManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The list of billing accounts.
 * @extends Array<BillingAccount>
 */
export interface BillingAccountListResult extends Array<BillingAccount> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The list of billing operations and a URL link to get the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The list of billing profiles.
 * @extends Array<BillingProfile>
 */
export interface BillingProfileListResult extends Array<BillingProfile> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * The list of billing subscriptions.
 * @extends Array<BillingSubscription>
 */
export interface BillingSubscriptionsListResult extends Array<BillingSubscription> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for AccountStatus.
 * Possible values include: 'Unknown', 'Active', 'Deleted', 'Disabled', 'Expired', 'Transferred',
 * 'Extended', 'Terminated', 'UnderReview'
 * @readonly
 * @enum {string}
 */
export type AccountStatus = 'Unknown' | 'Active' | 'Deleted' | 'Disabled' | 'Expired' | 'Transferred' | 'Extended' | 'Terminated' | 'UnderReview';

/**
 * Defines values for AccountStatusReasonCode.
 * Possible values include: 'UnusalActivity'
 * @readonly
 * @enum {string}
 */
export type AccountStatusReasonCode = 'UnusalActivity';

/**
 * Defines values for AccountType.
 * Possible values include: 'Enterprise', 'Individual', 'Partner'
 * @readonly
 * @enum {string}
 */
export type AccountType = 'Enterprise' | 'Individual' | 'Partner';

/**
 * Defines values for AgreementType.
 * Possible values include: 'MicrosoftCustomerAgreement', 'EnterpriseAgreement',
 * 'MicrosoftOnlineServicesProgram', 'MicrosoftPartnerAgreement'
 * @readonly
 * @enum {string}
 */
export type AgreementType = 'MicrosoftCustomerAgreement' | 'EnterpriseAgreement' | 'MicrosoftOnlineServicesProgram' | 'MicrosoftPartnerAgreement';

/**
 * Defines values for BillingRelationshipType.
 * Possible values include: 'Direct', 'IndirectCustomer', 'IndirectPartner', 'CSPPartner'
 * @readonly
 * @enum {string}
 */
export type BillingRelationshipType = 'Direct' | 'IndirectCustomer' | 'IndirectPartner' | 'CSPPartner';

/**
 * Defines values for InvoiceSectionState.
 * Possible values include: 'Active', 'Restricted'
 * @readonly
 * @enum {string}
 */
export type InvoiceSectionState = 'Active' | 'Restricted';

/**
 * Defines values for TargetCloud.
 * Possible values include: 'USGov', 'USNat', 'USSec'
 * @readonly
 * @enum {string}
 */
export type TargetCloud = 'USGov' | 'USNat' | 'USSec';

/**
 * Defines values for BillingProfileStatus.
 * Possible values include: 'Active', 'Disabled', 'Warned'
 * @readonly
 * @enum {string}
 */
export type BillingProfileStatus = 'Active' | 'Disabled' | 'Warned';

/**
 * Defines values for StatusReasonCode.
 * Possible values include: 'PastDue', 'SpendingLimitReached', 'SpendingLimitExpired'
 * @readonly
 * @enum {string}
 */
export type StatusReasonCode = 'PastDue' | 'SpendingLimitReached' | 'SpendingLimitExpired';

/**
 * Defines values for SpendingLimit.
 * Possible values include: 'Off', 'On'
 * @readonly
 * @enum {string}
 */
export type SpendingLimit = 'Off' | 'On';

/**
 * Defines values for Type.
 * Possible values include: 'FreeAccount', 'Sandbox'
 * @readonly
 * @enum {string}
 */
export type Type = 'FreeAccount' | 'Sandbox';

/**
 * Defines values for SpendingLimitStatus.
 * Possible values include: 'Active', 'Expired', 'Reached', 'Removed'
 * @readonly
 * @enum {string}
 */
export type SpendingLimitStatus = 'Active' | 'Expired' | 'Reached' | 'Removed';

/**
 * Defines values for BillingAccountAgreementType.
 * Possible values include: 'MicrosoftCustomerAgreement', 'MicrosoftOnlineServicesProgram',
 * 'MicrosoftPartnerAgreement', 'EnterpriseAgreement'
 * @readonly
 * @enum {string}
 */
export type BillingAccountAgreementType = 'MicrosoftCustomerAgreement' | 'MicrosoftOnlineServicesProgram' | 'MicrosoftPartnerAgreement' | 'EnterpriseAgreement';

/**
 * Defines values for BillingAccountStatus.
 * Possible values include: 'Unknown', 'Active', 'Deleted', 'Disabled', 'Expired', 'Transferred',
 * 'Extended', 'Terminated', 'PendingReview', 'UnderReview'
 * @readonly
 * @enum {string}
 */
export type BillingAccountStatus = 'Unknown' | 'Active' | 'Deleted' | 'Disabled' | 'Expired' | 'Transferred' | 'Extended' | 'Terminated' | 'PendingReview' | 'UnderReview';

/**
 * Defines values for BillingAccountType.
 * Possible values include: 'Enterprise', 'Individual', 'Partner', 'USDoD', 'Reseller',
 * 'ClassicPartner', 'Internal'
 * @readonly
 * @enum {string}
 */
export type BillingAccountType = 'Enterprise' | 'Individual' | 'Partner' | 'USDoD' | 'Reseller' | 'ClassicPartner' | 'Internal';

/**
 * Defines values for BillingProfileSpendingLimit.
 * Possible values include: 'Off', 'On'
 * @readonly
 * @enum {string}
 */
export type BillingProfileSpendingLimit = 'Off' | 'On';

/**
 * Defines values for BillingProfileStatusReasonCode.
 * Possible values include: 'PastDue', 'SpendingLimitReached', 'SpendingLimitExpired'
 * @readonly
 * @enum {string}
 */
export type BillingProfileStatusReasonCode = 'PastDue' | 'SpendingLimitReached' | 'SpendingLimitExpired';

/**
 * Defines values for SubscriptionBillingStatus.
 * Possible values include: 'Active', 'Deleted', 'Disabled', 'PastDue'
 * @readonly
 * @enum {string}
 */
export type SubscriptionBillingStatus = 'Active' | 'Deleted' | 'Disabled' | 'PastDue';

/**
 * Defines values for SubscriptionStatusReason.
 * Possible values include: 'Canceled', 'PastDue', 'SuspiciousActivity', 'Other', 'Transferred',
 * 'PolicyViolation', 'SpendingLimitReached', 'Expired'
 * @readonly
 * @enum {string}
 */
export type SubscriptionStatusReason = 'Canceled' | 'PastDue' | 'SuspiciousActivity' | 'Other' | 'Transferred' | 'PolicyViolation' | 'SpendingLimitReached' | 'Expired';

/**
 * Defines values for TaxRecordType.
 * Possible values include: 'AustraliaABN', 'CNPJId', 'GSTINID', 'IndiaFederalServiceTaxID',
 * 'IndiaPANID', 'IndiaStateCSTID', 'IndiaStateVATID', 'LoveCode', 'MobileBarcode',
 * 'NewZealandGST', 'RegistrationNumber', 'Tin', 'VatId'
 * @readonly
 * @enum {string}
 */
export type TaxRecordType = 'AustraliaABN' | 'CNPJId' | 'GSTINID' | 'IndiaFederalServiceTaxID' | 'IndiaPANID' | 'IndiaStateCSTID' | 'IndiaStateVATID' | 'LoveCode' | 'MobileBarcode' | 'NewZealandGST' | 'RegistrationNumber' | 'Tin' | 'VatId';

/**
 * Defines values for SubscriptionBillingType.
 * Possible values include: 'Benefit', 'Free', 'Paid', 'PrePaid'
 * @readonly
 * @enum {string}
 */
export type SubscriptionBillingType = 'Benefit' | 'Free' | 'Paid' | 'PrePaid';

/**
 * Defines values for SubscriptionWorkloadType.
 * Possible values include: 'Production', 'DevTest', 'Internal'
 * @readonly
 * @enum {string}
 */
export type SubscriptionWorkloadType = 'Production' | 'DevTest' | 'Internal';

/**
 * Defines values for BillingSubscriptionStatus.
 * Possible values include: 'Active', 'Inactive', 'Abandoned', 'Deleted', 'Warning'
 * @readonly
 * @enum {string}
 */
export type BillingSubscriptionStatus = 'Active' | 'Inactive' | 'Abandoned' | 'Deleted' | 'Warning';

/**
 * Defines values for SubscriptionSuspensionReason.
 * Possible values include: 'Canceled', 'PastDue', 'SuspiciousActivity', 'Other', 'Transferred',
 * 'PolicyViolation', 'SpendingLimitReached', 'Expired'
 * @readonly
 * @enum {string}
 */
export type SubscriptionSuspensionReason = 'Canceled' | 'PastDue' | 'SuspiciousActivity' | 'Other' | 'Transferred' | 'PolicyViolation' | 'SpendingLimitReached' | 'Expired';

/**
 * Contains response data for the list operation.
 */
export type BillingAccountsListResponse = BillingAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccountListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BillingAccountsGetResponse = BillingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccount;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BillingAccountsUpdateResponse = BillingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccount;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type BillingAccountsBeginUpdateResponse = BillingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccount;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type BillingAccountsListNextResponse = BillingAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingAccountListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingProfilesListByBillingAccountResponse = BillingProfileListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProfileListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BillingProfilesGetResponse = BillingProfile & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProfile;
    };
};

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type BillingProfilesListByBillingAccountNextResponse = BillingProfileListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProfileListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type BillingPropertyGetResponse = BillingProperty & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProperty;
    };
};

/**
 * Contains response data for the update operation.
 */
export type BillingPropertyUpdateResponse = BillingProperty & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingProperty;
    };
};

/**
 * Contains response data for the addByBillingAccount operation.
 */
export type BillingRoleAssignmentsAddByBillingAccountResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignment;
    };
};

/**
 * Contains response data for the addByInvoiceSection operation.
 */
export type BillingRoleAssignmentsAddByInvoiceSectionResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignment;
    };
};

/**
 * Contains response data for the addByBillingProfile operation.
 */
export type BillingRoleAssignmentsAddByBillingProfileResponse = BillingRoleAssignment & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingRoleAssignment;
    };
};

/**
 * Contains response data for the listByBillingAccount operation.
 */
export type BillingSubscriptionsListByBillingAccountResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscriptionsListResult;
    };
};

/**
 * Contains response data for the listByBillingAccountNext operation.
 */
export type BillingSubscriptionsListByBillingAccountNextResponse = BillingSubscriptionsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BillingSubscriptionsListResult;
    };
};
