/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const DocumentFilter: msRest.CompositeMapper = {
  serializedName: "DocumentFilter",
  type: {
    name: "Composite",
    className: "DocumentFilter",
    modelProperties: {
      prefix: {
        serializedName: "prefix",
        type: {
          name: "String"
        }
      },
      suffix: {
        serializedName: "suffix",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SourceInput: msRest.CompositeMapper = {
  serializedName: "SourceInput",
  type: {
    name: "Composite",
    className: "SourceInput",
    modelProperties: {
      sourceUrl: {
        required: true,
        serializedName: "sourceUrl",
        type: {
          name: "String"
        }
      },
      filter: {
        serializedName: "filter",
        type: {
          name: "Composite",
          className: "DocumentFilter"
        }
      },
      language: {
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      storageSource: {
        serializedName: "storageSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Glossary: msRest.CompositeMapper = {
  serializedName: "Glossary",
  type: {
    name: "Composite",
    className: "Glossary",
    modelProperties: {
      glossaryUrl: {
        required: true,
        serializedName: "glossaryUrl",
        type: {
          name: "String"
        }
      },
      format: {
        serializedName: "format",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TargetInput: msRest.CompositeMapper = {
  serializedName: "TargetInput",
  type: {
    name: "Composite",
    className: "TargetInput",
    modelProperties: {
      targetUrl: {
        required: true,
        serializedName: "targetUrl",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      language: {
        required: true,
        serializedName: "language",
        type: {
          name: "String"
        }
      },
      glossaries: {
        serializedName: "glossaries",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Glossary"
            }
          }
        }
      },
      storageSource: {
        serializedName: "storageSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const BatchRequest: msRest.CompositeMapper = {
  serializedName: "BatchRequest",
  type: {
    name: "Composite",
    className: "BatchRequest",
    modelProperties: {
      source: {
        required: true,
        serializedName: "source",
        type: {
          name: "Composite",
          className: "SourceInput"
        }
      },
      targets: {
        required: true,
        serializedName: "targets",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "TargetInput"
            }
          }
        }
      }
    }
  }
};

export const BatchSubmissionRequest: msRest.CompositeMapper = {
  serializedName: "BatchSubmissionRequest",
  type: {
    name: "Composite",
    className: "BatchSubmissionRequest",
    modelProperties: {
      inputs: {
        required: true,
        serializedName: "inputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BatchRequest"
            }
          }
        }
      }
    }
  }
};

export const StatusSummary: msRest.CompositeMapper = {
  serializedName: "StatusSummary",
  type: {
    name: "Composite",
    className: "StatusSummary",
    modelProperties: {
      total: {
        serializedName: "total",
        type: {
          name: "Number"
        }
      },
      failed: {
        serializedName: "failed",
        type: {
          name: "Number"
        }
      },
      success: {
        serializedName: "success",
        type: {
          name: "Number"
        }
      },
      inProgress: {
        serializedName: "inProgress",
        type: {
          name: "Number"
        }
      },
      notYetStarted: {
        serializedName: "notYetStarted",
        type: {
          name: "Number"
        }
      },
      cancelled: {
        serializedName: "cancelled",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const BatchStatusDetail: msRest.CompositeMapper = {
  serializedName: "BatchStatusDetail",
  type: {
    name: "Composite",
    className: "BatchStatusDetail",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      createdDateTimeUtc: {
        required: true,
        serializedName: "createdDateTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      lastActionDateTimeUtc: {
        required: true,
        serializedName: "lastActionDateTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      summary: {
        required: true,
        serializedName: "summary",
        type: {
          name: "Composite",
          className: "StatusSummary"
        }
      }
    }
  }
};

export const BatchStatusResponse: msRest.CompositeMapper = {
  serializedName: "BatchStatusResponse",
  type: {
    name: "Composite",
    className: "BatchStatusResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "BatchStatusDetail"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const InnerErrorV2: msRest.CompositeMapper = {
  serializedName: "InnerErrorV2",
  type: {
    name: "Composite",
    className: "InnerErrorV2",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      error: {
        readOnly: true,
        serializedName: "error",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      innerError: {
        serializedName: "innerError",
        type: {
          name: "Composite",
          className: "InnerErrorV2"
        }
      }
    }
  }
};

export const ErrorV2: msRest.CompositeMapper = {
  serializedName: "ErrorV2",
  type: {
    name: "Composite",
    className: "ErrorV2",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      target: {
        readOnly: true,
        serializedName: "target",
        type: {
          name: "String"
        }
      },
      innerError: {
        serializedName: "innerError",
        type: {
          name: "Composite",
          className: "InnerErrorV2"
        }
      }
    }
  }
};

export const DocumentStatusDetail: msRest.CompositeMapper = {
  serializedName: "DocumentStatusDetail",
  type: {
    name: "Composite",
    className: "DocumentStatusDetail",
    modelProperties: {
      path: {
        required: true,
        serializedName: "path",
        type: {
          name: "String"
        }
      },
      createdDateTimeUtc: {
        required: true,
        serializedName: "createdDateTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      lastActionDateTimeUtc: {
        required: true,
        serializedName: "lastActionDateTimeUtc",
        type: {
          name: "DateTime"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      detectedLanguage: {
        serializedName: "detectedLanguage",
        type: {
          name: "String"
        }
      },
      to: {
        required: true,
        serializedName: "to",
        type: {
          name: "String"
        }
      },
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorV2"
        }
      },
      progress: {
        serializedName: "progress",
        constraints: {
          InclusiveMaximum: 1,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const DocumentStatusResponse: msRest.CompositeMapper = {
  serializedName: "DocumentStatusResponse",
  type: {
    name: "Composite",
    className: "DocumentStatusResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DocumentStatusDetail"
            }
          }
        }
      },
      nextLink: {
        serializedName: "@nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FileFormat: msRest.CompositeMapper = {
  serializedName: "FileFormat",
  type: {
    name: "Composite",
    className: "FileFormat",
    modelProperties: {
      format: {
        serializedName: "format",
        type: {
          name: "String"
        }
      },
      fileExtensions: {
        serializedName: "fileExtensions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      contentTypes: {
        serializedName: "contentTypes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const FileFormatListResult: msRest.CompositeMapper = {
  serializedName: "FileFormatListResult",
  type: {
    name: "Composite",
    className: "FileFormatListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "FileFormat"
            }
          }
        }
      }
    }
  }
};

export const StorageSourceListResult: msRest.CompositeMapper = {
  serializedName: "StorageSourceListResult",
  type: {
    name: "Composite",
    className: "StorageSourceListResult",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ErrorResponseV2: msRest.CompositeMapper = {
  serializedName: "ErrorResponseV2",
  type: {
    name: "Composite",
    className: "ErrorResponseV2",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ErrorV2"
        }
      }
    }
  }
};

export const TranslationSubmitBatchRequestHeaders: msRest.CompositeMapper = {
  serializedName: "translation-submitbatchrequest-headers",
  type: {
    name: "Composite",
    className: "TranslationSubmitBatchRequestHeaders",
    modelProperties: {
      operationLocation: {
        serializedName: "operation-location",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TranslationGetOperationsHeaders: msRest.CompositeMapper = {
  serializedName: "translation-getoperations-headers",
  type: {
    name: "Composite",
    className: "TranslationGetOperationsHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TranslationGetDocumentStatusHeaders: msRest.CompositeMapper = {
  serializedName: "translation-getdocumentstatus-headers",
  type: {
    name: "Composite",
    className: "TranslationGetDocumentStatusHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TranslationGetOperationStatusHeaders: msRest.CompositeMapper = {
  serializedName: "translation-getoperationstatus-headers",
  type: {
    name: "Composite",
    className: "TranslationGetOperationStatusHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const TranslationGetOperationDocumentsStatusHeaders: msRest.CompositeMapper = {
  serializedName: "translation-getoperationdocumentsstatus-headers",
  type: {
    name: "Composite",
    className: "TranslationGetOperationDocumentsStatusHeaders",
    modelProperties: {
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "Number"
        }
      },
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};
