/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/learningMetricsMappers";
import * as Parameters from "../models/parameters";
import { PersonalizerClientContext } from "../personalizerClientContext";

/** Class representing a LearningMetrics. */
export class LearningMetrics {
  private readonly client: PersonalizerClientContext;

  /**
   * Create a LearningMetrics.
   * @param {PersonalizerClientContext} client Reference to the service client.
   */
  constructor(client: PersonalizerClientContext) {
    this.client = client;
  }

  /**
   * Get learning performance metrics aggregated by time or events.
   * @summary Get learning performance metrics.
   * @param [options] The optional parameters
   * @returns Promise<Models.LearningMetricsGetResponse>
   */
  get(options?: Models.LearningMetricsGetOptionalParams): Promise<Models.LearningMetricsGetResponse>;
  /**
   * @param callback The callback
   */
  get(callback: msRest.ServiceCallback<Models.Metric[][]>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  get(options: Models.LearningMetricsGetOptionalParams, callback: msRest.ServiceCallback<Models.Metric[][]>): void;
  get(options?: Models.LearningMetricsGetOptionalParams | msRest.ServiceCallback<Models.Metric[][]>, callback?: msRest.ServiceCallback<Models.Metric[][]>): Promise<Models.LearningMetricsGetResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      getOperationSpec,
      callback) as Promise<Models.LearningMetricsGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "metrics/learning",
  urlParameters: [
    Parameters.endpoint
  ],
  queryParameters: [
    Parameters.startDate,
    Parameters.endDate,
    Parameters.aggregationInterval,
    Parameters.numberOfRecentEvents,
    Parameters.aggregationEventCount
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "Metric"
                }
              }
            }
          }
        }
      }
    },
    default: {}
  },
  serializer
};
