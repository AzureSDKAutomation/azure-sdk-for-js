/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/onlineEndpointsMappers";
import * as Parameters from "../models/parameters";
import { AzureMachineLearningWorkspacesContext } from "../azureMachineLearningWorkspacesContext";

/** Class representing a OnlineEndpoints. */
export class OnlineEndpoints {
  private readonly client: AzureMachineLearningWorkspacesContext;

  /**
   * Create a OnlineEndpoints.
   * @param {AzureMachineLearningWorkspacesContext} client Reference to the service client.
   */
  constructor(client: AzureMachineLearningWorkspacesContext) {
    this.client = client;
  }

  /**
   * @summary List Online Endpoints.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineEndpointsListResponse>
   */
  list(resourceGroupName: string, workspaceName: string, options?: Models.OnlineEndpointsListOptionalParams): Promise<Models.OnlineEndpointsListResponse>;
  /**
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  list(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.OnlineEndpointTrackedResourceArmPaginatedResult>): void;
  /**
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, workspaceName: string, options: Models.OnlineEndpointsListOptionalParams, callback: msRest.ServiceCallback<Models.OnlineEndpointTrackedResourceArmPaginatedResult>): void;
  list(resourceGroupName: string, workspaceName: string, options?: Models.OnlineEndpointsListOptionalParams | msRest.ServiceCallback<Models.OnlineEndpointTrackedResourceArmPaginatedResult>, callback?: msRest.ServiceCallback<Models.OnlineEndpointTrackedResourceArmPaginatedResult>): Promise<Models.OnlineEndpointsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.OnlineEndpointsListResponse>;
  }

  /**
   * @summary Delete Online Endpoint.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineEndpointsDeleteResponse>
   */
  deleteMethod(endpointName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.OnlineEndpointsDeleteResponse> {
    return this.beginDeleteMethod(endpointName,resourceGroupName,workspaceName,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.OnlineEndpointsDeleteResponse>;
  }

  /**
   * @summary Get Online Endpoint.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineEndpointsGetResponse>
   */
  get(endpointName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.OnlineEndpointsGetResponse>;
  /**
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  get(endpointName: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.OnlineEndpointTrackedResource>): void;
  /**
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(endpointName: string, resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OnlineEndpointTrackedResource>): void;
  get(endpointName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OnlineEndpointTrackedResource>, callback?: msRest.ServiceCallback<Models.OnlineEndpointTrackedResource>): Promise<Models.OnlineEndpointsGetResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        resourceGroupName,
        workspaceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.OnlineEndpointsGetResponse>;
  }

  /**
   * @summary Create or update Online Endpoint.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body Online Endpoint entity to apply during operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineEndpointsCreateOrUpdateResponse>
   */
  createOrUpdate(endpointName: string, resourceGroupName: string, workspaceName: string, body: Models.OnlineEndpointTrackedResource, options?: msRest.RequestOptionsBase): Promise<Models.OnlineEndpointsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(endpointName,resourceGroupName,workspaceName,body,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.OnlineEndpointsCreateOrUpdateResponse>;
  }

  /**
   * @summary Update Online Endpoint.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body Online Endpoint entity to apply during operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineEndpointsUpdateResponse>
   */
  update(endpointName: string, resourceGroupName: string, workspaceName: string, body: Models.PartialOnlineEndpointPartialTrackedResource, options?: msRest.RequestOptionsBase): Promise<Models.OnlineEndpointsUpdateResponse> {
    return this.beginUpdate(endpointName,resourceGroupName,workspaceName,body,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.OnlineEndpointsUpdateResponse>;
  }

  /**
   * @summary Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body RegenerateKeys request .
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineEndpointsRegenerateKeysResponse>
   */
  regenerateKeys(endpointName: string, resourceGroupName: string, workspaceName: string, body: Models.RegenerateEndpointKeysRequest, options?: msRest.RequestOptionsBase): Promise<Models.OnlineEndpointsRegenerateKeysResponse> {
    return this.beginRegenerateKeys(endpointName,resourceGroupName,workspaceName,body,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.OnlineEndpointsRegenerateKeysResponse>;
  }

  /**
   * @summary List EndpointAuthKeys for an Endpoint using Key-based authentication.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineEndpointsListKeysResponse>
   */
  listKeys(endpointName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.OnlineEndpointsListKeysResponse>;
  /**
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  listKeys(endpointName: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.EndpointAuthKeys>): void;
  /**
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  listKeys(endpointName: string, resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointAuthKeys>): void;
  listKeys(endpointName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EndpointAuthKeys>, callback?: msRest.ServiceCallback<Models.EndpointAuthKeys>): Promise<Models.OnlineEndpointsListKeysResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        resourceGroupName,
        workspaceName,
        options
      },
      listKeysOperationSpec,
      callback) as Promise<Models.OnlineEndpointsListKeysResponse>;
  }

  /**
   * @summary Retrieve a valid AAD token for an Endpoint using AMLToken-based authentication.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineEndpointsGetTokenResponse>
   */
  getToken(endpointName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.OnlineEndpointsGetTokenResponse>;
  /**
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  getToken(endpointName: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.EndpointAuthToken>): void;
  /**
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  getToken(endpointName: string, resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointAuthToken>): void;
  getToken(endpointName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EndpointAuthToken>, callback?: msRest.ServiceCallback<Models.EndpointAuthToken>): Promise<Models.OnlineEndpointsGetTokenResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        resourceGroupName,
        workspaceName,
        options
      },
      getTokenOperationSpec,
      callback) as Promise<Models.OnlineEndpointsGetTokenResponse>;
  }

  /**
   * @summary Delete Online Endpoint.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(endpointName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        endpointName,
        resourceGroupName,
        workspaceName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * @summary Create or update Online Endpoint.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body Online Endpoint entity to apply during operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(endpointName: string, resourceGroupName: string, workspaceName: string, body: Models.OnlineEndpointTrackedResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        endpointName,
        resourceGroupName,
        workspaceName,
        body,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * @summary Update Online Endpoint.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body Online Endpoint entity to apply during operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdate(endpointName: string, resourceGroupName: string, workspaceName: string, body: Models.PartialOnlineEndpointPartialTrackedResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        endpointName,
        resourceGroupName,
        workspaceName,
        body,
        options
      },
      beginUpdateOperationSpec,
      options);
  }

  /**
   * @summary Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication.
   * @param endpointName Online Endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body RegenerateKeys request .
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginRegenerateKeys(endpointName: string, resourceGroupName: string, workspaceName: string, body: Models.RegenerateEndpointKeysRequest, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        endpointName,
        resourceGroupName,
        workspaceName,
        body,
        options
      },
      beginRegenerateKeysOperationSpec,
      options);
  }

  /**
   * @summary List Online Endpoints.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineEndpointsListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.OnlineEndpointsListNextOptionalParams): Promise<Models.OnlineEndpointsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OnlineEndpointTrackedResourceArmPaginatedResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.OnlineEndpointsListNextOptionalParams, callback: msRest.ServiceCallback<Models.OnlineEndpointTrackedResourceArmPaginatedResult>): void;
  listNext(nextPageLink: string, options?: Models.OnlineEndpointsListNextOptionalParams | msRest.ServiceCallback<Models.OnlineEndpointTrackedResourceArmPaginatedResult>, callback?: msRest.ServiceCallback<Models.OnlineEndpointTrackedResourceArmPaginatedResult>): Promise<Models.OnlineEndpointsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.OnlineEndpointsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.name2,
    Parameters.count1,
    Parameters.computeType,
    Parameters.skiptoken,
    Parameters.tags,
    Parameters.properties,
    Parameters.orderBy1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OnlineEndpointTrackedResourceArmPaginatedResult
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OnlineEndpointTrackedResource
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const listKeysOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/listKeys",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.EndpointAuthKeys
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const getTokenOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/token",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.EndpointAuthToken
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      headersMapper: Mappers.OnlineEndpointsDeleteHeaders
    },
    202: {
      headersMapper: Mappers.OnlineEndpointsDeleteHeaders
    },
    204: {
      headersMapper: Mappers.OnlineEndpointsDeleteHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.OnlineEndpointsDeleteHeaders
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}",
  urlParameters: [
    Parameters.endpointName1,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.OnlineEndpointTrackedResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.OnlineEndpointTrackedResource,
      headersMapper: Mappers.OnlineEndpointsCreateOrUpdateHeaders
    },
    201: {
      bodyMapper: Mappers.OnlineEndpointTrackedResource,
      headersMapper: Mappers.OnlineEndpointsCreateOrUpdateHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.OnlineEndpointsCreateOrUpdateHeaders
    }
  },
  serializer
};

const beginUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.PartialOnlineEndpointPartialTrackedResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.OnlineEndpointTrackedResource,
      headersMapper: Mappers.OnlineEndpointsUpdateHeaders
    },
    202: {
      headersMapper: Mappers.OnlineEndpointsUpdateHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.OnlineEndpointsUpdateHeaders
    }
  },
  serializer
};

const beginRegenerateKeysOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/regenerateKeys",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.RegenerateEndpointKeysRequest,
      required: true
    }
  },
  responses: {
    200: {
      headersMapper: Mappers.OnlineEndpointsRegenerateKeysHeaders
    },
    202: {
      headersMapper: Mappers.OnlineEndpointsRegenerateKeysHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.OnlineEndpointsRegenerateKeysHeaders
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.name2,
    Parameters.count1,
    Parameters.computeType,
    Parameters.skiptoken,
    Parameters.tags,
    Parameters.properties,
    Parameters.orderBy1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OnlineEndpointTrackedResourceArmPaginatedResult
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};
