/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/batchDeploymentsMappers";
import * as Parameters from "../models/parameters";
import { AzureMachineLearningWorkspacesContext } from "../azureMachineLearningWorkspacesContext";

/** Class representing a BatchDeployments. */
export class BatchDeployments {
  private readonly client: AzureMachineLearningWorkspacesContext;

  /**
   * Create a BatchDeployments.
   * @param {AzureMachineLearningWorkspacesContext} client Reference to the service client.
   */
  constructor(client: AzureMachineLearningWorkspacesContext) {
    this.client = client;
  }

  /**
   * @summary Creates a batch inference deployment.
   * @param endpointName Inference endpoint name
   * @param deploymentName The identifier for the Batch inference deployment.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.BatchDeploymentsCreateOrUpdateResponse>
   */
  createOrUpdate(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: Models.BatchDeploymentsCreateOrUpdateOptionalParams): Promise<Models.BatchDeploymentsCreateOrUpdateResponse>;
  /**
   * @param endpointName Inference endpoint name
   * @param deploymentName The identifier for the Batch inference deployment.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  createOrUpdate(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.BatchDeploymentTrackedResource>): void;
  /**
   * @param endpointName Inference endpoint name
   * @param deploymentName The identifier for the Batch inference deployment.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options: Models.BatchDeploymentsCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.BatchDeploymentTrackedResource>): void;
  createOrUpdate(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: Models.BatchDeploymentsCreateOrUpdateOptionalParams | msRest.ServiceCallback<Models.BatchDeploymentTrackedResource>, callback?: msRest.ServiceCallback<Models.BatchDeploymentTrackedResource>): Promise<Models.BatchDeploymentsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        deploymentName,
        resourceGroupName,
        workspaceName,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.BatchDeploymentsCreateOrUpdateResponse>;
  }

  /**
   * @summary Gets a batch inference deployment by id.
   * @param endpointName Endpoint name
   * @param deploymentName The identifier for the Batch deployments.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.BatchDeploymentsGetResponse>
   */
  get(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.BatchDeploymentsGetResponse>;
  /**
   * @param endpointName Endpoint name
   * @param deploymentName The identifier for the Batch deployments.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  get(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.BatchDeploymentTrackedResource>): void;
  /**
   * @param endpointName Endpoint name
   * @param deploymentName The identifier for the Batch deployments.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BatchDeploymentTrackedResource>): void;
  get(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BatchDeploymentTrackedResource>, callback?: msRest.ServiceCallback<Models.BatchDeploymentTrackedResource>): Promise<Models.BatchDeploymentsGetResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        deploymentName,
        resourceGroupName,
        workspaceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.BatchDeploymentsGetResponse>;
  }

  /**
   * @summary Delete Batch Inference deployment.
   * @param endpointName Endpoint name
   * @param deploymentName Inference deployment identifier.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param endpointName Endpoint name
   * @param deploymentName Inference deployment identifier.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  deleteMethod(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param endpointName Endpoint name
   * @param deploymentName Inference deployment identifier.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        deploymentName,
        resourceGroupName,
        workspaceName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * @summary Lists Batch inference deployments in the workspace.
   * @param endpointName Endpoint name
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.BatchDeploymentsListResponse>
   */
  list(endpointName: string, resourceGroupName: string, workspaceName: string, options?: Models.BatchDeploymentsListOptionalParams): Promise<Models.BatchDeploymentsListResponse>;
  /**
   * @param endpointName Endpoint name
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  list(endpointName: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.BatchDeploymentTrackedResourceArmPaginatedResult>): void;
  /**
   * @param endpointName Endpoint name
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(endpointName: string, resourceGroupName: string, workspaceName: string, options: Models.BatchDeploymentsListOptionalParams, callback: msRest.ServiceCallback<Models.BatchDeploymentTrackedResourceArmPaginatedResult>): void;
  list(endpointName: string, resourceGroupName: string, workspaceName: string, options?: Models.BatchDeploymentsListOptionalParams | msRest.ServiceCallback<Models.BatchDeploymentTrackedResourceArmPaginatedResult>, callback?: msRest.ServiceCallback<Models.BatchDeploymentTrackedResourceArmPaginatedResult>): Promise<Models.BatchDeploymentsListResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        resourceGroupName,
        workspaceName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.BatchDeploymentsListResponse>;
  }

  /**
   * @summary Lists Batch inference deployments in the workspace.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.BatchDeploymentsListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.BatchDeploymentsListNextOptionalParams): Promise<Models.BatchDeploymentsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BatchDeploymentTrackedResourceArmPaginatedResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.BatchDeploymentsListNextOptionalParams, callback: msRest.ServiceCallback<Models.BatchDeploymentTrackedResourceArmPaginatedResult>): void;
  listNext(nextPageLink: string, options?: Models.BatchDeploymentsListNextOptionalParams | msRest.ServiceCallback<Models.BatchDeploymentTrackedResourceArmPaginatedResult>, callback?: msRest.ServiceCallback<Models.BatchDeploymentTrackedResourceArmPaginatedResult>): Promise<Models.BatchDeploymentsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.BatchDeploymentsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}",
  urlParameters: [
    Parameters.endpointName,
    Parameters.deploymentName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: [
      "options",
      "body"
    ],
    mapper: Mappers.BatchDeploymentTrackedResource
  },
  responses: {
    200: {
      bodyMapper: Mappers.BatchDeploymentTrackedResource
    },
    201: {
      bodyMapper: Mappers.BatchDeploymentTrackedResource
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}",
  urlParameters: [
    Parameters.endpointName,
    Parameters.deploymentName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BatchDeploymentTrackedResource
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}",
  urlParameters: [
    Parameters.endpointName,
    Parameters.deploymentName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments",
  urlParameters: [
    Parameters.endpointName,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.skiptoken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BatchDeploymentTrackedResourceArmPaginatedResult
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.skiptoken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BatchDeploymentTrackedResourceArmPaginatedResult
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};
