/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/onlineDeploymentsMappers";
import * as Parameters from "../models/parameters";
import { AzureMachineLearningWorkspacesContext } from "../azureMachineLearningWorkspacesContext";

/** Class representing a OnlineDeployments. */
export class OnlineDeployments {
  private readonly client: AzureMachineLearningWorkspacesContext;

  /**
   * Create a OnlineDeployments.
   * @param {AzureMachineLearningWorkspacesContext} client Reference to the service client.
   */
  constructor(client: AzureMachineLearningWorkspacesContext) {
    this.client = client;
  }

  /**
   * @summary List Inference Endpoint Deployments.
   * @param endpointName Inference endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineDeploymentsListResponse>
   */
  list(endpointName: string, resourceGroupName: string, workspaceName: string, options?: Models.OnlineDeploymentsListOptionalParams): Promise<Models.OnlineDeploymentsListResponse>;
  /**
   * @param endpointName Inference endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  list(endpointName: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.OnlineDeploymentTrackedResourceArmPaginatedResult>): void;
  /**
   * @param endpointName Inference endpoint name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(endpointName: string, resourceGroupName: string, workspaceName: string, options: Models.OnlineDeploymentsListOptionalParams, callback: msRest.ServiceCallback<Models.OnlineDeploymentTrackedResourceArmPaginatedResult>): void;
  list(endpointName: string, resourceGroupName: string, workspaceName: string, options?: Models.OnlineDeploymentsListOptionalParams | msRest.ServiceCallback<Models.OnlineDeploymentTrackedResourceArmPaginatedResult>, callback?: msRest.ServiceCallback<Models.OnlineDeploymentTrackedResourceArmPaginatedResult>): Promise<Models.OnlineDeploymentsListResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        resourceGroupName,
        workspaceName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.OnlineDeploymentsListResponse>;
  }

  /**
   * @summary Delete Inference Endpoint Deployment.
   * @param endpointName Inference endpoint name.
   * @param deploymentName Inference Endpoint Deployment name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineDeploymentsDeleteResponse>
   */
  deleteMethod(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.OnlineDeploymentsDeleteResponse> {
    return this.beginDeleteMethod(endpointName,deploymentName,resourceGroupName,workspaceName,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.OnlineDeploymentsDeleteResponse>;
  }

  /**
   * @summary Get Inference Deployment Deployment.
   * @param endpointName Inference endpoint name.
   * @param deploymentName Inference Endpoint Deployment name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineDeploymentsGetResponse>
   */
  get(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.OnlineDeploymentsGetResponse>;
  /**
   * @param endpointName Inference endpoint name.
   * @param deploymentName Inference Endpoint Deployment name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  get(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.OnlineDeploymentTrackedResource>): void;
  /**
   * @param endpointName Inference endpoint name.
   * @param deploymentName Inference Endpoint Deployment name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OnlineDeploymentTrackedResource>): void;
  get(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OnlineDeploymentTrackedResource>, callback?: msRest.ServiceCallback<Models.OnlineDeploymentTrackedResource>): Promise<Models.OnlineDeploymentsGetResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        deploymentName,
        resourceGroupName,
        workspaceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.OnlineDeploymentsGetResponse>;
  }

  /**
   * @summary Create or update Inference Endpoint Deployment.
   * @param endpointName Inference endpoint name.
   * @param deploymentName Inference Endpoint Deployment name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body Inference Endpoint entity to apply during operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineDeploymentsCreateOrUpdateResponse>
   */
  createOrUpdate(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, body: Models.OnlineDeploymentTrackedResource, options?: msRest.RequestOptionsBase): Promise<Models.OnlineDeploymentsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(endpointName,deploymentName,resourceGroupName,workspaceName,body,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.OnlineDeploymentsCreateOrUpdateResponse>;
  }

  /**
   * @summary Update Online Deployment.
   * @param endpointName Online Endpoint name.
   * @param deploymentName Inference Endpoint Deployment name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body Online Endpoint entity to apply during operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineDeploymentsUpdateResponse>
   */
  update(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, body: Models.PartialOnlineDeploymentPartialTrackedResource, options?: msRest.RequestOptionsBase): Promise<Models.OnlineDeploymentsUpdateResponse> {
    return this.beginUpdate(endpointName,deploymentName,resourceGroupName,workspaceName,body,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.OnlineDeploymentsUpdateResponse>;
  }

  /**
   * @summary Polls an Endpoint operation.
   * @param endpointName Inference endpoint name.
   * @param deploymentName The name and identifier for the endpoint.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body The request containing parameters for retrieving logs.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineDeploymentsGetLogsResponse>
   */
  getLogs(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, body: Models.DeploymentLogsRequest, options?: msRest.RequestOptionsBase): Promise<Models.OnlineDeploymentsGetLogsResponse>;
  /**
   * @param endpointName Inference endpoint name.
   * @param deploymentName The name and identifier for the endpoint.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body The request containing parameters for retrieving logs.
   * @param callback The callback
   */
  getLogs(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, body: Models.DeploymentLogsRequest, callback: msRest.ServiceCallback<Models.DeploymentLogs>): void;
  /**
   * @param endpointName Inference endpoint name.
   * @param deploymentName The name and identifier for the endpoint.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body The request containing parameters for retrieving logs.
   * @param options The optional parameters
   * @param callback The callback
   */
  getLogs(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, body: Models.DeploymentLogsRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentLogs>): void;
  getLogs(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, body: Models.DeploymentLogsRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DeploymentLogs>, callback?: msRest.ServiceCallback<Models.DeploymentLogs>): Promise<Models.OnlineDeploymentsGetLogsResponse> {
    return this.client.sendOperationRequest(
      {
        endpointName,
        deploymentName,
        resourceGroupName,
        workspaceName,
        body,
        options
      },
      getLogsOperationSpec,
      callback) as Promise<Models.OnlineDeploymentsGetLogsResponse>;
  }

  /**
   * @summary Delete Inference Endpoint Deployment.
   * @param endpointName Inference endpoint name.
   * @param deploymentName Inference Endpoint Deployment name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        endpointName,
        deploymentName,
        resourceGroupName,
        workspaceName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * @summary Create or update Inference Endpoint Deployment.
   * @param endpointName Inference endpoint name.
   * @param deploymentName Inference Endpoint Deployment name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body Inference Endpoint entity to apply during operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, body: Models.OnlineDeploymentTrackedResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        endpointName,
        deploymentName,
        resourceGroupName,
        workspaceName,
        body,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * @summary Update Online Deployment.
   * @param endpointName Online Endpoint name.
   * @param deploymentName Inference Endpoint Deployment name.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body Online Endpoint entity to apply during operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginUpdate(endpointName: string, deploymentName: string, resourceGroupName: string, workspaceName: string, body: Models.PartialOnlineDeploymentPartialTrackedResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        endpointName,
        deploymentName,
        resourceGroupName,
        workspaceName,
        body,
        options
      },
      beginUpdateOperationSpec,
      options);
  }

  /**
   * @summary List Inference Endpoint Deployments.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.OnlineDeploymentsListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.OnlineDeploymentsListNextOptionalParams): Promise<Models.OnlineDeploymentsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OnlineDeploymentTrackedResourceArmPaginatedResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.OnlineDeploymentsListNextOptionalParams, callback: msRest.ServiceCallback<Models.OnlineDeploymentTrackedResourceArmPaginatedResult>): void;
  listNext(nextPageLink: string, options?: Models.OnlineDeploymentsListNextOptionalParams | msRest.ServiceCallback<Models.OnlineDeploymentTrackedResourceArmPaginatedResult>, callback?: msRest.ServiceCallback<Models.OnlineDeploymentTrackedResourceArmPaginatedResult>): Promise<Models.OnlineDeploymentsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.OnlineDeploymentsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.orderBy0,
    Parameters.top,
    Parameters.skiptoken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OnlineDeploymentTrackedResourceArmPaginatedResult
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.deploymentName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OnlineDeploymentTrackedResource
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const getLogsOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/getLogs",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.deploymentName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.DeploymentLogsRequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.DeploymentLogs
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}",
  urlParameters: [
    Parameters.endpointName0,
    Parameters.deploymentName0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      headersMapper: Mappers.OnlineDeploymentsDeleteHeaders
    },
    202: {
      headersMapper: Mappers.OnlineDeploymentsDeleteHeaders
    },
    204: {
      headersMapper: Mappers.OnlineDeploymentsDeleteHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.OnlineDeploymentsDeleteHeaders
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}",
  urlParameters: [
    Parameters.endpointName1,
    Parameters.deploymentName1,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.OnlineDeploymentTrackedResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.OnlineDeploymentTrackedResource,
      headersMapper: Mappers.OnlineDeploymentsCreateOrUpdateHeaders
    },
    201: {
      bodyMapper: Mappers.OnlineDeploymentTrackedResource,
      headersMapper: Mappers.OnlineDeploymentsCreateOrUpdateHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.OnlineDeploymentsCreateOrUpdateHeaders
    }
  },
  serializer
};

const beginUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}",
  urlParameters: [
    Parameters.endpointName1,
    Parameters.deploymentName1,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.PartialOnlineDeploymentPartialTrackedResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.OnlineDeploymentTrackedResource,
      headersMapper: Mappers.OnlineDeploymentsUpdateHeaders
    },
    202: {
      headersMapper: Mappers.OnlineDeploymentsUpdateHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.OnlineDeploymentsUpdateHeaders
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.orderBy0,
    Parameters.top,
    Parameters.skiptoken
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.OnlineDeploymentTrackedResourceArmPaginatedResult
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};
