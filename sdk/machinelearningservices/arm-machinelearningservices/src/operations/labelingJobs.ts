/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/labelingJobsMappers";
import * as Parameters from "../models/parameters";
import { AzureMachineLearningWorkspacesContext } from "../azureMachineLearningWorkspacesContext";

/** Class representing a LabelingJobs. */
export class LabelingJobs {
  private readonly client: AzureMachineLearningWorkspacesContext;

  /**
   * Create a LabelingJobs.
   * @param {AzureMachineLearningWorkspacesContext} client Reference to the service client.
   */
  constructor(client: AzureMachineLearningWorkspacesContext) {
    this.client = client;
  }

  /**
   * @summary Creates or updates a labeling job.
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body LabelingJob definition object.
   * @param [options] The optional parameters
   * @returns Promise<Models.LabelingJobsCreateOrUpdateResponse>
   */
  createOrUpdate(id: string, resourceGroupName: string, workspaceName: string, body: Models.LabelingJobResource, options?: msRest.RequestOptionsBase): Promise<Models.LabelingJobsCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(id,resourceGroupName,workspaceName,body,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.LabelingJobsCreateOrUpdateResponse>;
  }

  /**
   * @summary Gets a labeling job by name/id.
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.LabelingJobsGetResponse>
   */
  get(id: string, resourceGroupName: string, workspaceName: string, options?: Models.LabelingJobsGetOptionalParams): Promise<Models.LabelingJobsGetResponse>;
  /**
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  get(id: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.LabelingJobResource>): void;
  /**
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(id: string, resourceGroupName: string, workspaceName: string, options: Models.LabelingJobsGetOptionalParams, callback: msRest.ServiceCallback<Models.LabelingJobResource>): void;
  get(id: string, resourceGroupName: string, workspaceName: string, options?: Models.LabelingJobsGetOptionalParams | msRest.ServiceCallback<Models.LabelingJobResource>, callback?: msRest.ServiceCallback<Models.LabelingJobResource>): Promise<Models.LabelingJobsGetResponse> {
    return this.client.sendOperationRequest(
      {
        id,
        resourceGroupName,
        workspaceName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.LabelingJobsGetResponse>;
  }

  /**
   * @summary Delete a labeling job.
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(id: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  deleteMethod(id: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(id: string, resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(id: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        id,
        resourceGroupName,
        workspaceName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * @summary Lists labeling jobs in the workspace.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.LabelingJobsListResponse>
   */
  list(resourceGroupName: string, workspaceName: string, options?: Models.LabelingJobsListOptionalParams): Promise<Models.LabelingJobsListResponse>;
  /**
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  list(resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<Models.LabelingJobResourceArmPaginatedResult>): void;
  /**
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, workspaceName: string, options: Models.LabelingJobsListOptionalParams, callback: msRest.ServiceCallback<Models.LabelingJobResourceArmPaginatedResult>): void;
  list(resourceGroupName: string, workspaceName: string, options?: Models.LabelingJobsListOptionalParams | msRest.ServiceCallback<Models.LabelingJobResourceArmPaginatedResult>, callback?: msRest.ServiceCallback<Models.LabelingJobResourceArmPaginatedResult>): Promise<Models.LabelingJobsListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        workspaceName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.LabelingJobsListResponse>;
  }

  /**
   * @summary Pause a labeling job.
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  pause(id: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param callback The callback
   */
  pause(id: string, resourceGroupName: string, workspaceName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param options The optional parameters
   * @param callback The callback
   */
  pause(id: string, resourceGroupName: string, workspaceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  pause(id: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        id,
        resourceGroupName,
        workspaceName,
        options
      },
      pauseOperationSpec,
      callback);
  }

  /**
   * @summary Resume a labeling job.
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<Models.LabelingJobsResumeResponse>
   */
  resume(id: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<Models.LabelingJobsResumeResponse> {
    return this.beginResume(id,resourceGroupName,workspaceName,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.LabelingJobsResumeResponse>;
  }

  /**
   * @summary Export labels from a labeling job.
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body The export summary.
   * @param [options] The optional parameters
   * @returns Promise<Models.LabelingJobsExportLabelsResponse>
   */
  exportLabels(id: string, resourceGroupName: string, workspaceName: string, body: Models.ExportSummaryUnion, options?: msRest.RequestOptionsBase): Promise<Models.LabelingJobsExportLabelsResponse> {
    return this.beginExportLabels(id,resourceGroupName,workspaceName,body,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.LabelingJobsExportLabelsResponse>;
  }

  /**
   * @summary Creates or updates a labeling job.
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body LabelingJob definition object.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(id: string, resourceGroupName: string, workspaceName: string, body: Models.LabelingJobResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        id,
        resourceGroupName,
        workspaceName,
        body,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * @summary Resume a labeling job.
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginResume(id: string, resourceGroupName: string, workspaceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        id,
        resourceGroupName,
        workspaceName,
        options
      },
      beginResumeOperationSpec,
      options);
  }

  /**
   * @summary Export labels from a labeling job.
   * @param id The name and identifier for the LabelingJob.
   * @param resourceGroupName Name of the resource group in which workspace is located.
   * @param workspaceName Name of Azure Machine Learning workspace.
   * @param body The export summary.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginExportLabels(id: string, resourceGroupName: string, workspaceName: string, body: Models.ExportSummaryUnion, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        id,
        resourceGroupName,
        workspaceName,
        body,
        options
      },
      beginExportLabelsOperationSpec,
      options);
  }

  /**
   * @summary Lists labeling jobs in the workspace.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.LabelingJobsListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.LabelingJobsListNextOptionalParams): Promise<Models.LabelingJobsListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.LabelingJobResourceArmPaginatedResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.LabelingJobsListNextOptionalParams, callback: msRest.ServiceCallback<Models.LabelingJobResourceArmPaginatedResult>): void;
  listNext(nextPageLink: string, options?: Models.LabelingJobsListNextOptionalParams | msRest.ServiceCallback<Models.LabelingJobResourceArmPaginatedResult>, callback?: msRest.ServiceCallback<Models.LabelingJobResourceArmPaginatedResult>): Promise<Models.LabelingJobsListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.LabelingJobsListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}",
  urlParameters: [
    Parameters.id1,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.includeJobInstructions,
    Parameters.includeLabelCategories
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.LabelingJobResource
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}",
  urlParameters: [
    Parameters.id1,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.skiptoken,
    Parameters.count1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.LabelingJobResourceArmPaginatedResult
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const pauseOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/pause",
  urlParameters: [
    Parameters.id1,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}",
  urlParameters: [
    Parameters.id0,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.LabelingJobResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.LabelingJobResource,
      headersMapper: Mappers.LabelingJobsCreateOrUpdateHeaders
    },
    201: {
      bodyMapper: Mappers.LabelingJobResource,
      headersMapper: Mappers.LabelingJobsCreateOrUpdateHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.LabelingJobsCreateOrUpdateHeaders
    }
  },
  serializer
};

const beginResumeOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/resume",
  urlParameters: [
    Parameters.id1,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      headersMapper: Mappers.LabelingJobsResumeHeaders
    },
    202: {
      headersMapper: Mappers.LabelingJobsResumeHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.LabelingJobsResumeHeaders
    }
  },
  serializer
};

const beginExportLabelsOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/exportLabels",
  urlParameters: [
    Parameters.id1,
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.workspaceName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "body",
    mapper: {
      ...Mappers.ExportSummary,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ExportSummary,
      headersMapper: Mappers.LabelingJobsExportLabelsHeaders
    },
    202: {
      headersMapper: Mappers.LabelingJobsExportLabelsHeaders
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError,
      headersMapper: Mappers.LabelingJobsExportLabelsHeaders
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion,
    Parameters.skiptoken,
    Parameters.count1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.LabelingJobResourceArmPaginatedResult
    },
    default: {
      bodyMapper: Mappers.MachineLearningServiceError
    }
  },
  serializer
};
