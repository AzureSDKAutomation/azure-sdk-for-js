/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Name of the resource provide by the resource Provider. Please use this name property for
 * quotaRequests.
 */
export interface ResourceName {
  /**
   * Resource name.
   */
  value?: string;
  /**
   * Resource display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localizedValue?: string;
}

/**
 * Quota properties for the resource.
 */
export interface QuotaProperties {
  /**
   * The quota limit.
   */
  limit?: number;
  /**
   * The current resource usages information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * The units of the limit, such as - Count, Bytes, etc. Use the unit field provided in the Get
   * quota response.
   */
  unit?: string;
  /**
   * Name of the resource provide by the resource Provider. Please use this name property for
   * quotaRequests.
   */
  name?: ResourceName;
  /**
   * The Resource Type Name.
   */
  resourceType?: any;
  /**
   * The quota period over which the usage values are summarized, such as - P1D (Per one day), PT1M
   * (Per one minute), PT1S (Per one second). This parameter is optional because, for some
   * resources like compute, the period doesnâ€™t matter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaPeriod?: string;
  /**
   * Additional properties for the specific resource provider.
   */
  properties?: any;
}

/**
 * Quota limits.
 */
export interface CurrentQuotaLimitBase extends BaseResource {
  /**
   * Quota properties for the resource.
   */
  properties?: QuotaProperties;
}

/**
 * Quota limits.
 */
export interface CurrentQuotaLimit extends BaseResource {
  /**
   * Quota properties for the resource.
   */
  properties?: QuotaProperties;
  /**
   * The quota request status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: any;
  /**
   * A user friendly message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Quota limits request response.
 */
export interface QuotaLimitsResponse {
  /**
   * List of Quota limits with the quota request status.
   */
  value?: CurrentQuotaLimit[];
  /**
   * The uri to fetch the next page of quota limits. When there are no more pages, this is null.
   */
  nextLink?: string;
}

/**
 * Quota change requests information.
 */
export interface CreateGenericQuotaRequestParameters {
  /**
   * Quota change requests.
   */
  value?: CurrentQuotaLimitBase[];
}

/**
 * The sub-request submitted with the quota request.
 */
export interface SubRequest {
  /**
   * The Resource limit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The Resource name.
   */
  name?: ResourceName;
  /**
   * Resource type for which the quota check was made.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * The units of the limit, such as - Count, Bytes, etc. Use the unit field provided in the Get
   * quota response.
   */
  unit?: string;
  /**
   * The quota request status.
   */
  provisioningState?: any;
  /**
   * User friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Sub request id for individual request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subRequestId?: string;
}

/**
 * Quota submit request response
 */
export interface QuotaRequestOneResourceSubmitResponse extends BaseResource {
  /**
   * The quota request Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the quota request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of resource. "Microsoft.Capacity/ServiceLimits"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The quota request status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: any;
  /**
   * User friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The quota request submit time. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestSubmitTime?: Date;
  /**
   * Quota properties for the resource.
   */
  properties?: QuotaProperties;
}

/**
 * The details of quota request.
 */
export interface QuotaRequestProperties {
  /**
   * The quota request status.
   */
  provisioningState?: any;
  /**
   * User friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The quota request submit time. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestSubmitTime?: Date;
  /**
   * The quotaRequests.
   */
  value?: SubRequest[];
}

/**
 * Quota submit request response
 */
export interface QuotaRequestSubmitResponse extends BaseResource {
  /**
   * The quota request Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the quota request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The quota request details.
   */
  properties?: QuotaRequestProperties;
  /**
   * Type of resource. "Microsoft.Capacity/serviceLimits"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The quota request submit response with request id.
 */
export interface QuotaRequestSubmitResponse201 {
  /**
   * The quota request id. Please use the requestId to check the request status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The operation Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The quota request status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: any;
  /**
   * A user friendly message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * The details of the quota Request.
 */
export interface QuotaRequestDetails extends BaseResource {
  /**
   * The quota request Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the quota request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The quota request status.
   */
  provisioningState?: any;
  /**
   * User friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The quota request submit time. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestSubmitTime?: Date;
  /**
   * The quotaRequests.
   */
  value?: SubRequest[];
  /**
   * Type of resource. "Microsoft.Capacity/ServiceLimits"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The error details.
 */
export interface ServiceErrorDetail {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * The api error details.
 */
export interface ServiceError {
  /**
   * The error code.
   */
  code?: string;
  /**
   * The error message.
   */
  message?: string;
  /**
   * The list of error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ServiceErrorDetail[];
}

/**
 * The api error.
 */
export interface ExceptionResponse {
  /**
   * The api error details.
   */
  error?: ServiceError;
}

/**
 * Optional Parameters.
 */
export interface QuotaRequestStatusListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * | Field                    | Supported operators
   * |---------------------|------------------------
   *
   * |requestSubmitTime | ge, le, eq, gt, lt
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous
   * response contains a nextLink element, the value of the nextLink element will include a
   * skiptoken parameter that specifies a starting point to use for subsequent calls
   */
  skiptoken?: string;
}

/**
 * Optional Parameters.
 */
export interface QuotaRequestStatusListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * | Field                    | Supported operators
   * |---------------------|------------------------
   *
   * |requestSubmitTime | ge, le, eq, gt, lt
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous
   * response contains a nextLink element, the value of the nextLink element will include a
   * skiptoken parameter that specifies a starting point to use for subsequent calls
   */
  skiptoken?: string;
}

/**
 * An interface representing AzureReservationAPIOptions.
 */
export interface AzureReservationAPIOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for Get operation.
 */
export interface QuotaGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for List operation.
 */
export interface QuotaListHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * @interface
 * Quota limits.
 * @extends Array<CurrentQuotaLimitBase>
 */
export interface QuotaLimits extends Array<CurrentQuotaLimitBase> {
  /**
   * The uri to fetch the next page of quota limits. When there are no more pages, this is null.
   */
  nextLink?: string;
}

/**
 * @interface
 * Quota requests information.
 * @extends Array<QuotaRequestDetails>
 */
export interface QuotaRequestDetailsList extends Array<QuotaRequestDetails> {
  /**
   * The uri to fetch the next page of quota limits. When there are no more pages, this is null.
   */
  nextLink?: string;
}

/**
 * Contains response data for the get operation.
 */
export type QuotaGetResponse = CurrentQuotaLimitBase & QuotaGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QuotaGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CurrentQuotaLimitBase;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type QuotaCreateOrUpdateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the update operation.
 */
export type QuotaUpdateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the list operation.
 */
export type QuotaListResponse = QuotaLimits & QuotaListHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QuotaListHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaLimits;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type QuotaBeginCreateOrUpdateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type QuotaBeginUpdateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type QuotaRequestStatusGetResponse = QuotaRequestDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaRequestDetails;
    };
};

/**
 * Contains response data for the list operation.
 */
export type QuotaRequestStatusListResponse = QuotaRequestDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaRequestDetailsList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type QuotaRequestStatusListNextResponse = QuotaRequestDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaRequestDetailsList;
    };
};
