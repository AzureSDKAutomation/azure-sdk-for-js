/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const SkuName: msRest.CompositeMapper = {
  serializedName: "SkuName",
  type: {
    name: "Composite",
    className: "SkuName",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SkuCapability: msRest.CompositeMapper = {
  serializedName: "SkuCapability",
  type: {
    name: "Composite",
    className: "SkuCapability",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SkuRestriction: msRest.CompositeMapper = {
  serializedName: "SkuRestriction",
  type: {
    name: "Composite",
    className: "SkuRestriction",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      values: {
        serializedName: "values",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      reasonCode: {
        serializedName: "reasonCode",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Catalog: msRest.CompositeMapper = {
  serializedName: "Catalog",
  type: {
    name: "Composite",
    className: "Catalog",
    modelProperties: {
      resourceType: {
        readOnly: true,
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      tier: {
        readOnly: true,
        serializedName: "tier",
        type: {
          name: "String"
        }
      },
      size: {
        readOnly: true,
        serializedName: "size",
        type: {
          name: "String"
        }
      },
      terms: {
        readOnly: true,
        serializedName: "terms",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      locations: {
        readOnly: true,
        serializedName: "locations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      capabilities: {
        readOnly: true,
        serializedName: "capabilities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuCapability"
            }
          }
        }
      },
      restrictions: {
        readOnly: true,
        serializedName: "restrictions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SkuRestriction"
            }
          }
        }
      }
    }
  }
};

export const ExtendedStatusInfo: msRest.CompositeMapper = {
  serializedName: "ExtendedStatusInfo",
  type: {
    name: "Composite",
    className: "ExtendedStatusInfo",
    modelProperties: {
      statusCode: {
        serializedName: "statusCode",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationSplitProperties: msRest.CompositeMapper = {
  serializedName: "ReservationSplitProperties",
  type: {
    name: "Composite",
    className: "ReservationSplitProperties",
    modelProperties: {
      splitDestinations: {
        serializedName: "splitDestinations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      splitSource: {
        serializedName: "splitSource",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationMergeProperties: msRest.CompositeMapper = {
  serializedName: "ReservationMergeProperties",
  type: {
    name: "Composite",
    className: "ReservationMergeProperties",
    modelProperties: {
      mergeDestination: {
        serializedName: "mergeDestination",
        type: {
          name: "String"
        }
      },
      mergeSources: {
        serializedName: "mergeSources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ReservationProperties: msRest.CompositeMapper = {
  serializedName: "ReservationProperties",
  type: {
    name: "Composite",
    className: "ReservationProperties",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        type: {
          name: "String"
        }
      },
      appliedScopes: {
        serializedName: "appliedScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      appliedScopeType: {
        serializedName: "appliedScopeType",
        type: {
          name: "String"
        }
      },
      quantity: {
        serializedName: "quantity",
        type: {
          name: "Number"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "String"
        }
      },
      effectiveDateTime: {
        serializedName: "effectiveDateTime",
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedDateTime: {
        readOnly: true,
        serializedName: "lastUpdatedDateTime",
        type: {
          name: "DateTime"
        }
      },
      expiryDate: {
        serializedName: "expiryDate",
        type: {
          name: "Date"
        }
      },
      extendedStatusInfo: {
        serializedName: "extendedStatusInfo",
        type: {
          name: "Composite",
          className: "ExtendedStatusInfo"
        }
      },
      splitProperties: {
        serializedName: "splitProperties",
        type: {
          name: "Composite",
          className: "ReservationSplitProperties"
        }
      },
      mergeProperties: {
        serializedName: "mergeProperties",
        type: {
          name: "Composite",
          className: "ReservationMergeProperties"
        }
      }
    }
  }
};

export const ReservationResponse: msRest.CompositeMapper = {
  serializedName: "ReservationResponse",
  type: {
    name: "Composite",
    className: "ReservationResponse",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      etag: {
        serializedName: "etag",
        type: {
          name: "Number"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      kind: {
        serializedName: "kind",
        type: {
          name: "Enum",
          allowedValues: [
            "Microsoft.Compute"
          ]
        }
      },
      sku: {
        serializedName: "sku",
        type: {
          name: "Composite",
          className: "SkuName"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "ReservationProperties"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationOrderResponse: msRest.CompositeMapper = {
  serializedName: "ReservationOrderResponse",
  type: {
    name: "Composite",
    className: "ReservationOrderResponse",
    modelProperties: {
      etag: {
        serializedName: "etag",
        type: {
          name: "Number"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "properties.displayName",
        type: {
          name: "String"
        }
      },
      requestDateTime: {
        serializedName: "properties.requestDateTime",
        type: {
          name: "DateTime"
        }
      },
      createdDateTime: {
        serializedName: "properties.createdDateTime",
        type: {
          name: "DateTime"
        }
      },
      expiryDate: {
        serializedName: "properties.expiryDate",
        type: {
          name: "Date"
        }
      },
      originalQuantity: {
        serializedName: "properties.originalQuantity",
        type: {
          name: "Number"
        }
      },
      term: {
        serializedName: "properties.term",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "String"
        }
      },
      reservations: {
        serializedName: "properties.reservations",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationResponse"
            }
          }
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const MergeRequest: msRest.CompositeMapper = {
  serializedName: "MergeRequest",
  type: {
    name: "Composite",
    className: "MergeRequest",
    modelProperties: {
      sources: {
        serializedName: "properties.sources",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const Patch: msRest.CompositeMapper = {
  serializedName: "Patch",
  type: {
    name: "Composite",
    className: "Patch",
    modelProperties: {
      appliedScopeType: {
        serializedName: "properties.appliedScopeType",
        type: {
          name: "String"
        }
      },
      appliedScopes: {
        serializedName: "properties.appliedScopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const SplitRequest: msRest.CompositeMapper = {
  serializedName: "SplitRequest",
  type: {
    name: "Composite",
    className: "SplitRequest",
    modelProperties: {
      quantities: {
        serializedName: "properties.quantities",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Number"
            }
          }
        }
      },
      reservationId: {
        serializedName: "properties.reservationId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ExtendedErrorInfo: msRest.CompositeMapper = {
  serializedName: "ExtendedErrorInfo",
  type: {
    name: "Composite",
    className: "ExtendedErrorInfo",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorModel: msRest.CompositeMapper = {
  serializedName: "Error",
  type: {
    name: "Composite",
    className: "ErrorModel",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ExtendedErrorInfo"
        }
      }
    }
  }
};

export const AppliedReservationList: msRest.CompositeMapper = {
  serializedName: "AppliedReservationList",
  type: {
    name: "Composite",
    className: "AppliedReservationList",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AppliedReservations: msRest.CompositeMapper = {
  serializedName: "AppliedReservations",
  type: {
    name: "Composite",
    className: "AppliedReservations",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      reservationOrderIds: {
        serializedName: "properties.reservationOrderIds",
        type: {
          name: "Composite",
          className: "AppliedReservationList"
        }
      }
    }
  }
};

export const OperationDisplay: msRest.CompositeMapper = {
  serializedName: "OperationDisplay",
  type: {
    name: "Composite",
    className: "OperationDisplay",
    modelProperties: {
      provider: {
        serializedName: "provider",
        type: {
          name: "String"
        }
      },
      resource: {
        serializedName: "resource",
        type: {
          name: "String"
        }
      },
      operation: {
        serializedName: "operation",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationResponse: msRest.CompositeMapper = {
  serializedName: "OperationResponse",
  type: {
    name: "Composite",
    className: "OperationResponse",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      display: {
        serializedName: "display",
        type: {
          name: "Composite",
          className: "OperationDisplay"
        }
      },
      origin: {
        serializedName: "origin",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ResourceName: msRest.CompositeMapper = {
  serializedName: "ResourceName",
  type: {
    name: "Composite",
    className: "ResourceName",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      localizedValue: {
        readOnly: true,
        serializedName: "localizedValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaProperties: msRest.CompositeMapper = {
  serializedName: "QuotaProperties",
  type: {
    name: "Composite",
    className: "QuotaProperties",
    modelProperties: {
      limit: {
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      currentValue: {
        readOnly: true,
        serializedName: "currentValue",
        type: {
          name: "Number"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName"
        }
      },
      resourceType: {
        serializedName: "resourceType",
        type: {
          name: "Object"
        }
      },
      quotaPeriod: {
        readOnly: true,
        serializedName: "quotaPeriod",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Object"
        }
      }
    }
  }
};

export const CurrentQuotaLimitBase: msRest.CompositeMapper = {
  serializedName: "CurrentQuotaLimitBase",
  type: {
    name: "Composite",
    className: "CurrentQuotaLimitBase",
    modelProperties: {
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaProperties"
        }
      }
    }
  }
};

export const CurrentQuotaLimit: msRest.CompositeMapper = {
  serializedName: "CurrentQuotaLimit",
  type: {
    name: "Composite",
    className: "CurrentQuotaLimit",
    modelProperties: {
      properties: {
        serializedName: "quotaInformation.properties",
        type: {
          name: "Composite",
          className: "QuotaProperties"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "Object"
        }
      },
      message: {
        readOnly: true,
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaLimitsResponse: msRest.CompositeMapper = {
  serializedName: "QuotaLimitsResponse",
  type: {
    name: "Composite",
    className: "QuotaLimitsResponse",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimit"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CreateGenericQuotaRequestParameters: msRest.CompositeMapper = {
  serializedName: "CreateGenericQuotaRequestParameters",
  type: {
    name: "Composite",
    className: "CreateGenericQuotaRequestParameters",
    modelProperties: {
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase"
            }
          }
        }
      }
    }
  }
};

export const SubRequest: msRest.CompositeMapper = {
  serializedName: "SubRequest",
  type: {
    name: "Composite",
    className: "SubRequest",
    modelProperties: {
      limit: {
        readOnly: true,
        serializedName: "limit",
        type: {
          name: "Number"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "Composite",
          className: "ResourceName"
        }
      },
      resourceType: {
        readOnly: true,
        serializedName: "resourceType",
        type: {
          name: "String"
        }
      },
      unit: {
        serializedName: "unit",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "Object"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      subRequestId: {
        readOnly: true,
        serializedName: "subRequestId",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestOneResourceSubmitResponse: msRest.CompositeMapper = {
  serializedName: "QuotaRequestOneResourceSubmitResponse",
  type: {
    name: "Composite",
    className: "QuotaRequestOneResourceSubmitResponse",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "Object"
        }
      },
      message: {
        readOnly: true,
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      },
      requestSubmitTime: {
        readOnly: true,
        serializedName: "properties.requestSubmitTime",
        type: {
          name: "DateTime"
        }
      },
      properties: {
        serializedName: "properties.properties.properties",
        type: {
          name: "Composite",
          className: "QuotaProperties"
        }
      }
    }
  }
};

export const QuotaRequestProperties: msRest.CompositeMapper = {
  serializedName: "QuotaRequestProperties",
  type: {
    name: "Composite",
    className: "QuotaRequestProperties",
    modelProperties: {
      provisioningState: {
        serializedName: "provisioningState",
        type: {
          name: "Object"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      requestSubmitTime: {
        readOnly: true,
        serializedName: "requestSubmitTime",
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubRequest"
            }
          }
        }
      }
    }
  }
};

export const QuotaRequestSubmitResponse: msRest.CompositeMapper = {
  serializedName: "QuotaRequestSubmitResponse",
  type: {
    name: "Composite",
    className: "QuotaRequestSubmitResponse",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        type: {
          name: "Composite",
          className: "QuotaRequestProperties"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestSubmitResponse201: msRest.CompositeMapper = {
  serializedName: "QuotaRequestSubmitResponse201",
  type: {
    name: "Composite",
    className: "QuotaRequestSubmitResponse201",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        readOnly: true,
        serializedName: "properties.provisioningState",
        type: {
          name: "Object"
        }
      },
      message: {
        readOnly: true,
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestDetails: msRest.CompositeMapper = {
  serializedName: "QuotaRequestDetails",
  type: {
    name: "Composite",
    className: "QuotaRequestDetails",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      provisioningState: {
        serializedName: "properties.provisioningState",
        type: {
          name: "Object"
        }
      },
      message: {
        readOnly: true,
        serializedName: "properties.message",
        type: {
          name: "String"
        }
      },
      requestSubmitTime: {
        readOnly: true,
        serializedName: "properties.requestSubmitTime",
        type: {
          name: "DateTime"
        }
      },
      value: {
        serializedName: "properties.value",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SubRequest"
            }
          }
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceErrorDetail: msRest.CompositeMapper = {
  serializedName: "ServiceErrorDetail",
  type: {
    name: "Composite",
    className: "ServiceErrorDetail",
    modelProperties: {
      code: {
        readOnly: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        readOnly: true,
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ServiceError: msRest.CompositeMapper = {
  serializedName: "ServiceError",
  type: {
    name: "Composite",
    className: "ServiceError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      },
      details: {
        readOnly: true,
        serializedName: "details",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ServiceErrorDetail"
            }
          }
        }
      }
    }
  }
};

export const ExceptionResponse: msRest.CompositeMapper = {
  serializedName: "ExceptionResponse",
  type: {
    name: "Composite",
    className: "ExceptionResponse",
    modelProperties: {
      error: {
        serializedName: "error",
        type: {
          name: "Composite",
          className: "ServiceError"
        }
      }
    }
  }
};

export const QuotaGetHeaders: msRest.CompositeMapper = {
  serializedName: "quota-get-headers",
  type: {
    name: "Composite",
    className: "QuotaGetHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaListHeaders: msRest.CompositeMapper = {
  serializedName: "quota-list-headers",
  type: {
    name: "Composite",
    className: "QuotaListHeaders",
    modelProperties: {
      eTag: {
        serializedName: "etag",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationOrderList: msRest.CompositeMapper = {
  serializedName: "ReservationOrderList",
  type: {
    name: "Composite",
    className: "ReservationOrderList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationOrderResponse"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ReservationList: msRest.CompositeMapper = {
  serializedName: "ReservationList",
  type: {
    name: "Composite",
    className: "ReservationList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ReservationResponse"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OperationList: msRest.CompositeMapper = {
  serializedName: "OperationList",
  type: {
    name: "Composite",
    className: "OperationList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "OperationResponse"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaLimits: msRest.CompositeMapper = {
  serializedName: "QuotaLimits",
  type: {
    name: "Composite",
    className: "QuotaLimits",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CurrentQuotaLimitBase"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const QuotaRequestDetailsList: msRest.CompositeMapper = {
  serializedName: "QuotaRequestDetailsList",
  type: {
    name: "Composite",
    className: "QuotaRequestDetailsList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "QuotaRequestDetails"
            }
          }
        }
      },
      nextLink: {
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
