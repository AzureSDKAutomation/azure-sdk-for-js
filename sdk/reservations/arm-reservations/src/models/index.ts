/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * An interface representing SkuName.
 */
export interface SkuName {
  name?: string;
}

/**
 * An interface representing SkuCapability.
 */
export interface SkuCapability {
  /**
   * An invariant to describe the feature.
   */
  name?: string;
  /**
   * An invariant if the feature is measured by quantity.
   */
  value?: string;
}

/**
 * An interface representing SkuRestriction.
 */
export interface SkuRestriction {
  /**
   * The type of restrictions.
   */
  type?: string;
  /**
   * The value of restrictions. If the restriction type is set to location. This would be different
   * locations where the SKU is restricted.
   */
  values?: string[];
  /**
   * The reason for restriction.
   */
  reasonCode?: string;
}

/**
 * An interface representing Catalog.
 */
export interface Catalog {
  /**
   * The type of resource the SKU applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * The name of SKU
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The tier of this SKU
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
  /**
   * The size of this SKU
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly size?: string;
  /**
   * Available reservation terms for this resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly terms?: string[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locations?: string[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: SkuCapability[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restrictions?: SkuRestriction[];
}

/**
 * An interface representing ExtendedStatusInfo.
 */
export interface ExtendedStatusInfo {
  /**
   * Possible values include: 'None', 'Pending', 'Active', 'PurchaseError',
   * 'PaymentInstrumentError', 'Split', 'Merged', 'Expired', 'Succeeded'
   */
  statusCode?: StatusCode;
  /**
   * The message giving detailed information about the status code.
   */
  message?: string;
}

/**
 * An interface representing ReservationSplitProperties.
 */
export interface ReservationSplitProperties {
  /**
   * List of destination Resource Id that are created due to split. Format of the resource Id is
   * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
   */
  splitDestinations?: string[];
  /**
   * Resource Id of the Reservation from which this is split. Format of the resource Id is
   * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
   */
  splitSource?: string;
}

/**
 * An interface representing ReservationMergeProperties.
 */
export interface ReservationMergeProperties {
  /**
   * Reservation Resource Id Created due to the merge. Format of the resource Id is
   * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
   */
  mergeDestination?: string;
  /**
   * Resource Ids of the Source Reservation's merged to form this Reservation. Format of the
   * resource Id is
   * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
   */
  mergeSources?: string[];
}

/**
 * An interface representing ReservationProperties.
 */
export interface ReservationProperties {
  /**
   * Friendly name for user to easily identify the reservation
   */
  displayName?: string;
  appliedScopes?: string[];
  /**
   * Possible values include: 'Single', 'Shared'
   */
  appliedScopeType?: AppliedScopeType;
  /**
   * Quantity of the SKUs that are part of the Reservation.
   */
  quantity?: number;
  /**
   * Possible values include: 'Creating', 'PendingResourceHold', 'ConfirmedResourceHold',
   * 'PendingBilling', 'ConfirmedBilling', 'Created', 'Succeeded', 'Cancelled', 'Expired',
   * 'BillingFailed', 'Failed', 'Split', 'Merged'
   */
  provisioningState?: ProvisioningState;
  /**
   * DateTime of the Reservation starting when this version is effective from.
   */
  effectiveDateTime?: Date;
  /**
   * DateTime of the last time the Reservation was updated.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedDateTime?: Date;
  /**
   * This is the date when the Reservation will expire.
   */
  expiryDate?: Date;
  extendedStatusInfo?: ExtendedStatusInfo;
  splitProperties?: ReservationSplitProperties;
  mergeProperties?: ReservationMergeProperties;
}

/**
 * An interface representing ReservationResponse.
 */
export interface ReservationResponse extends BaseResource {
  /**
   * Possible values include: 'westus', 'eastus', 'eastus2', 'northcentralus', 'westus2',
   * 'southcentralus', 'centralus', 'westeurope', 'northeurope', 'eastasia', 'southeastasia',
   * 'japaneast', 'japanwest', 'brazilsouth', 'australiaeast', 'australiasoutheast', 'southindia',
   * 'westindia', 'centralindia', 'canadacentral', 'canadaeast', 'uksouth', 'westcentralus',
   * 'ukwest'
   */
  location?: Location;
  etag?: number;
  /**
   * Identifier of the reservation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the reservation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource Provider type to be reserved. Possible values include: 'Microsoft.Compute'
   */
  kind?: Kind;
  sku?: SkuName;
  properties?: ReservationProperties;
  /**
   * Type of resource. "Microsoft.Capacity/reservationOrders/reservations"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * An interface representing ReservationOrderResponse.
 */
export interface ReservationOrderResponse extends BaseResource {
  etag?: number;
  /**
   * Identifier of the reservation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of the reservation
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Friendly name for user to easily identified the reservation.
   */
  displayName?: string;
  /**
   * This is the DateTime when the reservation was initially requested for purchase.
   */
  requestDateTime?: Date;
  /**
   * This is the DateTime when the reservation was created.
   */
  createdDateTime?: Date;
  /**
   * This is the date when the Reservation will expire.
   */
  expiryDate?: Date;
  /**
   * Total Quantity of the SKUs purchased in the Reservation.
   */
  originalQuantity?: number;
  /**
   * Possible values include: 'P1Y', 'P3Y'
   */
  term?: Term;
  /**
   * Possible values include: 'Creating', 'PendingResourceHold', 'ConfirmedResourceHold',
   * 'PendingBilling', 'ConfirmedBilling', 'Created', 'Succeeded', 'Cancelled', 'Expired',
   * 'BillingFailed', 'Failed', 'Split', 'Merged'
   */
  provisioningState?: ProvisioningState1;
  reservations?: ReservationResponse[];
  /**
   * Type of resource. "Microsoft.Capacity/reservations"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * An interface representing MergeRequest.
 */
export interface MergeRequest {
  /**
   * Format of the resource id should be
   * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
   */
  sources?: string[];
}

/**
 * An interface representing Patch.
 */
export interface Patch {
  /**
   * Possible values include: 'Single', 'Shared'
   */
  appliedScopeType?: AppliedScopeType1;
  appliedScopes?: string[];
}

/**
 * An interface representing SplitRequest.
 */
export interface SplitRequest {
  /**
   * List of the quantities in the new reservations to create.
   */
  quantities?: number[];
  /**
   * Resource id of the reservation to be split. Format of the resource id should be
   * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
   */
  reservationId?: string;
}

/**
 * An interface representing ExtendedErrorInfo.
 */
export interface ExtendedErrorInfo {
  /**
   * Possible values include: 'NotSpecified', 'InternalServerError', 'ServerTimeout',
   * 'AuthorizationFailed', 'BadRequest', 'ClientCertificateThumbprintNotSet',
   * 'InvalidRequestContent', 'OperationFailed', 'HttpMethodNotSupported', 'InvalidRequestUri',
   * 'MissingTenantId', 'InvalidTenantId', 'InvalidReservationOrderId', 'InvalidReservationId',
   * 'ReservationIdNotInReservationOrder', 'ReservationOrderNotFound', 'InvalidSubscriptionId',
   * 'InvalidAccessToken', 'InvalidLocationId', 'UnauthenticatedRequestsThrottled',
   * 'InvalidHealthCheckType', 'Forbidden', 'BillingScopeIdCannotBeChanged',
   * 'AppliedScopesNotAssociatedWithCommerceAccount', 'AppliedScopesSameAsExisting',
   * 'RoleAssignmentCreationFailed', 'ReservationOrderCreationFailed',
   * 'ReservationOrderNotEnabled', 'CapacityUpdateScopesFailed', 'UnsupportedReservationTerm',
   * 'ReservationOrderIdAlreadyExists', 'RiskCheckFailed', 'CreateQuoteFailed',
   * 'ActivateQuoteFailed', 'NonsupportedAccountId', 'PaymentInstrumentNotFound',
   * 'MissingAppliedScopesForSingle', 'NoValidReservationsToReRate', 'ReRateOnlyAllowedForEA',
   * 'OperationCannotBePerformedInCurrentState', 'InvalidSingleAppliedScopesCount',
   * 'InvalidFulfillmentRequestParameters', 'NotSupportedCountry', 'InvalidRefundQuantity',
   * 'PurchaseError', 'BillingCustomerInputError', 'BillingPaymentInstrumentSoftError',
   * 'BillingPaymentInstrumentHardError', 'BillingTransientError', 'BillingError',
   * 'FulfillmentConfigurationError', 'FulfillmentOutOfStockError', 'FulfillmentTransientError',
   * 'FulfillmentError', 'CalculatePriceFailed'
   */
  code?: Code;
  message?: string;
}

/**
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  error?: ExtendedErrorInfo;
}

/**
 * An interface representing AppliedReservationList.
 */
export interface AppliedReservationList {
  value?: string[];
  /**
   * Url to get the next page of reservations
   */
  nextLink?: string;
}

/**
 * An interface representing AppliedReservations.
 */
export interface AppliedReservations {
  /**
   * Identifier of the applied reservations
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Name of resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of resource. "Microsoft.Capacity/AppliedReservations"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  reservationOrderIds?: AppliedReservationList;
}

/**
 * An interface representing OperationDisplay.
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * An interface representing OperationResponse.
 */
export interface OperationResponse {
  name?: string;
  display?: OperationDisplay;
  origin?: string;
}

/**
 * Name of the resource provide by the resource Provider. Please use this name property for
 * quotaRequests.
 */
export interface ResourceName {
  /**
   * Resource name.
   */
  value?: string;
  /**
   * Resource display name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localizedValue?: string;
}

/**
 * Quota properties for the resource.
 */
export interface QuotaProperties {
  /**
   * The quota limit.
   */
  limit?: number;
  /**
   * The current resource usages information.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * The units of the limit, such as - Count, Bytes, etc. Use the unit field provided in the Get
   * quota response.
   */
  unit?: string;
  /**
   * Name of the resource provide by the resource Provider. Please use this name property for
   * quotaRequests.
   */
  name?: ResourceName;
  /**
   * The Resource Type Name.
   */
  resourceType?: any;
  /**
   * The quota period over which the usage values are summarized, such as - P1D (Per one day), PT1M
   * (Per one minute), PT1S (Per one second). This parameter is optional because, for some
   * resources like compute, the period doesn’t matter.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaPeriod?: string;
  /**
   * Additional properties for the specific resource provider.
   */
  properties?: any;
}

/**
 * Quota limits.
 */
export interface CurrentQuotaLimitBase extends BaseResource {
  /**
   * Quota properties for the resource.
   */
  properties?: QuotaProperties;
}

/**
 * Quota limits.
 */
export interface CurrentQuotaLimit extends BaseResource {
  /**
   * Quota properties for the resource.
   */
  properties?: QuotaProperties;
  /**
   * The quota request status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: any;
  /**
   * A user friendly message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Quota limits request response.
 */
export interface QuotaLimitsResponse {
  /**
   * List of Quota limits with the quota request status.
   */
  value?: CurrentQuotaLimit[];
  /**
   * The uri to fetch the next page of quota limits. When there are no more pages, this is null.
   */
  nextLink?: string;
}

/**
 * Quota change requests information.
 */
export interface CreateGenericQuotaRequestParameters {
  /**
   * Quota change requests.
   */
  value?: CurrentQuotaLimitBase[];
}

/**
 * The sub-request submitted with the quota request.
 */
export interface SubRequest {
  /**
   * The Resource limit.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * The Resource name.
   */
  name?: ResourceName;
  /**
   * Resource type for which the quota check was made.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * The units of the limit, such as - Count, Bytes, etc. Use the unit field provided in the Get
   * quota response.
   */
  unit?: string;
  /**
   * The quota request status.
   */
  provisioningState?: any;
  /**
   * User friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * Sub request id for individual request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly subRequestId?: string;
}

/**
 * Quota submit request response
 */
export interface QuotaRequestOneResourceSubmitResponse extends BaseResource {
  /**
   * The quota request Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the quota request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Type of resource. "Microsoft.Capacity/ServiceLimits"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The quota request status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: any;
  /**
   * User friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The quota request submit time. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestSubmitTime?: Date;
  /**
   * Quota properties for the resource.
   */
  properties?: QuotaProperties;
}

/**
 * The details of quota request.
 */
export interface QuotaRequestProperties {
  /**
   * The quota request status.
   */
  provisioningState?: any;
  /**
   * User friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The quota request submit time. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestSubmitTime?: Date;
  /**
   * The quotaRequests.
   */
  value?: SubRequest[];
}

/**
 * Quota submit request response
 */
export interface QuotaRequestSubmitResponse extends BaseResource {
  /**
   * The quota request Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the quota request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The quota request details.
   */
  properties?: QuotaRequestProperties;
  /**
   * Type of resource. "Microsoft.Capacity/serviceLimits"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The quota request submit response with request id.
 */
export interface QuotaRequestSubmitResponse201 {
  /**
   * The quota request id. Please use the requestId to check the request status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The operation Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The quota request status.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: any;
  /**
   * A user friendly message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * The details of the quota Request.
 */
export interface QuotaRequestDetails extends BaseResource {
  /**
   * The quota request Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the quota request.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The quota request status.
   */
  provisioningState?: any;
  /**
   * User friendly status message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The quota request submit time. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ
   * as specified by the ISO 8601 standard.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly requestSubmitTime?: Date;
  /**
   * The quotaRequests.
   */
  value?: SubRequest[];
  /**
   * Type of resource. "Microsoft.Capacity/ServiceLimits"
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The error details.
 */
export interface ServiceErrorDetail {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * The api error details.
 */
export interface ServiceError {
  /**
   * The error code.
   */
  code?: string;
  /**
   * The error message.
   */
  message?: string;
  /**
   * The list of error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ServiceErrorDetail[];
}

/**
 * The api error.
 */
export interface ExceptionResponse {
  /**
   * The api error details.
   */
  error?: ServiceError;
}

/**
 * Optional Parameters.
 */
export interface QuotaRequestStatusListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * | Field                    | Supported operators
   * |---------------------|------------------------
   *
   * |requestSubmitTime | ge, le, eq, gt, lt
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous
   * response contains a nextLink element, the value of the nextLink element will include a
   * skiptoken parameter that specifies a starting point to use for subsequent calls
   */
  skiptoken?: string;
}

/**
 * Optional Parameters.
 */
export interface QuotaRequestStatusListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * | Field                    | Supported operators
   * |---------------------|------------------------
   *
   * |requestSubmitTime | ge, le, eq, gt, lt
   */
  filter?: string;
  /**
   * Number of records to return.
   */
  top?: number;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous
   * response contains a nextLink element, the value of the nextLink element will include a
   * skiptoken parameter that specifies a starting point to use for subsequent calls
   */
  skiptoken?: string;
}

/**
 * An interface representing AzureReservationAPIOptions.
 */
export interface AzureReservationAPIOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines headers for Get operation.
 */
export interface QuotaGetHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * Defines headers for List operation.
 */
export interface QuotaListHeaders {
  /**
   * Current entity state version. Should be treated as opaque and used to make conditional HTTP
   * requests.
   */
  eTag: string;
}

/**
 * @interface
 * An interface representing the ReservationOrderList.
 * @extends Array<ReservationOrderResponse>
 */
export interface ReservationOrderList extends Array<ReservationOrderResponse> {
  /**
   * Url to get the next page of reservationOrders.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the ReservationList.
 * @extends Array<ReservationResponse>
 */
export interface ReservationList extends Array<ReservationResponse> {
  /**
   * Url to get the next page of reservations.
   */
  nextLink?: string;
}

/**
 * @interface
 * An interface representing the OperationList.
 * @extends Array<OperationResponse>
 */
export interface OperationList extends Array<OperationResponse> {
  /**
   * Url to get the next page of items.
   */
  nextLink?: string;
}

/**
 * @interface
 * Quota limits.
 * @extends Array<CurrentQuotaLimitBase>
 */
export interface QuotaLimits extends Array<CurrentQuotaLimitBase> {
  /**
   * The uri to fetch the next page of quota limits. When there are no more pages, this is null.
   */
  nextLink?: string;
}

/**
 * @interface
 * Quota requests information.
 * @extends Array<QuotaRequestDetails>
 */
export interface QuotaRequestDetailsList extends Array<QuotaRequestDetails> {
  /**
   * The uri to fetch the next page of quota limits. When there are no more pages, this is null.
   */
  nextLink?: string;
}

/**
 * Defines values for Kind.
 * Possible values include: 'Microsoft.Compute'
 * @readonly
 * @enum {string}
 */
export type Kind = 'Microsoft.Compute';

/**
 * Defines values for StatusCode.
 * Possible values include: 'None', 'Pending', 'Active', 'PurchaseError', 'PaymentInstrumentError',
 * 'Split', 'Merged', 'Expired', 'Succeeded'
 * @readonly
 * @enum {string}
 */
export type StatusCode = 'None' | 'Pending' | 'Active' | 'PurchaseError' | 'PaymentInstrumentError' | 'Split' | 'Merged' | 'Expired' | 'Succeeded';

/**
 * Defines values for AppliedScopeType.
 * Possible values include: 'Single', 'Shared'
 * @readonly
 * @enum {string}
 */
export type AppliedScopeType = 'Single' | 'Shared';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Creating', 'PendingResourceHold', 'ConfirmedResourceHold',
 * 'PendingBilling', 'ConfirmedBilling', 'Created', 'Succeeded', 'Cancelled', 'Expired',
 * 'BillingFailed', 'Failed', 'Split', 'Merged'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Creating' | 'PendingResourceHold' | 'ConfirmedResourceHold' | 'PendingBilling' | 'ConfirmedBilling' | 'Created' | 'Succeeded' | 'Cancelled' | 'Expired' | 'BillingFailed' | 'Failed' | 'Split' | 'Merged';

/**
 * Defines values for Location.
 * Possible values include: 'westus', 'eastus', 'eastus2', 'northcentralus', 'westus2',
 * 'southcentralus', 'centralus', 'westeurope', 'northeurope', 'eastasia', 'southeastasia',
 * 'japaneast', 'japanwest', 'brazilsouth', 'australiaeast', 'australiasoutheast', 'southindia',
 * 'westindia', 'centralindia', 'canadacentral', 'canadaeast', 'uksouth', 'westcentralus', 'ukwest'
 * @readonly
 * @enum {string}
 */
export type Location = 'westus' | 'eastus' | 'eastus2' | 'northcentralus' | 'westus2' | 'southcentralus' | 'centralus' | 'westeurope' | 'northeurope' | 'eastasia' | 'southeastasia' | 'japaneast' | 'japanwest' | 'brazilsouth' | 'australiaeast' | 'australiasoutheast' | 'southindia' | 'westindia' | 'centralindia' | 'canadacentral' | 'canadaeast' | 'uksouth' | 'westcentralus' | 'ukwest';

/**
 * Defines values for Term.
 * Possible values include: 'P1Y', 'P3Y'
 * @readonly
 * @enum {string}
 */
export type Term = 'P1Y' | 'P3Y';

/**
 * Defines values for ProvisioningState1.
 * Possible values include: 'Creating', 'PendingResourceHold', 'ConfirmedResourceHold',
 * 'PendingBilling', 'ConfirmedBilling', 'Created', 'Succeeded', 'Cancelled', 'Expired',
 * 'BillingFailed', 'Failed', 'Split', 'Merged'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState1 = 'Creating' | 'PendingResourceHold' | 'ConfirmedResourceHold' | 'PendingBilling' | 'ConfirmedBilling' | 'Created' | 'Succeeded' | 'Cancelled' | 'Expired' | 'BillingFailed' | 'Failed' | 'Split' | 'Merged';

/**
 * Defines values for AppliedScopeType1.
 * Possible values include: 'Single', 'Shared'
 * @readonly
 * @enum {string}
 */
export type AppliedScopeType1 = 'Single' | 'Shared';

/**
 * Defines values for Code.
 * Possible values include: 'NotSpecified', 'InternalServerError', 'ServerTimeout',
 * 'AuthorizationFailed', 'BadRequest', 'ClientCertificateThumbprintNotSet',
 * 'InvalidRequestContent', 'OperationFailed', 'HttpMethodNotSupported', 'InvalidRequestUri',
 * 'MissingTenantId', 'InvalidTenantId', 'InvalidReservationOrderId', 'InvalidReservationId',
 * 'ReservationIdNotInReservationOrder', 'ReservationOrderNotFound', 'InvalidSubscriptionId',
 * 'InvalidAccessToken', 'InvalidLocationId', 'UnauthenticatedRequestsThrottled',
 * 'InvalidHealthCheckType', 'Forbidden', 'BillingScopeIdCannotBeChanged',
 * 'AppliedScopesNotAssociatedWithCommerceAccount', 'AppliedScopesSameAsExisting',
 * 'RoleAssignmentCreationFailed', 'ReservationOrderCreationFailed', 'ReservationOrderNotEnabled',
 * 'CapacityUpdateScopesFailed', 'UnsupportedReservationTerm', 'ReservationOrderIdAlreadyExists',
 * 'RiskCheckFailed', 'CreateQuoteFailed', 'ActivateQuoteFailed', 'NonsupportedAccountId',
 * 'PaymentInstrumentNotFound', 'MissingAppliedScopesForSingle', 'NoValidReservationsToReRate',
 * 'ReRateOnlyAllowedForEA', 'OperationCannotBePerformedInCurrentState',
 * 'InvalidSingleAppliedScopesCount', 'InvalidFulfillmentRequestParameters', 'NotSupportedCountry',
 * 'InvalidRefundQuantity', 'PurchaseError', 'BillingCustomerInputError',
 * 'BillingPaymentInstrumentSoftError', 'BillingPaymentInstrumentHardError',
 * 'BillingTransientError', 'BillingError', 'FulfillmentConfigurationError',
 * 'FulfillmentOutOfStockError', 'FulfillmentTransientError', 'FulfillmentError',
 * 'CalculatePriceFailed'
 * @readonly
 * @enum {string}
 */
export type Code = 'NotSpecified' | 'InternalServerError' | 'ServerTimeout' | 'AuthorizationFailed' | 'BadRequest' | 'ClientCertificateThumbprintNotSet' | 'InvalidRequestContent' | 'OperationFailed' | 'HttpMethodNotSupported' | 'InvalidRequestUri' | 'MissingTenantId' | 'InvalidTenantId' | 'InvalidReservationOrderId' | 'InvalidReservationId' | 'ReservationIdNotInReservationOrder' | 'ReservationOrderNotFound' | 'InvalidSubscriptionId' | 'InvalidAccessToken' | 'InvalidLocationId' | 'UnauthenticatedRequestsThrottled' | 'InvalidHealthCheckType' | 'Forbidden' | 'BillingScopeIdCannotBeChanged' | 'AppliedScopesNotAssociatedWithCommerceAccount' | 'AppliedScopesSameAsExisting' | 'RoleAssignmentCreationFailed' | 'ReservationOrderCreationFailed' | 'ReservationOrderNotEnabled' | 'CapacityUpdateScopesFailed' | 'UnsupportedReservationTerm' | 'ReservationOrderIdAlreadyExists' | 'RiskCheckFailed' | 'CreateQuoteFailed' | 'ActivateQuoteFailed' | 'NonsupportedAccountId' | 'PaymentInstrumentNotFound' | 'MissingAppliedScopesForSingle' | 'NoValidReservationsToReRate' | 'ReRateOnlyAllowedForEA' | 'OperationCannotBePerformedInCurrentState' | 'InvalidSingleAppliedScopesCount' | 'InvalidFulfillmentRequestParameters' | 'NotSupportedCountry' | 'InvalidRefundQuantity' | 'PurchaseError' | 'BillingCustomerInputError' | 'BillingPaymentInstrumentSoftError' | 'BillingPaymentInstrumentHardError' | 'BillingTransientError' | 'BillingError' | 'FulfillmentConfigurationError' | 'FulfillmentOutOfStockError' | 'FulfillmentTransientError' | 'FulfillmentError' | 'CalculatePriceFailed';

/**
 * Contains response data for the getCatalog operation.
 */
export type GetCatalogResponse = Array<Catalog> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Catalog[];
    };
};

/**
 * Contains response data for the getAppliedReservationList operation.
 */
export type GetAppliedReservationListResponse = AppliedReservations & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AppliedReservations;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReservationOrderListResponse = ReservationOrderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationOrderList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReservationOrderGetResponse = ReservationOrderResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationOrderResponse;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReservationOrderListNextResponse = ReservationOrderList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationOrderList;
    };
};

/**
 * Contains response data for the split operation.
 */
export type ReservationSplitResponse = Array<ReservationResponse> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationResponse[];
    };
};

/**
 * Contains response data for the merge operation.
 */
export type ReservationMergeResponse = Array<ReservationResponse> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationResponse[];
    };
};

/**
 * Contains response data for the list operation.
 */
export type ReservationListResponse = ReservationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ReservationGetResponse = ReservationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationResponse;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ReservationUpdateResponse = ReservationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationResponse;
    };
};

/**
 * Contains response data for the listRevisions operation.
 */
export type ReservationListRevisionsResponse = ReservationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationList;
    };
};

/**
 * Contains response data for the beginSplit operation.
 */
export type ReservationBeginSplitResponse = Array<ReservationResponse> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationResponse[];
    };
};

/**
 * Contains response data for the beginMerge operation.
 */
export type ReservationBeginMergeResponse = Array<ReservationResponse> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationResponse[];
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type ReservationBeginUpdateResponse = ReservationResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationResponse;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ReservationListNextResponse = ReservationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationList;
    };
};

/**
 * Contains response data for the listRevisionsNext operation.
 */
export type ReservationListRevisionsNextResponse = ReservationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ReservationList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the get operation.
 */
export type QuotaGetResponse = CurrentQuotaLimitBase & QuotaGetHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QuotaGetHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CurrentQuotaLimitBase;
    };
};

/**
 * Contains response data for the createOrUpdate operation.
 */
export type QuotaCreateOrUpdateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the update operation.
 */
export type QuotaUpdateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the list operation.
 */
export type QuotaListResponse = QuotaLimits & QuotaListHeaders & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The parsed HTTP response headers.
       */
      parsedHeaders: QuotaListHeaders;

      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaLimits;
    };
};

/**
 * Contains response data for the beginCreateOrUpdate operation.
 */
export type QuotaBeginCreateOrUpdateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type QuotaBeginUpdateResponse = {
  /**
   * The parsed response body.
   */
  body: any;

  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: any;
    };
};

/**
 * Contains response data for the get operation.
 */
export type QuotaRequestStatusGetResponse = QuotaRequestDetails & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaRequestDetails;
    };
};

/**
 * Contains response data for the list operation.
 */
export type QuotaRequestStatusListResponse = QuotaRequestDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaRequestDetailsList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type QuotaRequestStatusListNextResponse = QuotaRequestDetailsList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: QuotaRequestDetailsList;
    };
};
