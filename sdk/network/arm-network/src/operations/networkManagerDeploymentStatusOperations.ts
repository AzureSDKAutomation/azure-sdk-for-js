/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/networkManagerDeploymentStatusOperationsMappers";
import * as Parameters from "../models/parameters";
import { NetworkManagementClientContext } from "../networkManagementClientContext";

/** Class representing a NetworkManagerDeploymentStatusOperations. */
export class NetworkManagerDeploymentStatusOperations {
  private readonly client: NetworkManagementClientContext;

  /**
   * Create a NetworkManagerDeploymentStatusOperations.
   * @param {NetworkManagementClientContext} client Reference to the service client.
   */
  constructor(client: NetworkManagementClientContext) {
    this.client = client;
  }

  /**
   * Post List of Network Manager Deployment Status.
   * @param parameters Parameters supplied to specify which Managed Network deployment status is.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param [options] The optional parameters
   * @returns Promise<Models.NetworkManagerDeploymentStatusListResponse>
   */
  list(parameters: Models.NetworkManagerDeploymentStatusParameter, resourceGroupName: string, networkManagerName: string, options?: Models.NetworkManagerDeploymentStatusListOptionalParams): Promise<Models.NetworkManagerDeploymentStatusListResponse>;
  /**
   * @param parameters Parameters supplied to specify which Managed Network deployment status is.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param callback The callback
   */
  list(parameters: Models.NetworkManagerDeploymentStatusParameter, resourceGroupName: string, networkManagerName: string, callback: msRest.ServiceCallback<Models.NetworkManagerDeploymentStatusListResult>): void;
  /**
   * @param parameters Parameters supplied to specify which Managed Network deployment status is.
   * @param resourceGroupName The name of the resource group.
   * @param networkManagerName The name of the network manager.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(parameters: Models.NetworkManagerDeploymentStatusParameter, resourceGroupName: string, networkManagerName: string, options: Models.NetworkManagerDeploymentStatusListOptionalParams, callback: msRest.ServiceCallback<Models.NetworkManagerDeploymentStatusListResult>): void;
  list(parameters: Models.NetworkManagerDeploymentStatusParameter, resourceGroupName: string, networkManagerName: string, options?: Models.NetworkManagerDeploymentStatusListOptionalParams | msRest.ServiceCallback<Models.NetworkManagerDeploymentStatusListResult>, callback?: msRest.ServiceCallback<Models.NetworkManagerDeploymentStatusListResult>): Promise<Models.NetworkManagerDeploymentStatusListResponse> {
    return this.client.sendOperationRequest(
      {
        parameters,
        resourceGroupName,
        networkManagerName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.NetworkManagerDeploymentStatusListResponse>;
  }

  /**
   * Post List of Network Manager Deployment Status.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.NetworkManagerDeploymentStatusListNextResponse>
   */
  listNext(nextPageLink: string, options?: Models.NetworkManagerDeploymentStatusListNextOptionalParams): Promise<Models.NetworkManagerDeploymentStatusListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.NetworkManagerDeploymentStatusListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: Models.NetworkManagerDeploymentStatusListNextOptionalParams, callback: msRest.ServiceCallback<Models.NetworkManagerDeploymentStatusListResult>): void;
  listNext(nextPageLink: string, options?: Models.NetworkManagerDeploymentStatusListNextOptionalParams | msRest.ServiceCallback<Models.NetworkManagerDeploymentStatusListResult>, callback?: msRest.ServiceCallback<Models.NetworkManagerDeploymentStatusListResult>): Promise<Models.NetworkManagerDeploymentStatusListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.NetworkManagerDeploymentStatusListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/listDeploymentStatus",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.networkManagerName
  ],
  queryParameters: [
    Parameters.top,
    Parameters.skipToken,
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.NetworkManagerDeploymentStatusParameter,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.NetworkManagerDeploymentStatusListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.top,
    Parameters.skipToken,
    Parameters.apiVersion2
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.NetworkManagerDeploymentStatusListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
