/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/masterCustomIPPrefixesMappers";
import * as Parameters from "../models/parameters";
import { NetworkManagementClientContext } from "../networkManagementClientContext";

/** Class representing a MasterCustomIPPrefixes. */
export class MasterCustomIPPrefixes {
  private readonly client: NetworkManagementClientContext;

  /**
   * Create a MasterCustomIPPrefixes.
   * @param {NetworkManagementClientContext} client Reference to the service client.
   */
  constructor(client: NetworkManagementClientContext) {
    this.client = client;
  }

  /**
   * Deletes the specified master custom IP Prefix.
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the MasterCustomIPPrefix.
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, masterCustomIpPrefixName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {
    return this.beginDeleteMethod(resourceGroupName,masterCustomIpPrefixName,options)
      .then(lroPoller => lroPoller.pollUntilFinished());
  }

  /**
   * Gets the specified master custom IP prefix in a specified resource group.
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the master custom IP prefix.
   * @param [options] The optional parameters
   * @returns Promise<Models.MasterCustomIPPrefixesGetResponse>
   */
  get(resourceGroupName: string, masterCustomIpPrefixName: string, options?: Models.MasterCustomIPPrefixesGetOptionalParams): Promise<Models.MasterCustomIPPrefixesGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the master custom IP prefix.
   * @param callback The callback
   */
  get(resourceGroupName: string, masterCustomIpPrefixName: string, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefix>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the master custom IP prefix.
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, masterCustomIpPrefixName: string, options: Models.MasterCustomIPPrefixesGetOptionalParams, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefix>): void;
  get(resourceGroupName: string, masterCustomIpPrefixName: string, options?: Models.MasterCustomIPPrefixesGetOptionalParams | msRest.ServiceCallback<Models.MasterCustomIpPrefix>, callback?: msRest.ServiceCallback<Models.MasterCustomIpPrefix>): Promise<Models.MasterCustomIPPrefixesGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        masterCustomIpPrefixName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.MasterCustomIPPrefixesGetResponse>;
  }

  /**
   * Creates or updates a master custom IP prefix.
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the master custom IP prefix.
   * @param parameters Parameters supplied to the create or update master custom IP prefix operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MasterCustomIPPrefixesCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, masterCustomIpPrefixName: string, parameters: Models.MasterCustomIpPrefix, options?: msRest.RequestOptionsBase): Promise<Models.MasterCustomIPPrefixesCreateOrUpdateResponse> {
    return this.beginCreateOrUpdate(resourceGroupName,masterCustomIpPrefixName,parameters,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.MasterCustomIPPrefixesCreateOrUpdateResponse>;
  }

  /**
   * Updates master custom IP prefix tags.
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the master custom IP prefix.
   * @param parameters Parameters supplied to update master custom IP prefix tags.
   * @param [options] The optional parameters
   * @returns Promise<Models.MasterCustomIPPrefixesUpdateTagsResponse>
   */
  updateTags(resourceGroupName: string, masterCustomIpPrefixName: string, parameters: Models.TagsObject, options?: msRest.RequestOptionsBase): Promise<Models.MasterCustomIPPrefixesUpdateTagsResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the master custom IP prefix.
   * @param parameters Parameters supplied to update master custom IP prefix tags.
   * @param callback The callback
   */
  updateTags(resourceGroupName: string, masterCustomIpPrefixName: string, parameters: Models.TagsObject, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefix>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the master custom IP prefix.
   * @param parameters Parameters supplied to update master custom IP prefix tags.
   * @param options The optional parameters
   * @param callback The callback
   */
  updateTags(resourceGroupName: string, masterCustomIpPrefixName: string, parameters: Models.TagsObject, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefix>): void;
  updateTags(resourceGroupName: string, masterCustomIpPrefixName: string, parameters: Models.TagsObject, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MasterCustomIpPrefix>, callback?: msRest.ServiceCallback<Models.MasterCustomIpPrefix>): Promise<Models.MasterCustomIPPrefixesUpdateTagsResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        masterCustomIpPrefixName,
        parameters,
        options
      },
      updateTagsOperationSpec,
      callback) as Promise<Models.MasterCustomIPPrefixesUpdateTagsResponse>;
  }

  /**
   * Gets all master custom IP prefixes in a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.MasterCustomIPPrefixesListAllResponse>
   */
  listAll(options?: msRest.RequestOptionsBase): Promise<Models.MasterCustomIPPrefixesListAllResponse>;
  /**
   * @param callback The callback
   */
  listAll(callback: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  listAll(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): void;
  listAll(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>, callback?: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): Promise<Models.MasterCustomIPPrefixesListAllResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      listAllOperationSpec,
      callback) as Promise<Models.MasterCustomIPPrefixesListAllResponse>;
  }

  /**
   * Gets all master custom IP prefixes in a resource group.
   * @param resourceGroupName The name of the resource group.
   * @param [options] The optional parameters
   * @returns Promise<Models.MasterCustomIPPrefixesListResponse>
   */
  list(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.MasterCustomIPPrefixesListResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param callback The callback
   */
  list(resourceGroupName: string, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param options The optional parameters
   * @param callback The callback
   */
  list(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): void;
  list(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>, callback?: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): Promise<Models.MasterCustomIPPrefixesListResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      listOperationSpec,
      callback) as Promise<Models.MasterCustomIPPrefixesListResponse>;
  }

  /**
   * Deletes the specified master custom IP Prefix.
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the MasterCustomIPPrefix.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginDeleteMethod(resourceGroupName: string, masterCustomIpPrefixName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        masterCustomIpPrefixName,
        options
      },
      beginDeleteMethodOperationSpec,
      options);
  }

  /**
   * Creates or updates a master custom IP prefix.
   * @param resourceGroupName The name of the resource group.
   * @param masterCustomIpPrefixName The name of the master custom IP prefix.
   * @param parameters Parameters supplied to the create or update master custom IP prefix operation.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginCreateOrUpdate(resourceGroupName: string, masterCustomIpPrefixName: string, parameters: Models.MasterCustomIpPrefix, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        resourceGroupName,
        masterCustomIpPrefixName,
        parameters,
        options
      },
      beginCreateOrUpdateOperationSpec,
      options);
  }

  /**
   * Gets all master custom IP prefixes in a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MasterCustomIPPrefixesListAllNextResponse>
   */
  listAllNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MasterCustomIPPrefixesListAllNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listAllNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listAllNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): void;
  listAllNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>, callback?: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): Promise<Models.MasterCustomIPPrefixesListAllNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listAllNextOperationSpec,
      callback) as Promise<Models.MasterCustomIPPrefixesListAllNextResponse>;
  }

  /**
   * Gets all master custom IP prefixes in a resource group.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.MasterCustomIPPrefixesListNextResponse>
   */
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.MasterCustomIPPrefixesListNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): void;
  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>, callback?: msRest.ServiceCallback<Models.MasterCustomIpPrefixListResult>): Promise<Models.MasterCustomIPPrefixesListNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listNextOperationSpec,
      callback) as Promise<Models.MasterCustomIPPrefixesListNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/masterCustomIpPrefixes/{masterCustomIpPrefixName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.masterCustomIpPrefixName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0,
    Parameters.expand
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MasterCustomIpPrefix
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const updateTagsOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/masterCustomIpPrefixes/{masterCustomIpPrefixName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.masterCustomIpPrefixName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.TagsObject,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.MasterCustomIpPrefix
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listAllOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Network/masterCustomIpPrefixes",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MasterCustomIpPrefixListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/masterCustomIpPrefixes",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MasterCustomIpPrefixListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginDeleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/masterCustomIpPrefixes/{masterCustomIpPrefixName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.masterCustomIpPrefixName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    202: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/masterCustomIpPrefixes/{masterCustomIpPrefixName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.masterCustomIpPrefixName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.MasterCustomIpPrefix,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.MasterCustomIpPrefix
    },
    201: {
      bodyMapper: Mappers.MasterCustomIpPrefix
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listAllNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MasterCustomIpPrefixListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MasterCustomIpPrefixListResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
