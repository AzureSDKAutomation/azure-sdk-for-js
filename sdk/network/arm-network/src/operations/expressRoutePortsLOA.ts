/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/expressRoutePortsLOAMappers";
import * as Parameters from "../models/parameters";
import { NetworkManagementClientContext } from "../networkManagementClientContext";

/** Class representing a ExpressRoutePortsLOA. */
export class ExpressRoutePortsLOA {
  private readonly client: NetworkManagementClientContext;

  /**
   * Create a ExpressRoutePortsLOA.
   * @param {NetworkManagementClientContext} client Reference to the service client.
   */
  constructor(client: NetworkManagementClientContext) {
    this.client = client;
  }

  /**
   * Generate LOA for the requested ExpressRoutePort resource.
   * @param resourceGroupName The name of the resource group.
   * @param expressRoutePortName The name of ExpressRoutePort.
   * @param request Request parameters supplied to generate LOA.
   * @param [options] The optional parameters
   * @returns Promise<Models.ExpressRoutePortsLOAGenerateResponse>
   */
  generate(resourceGroupName: string, expressRoutePortName: string, request: Models.GenerateExpressRoutePortsLOARequest, options?: msRest.RequestOptionsBase): Promise<Models.ExpressRoutePortsLOAGenerateResponse>;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param expressRoutePortName The name of ExpressRoutePort.
   * @param request Request parameters supplied to generate LOA.
   * @param callback The callback
   */
  generate(resourceGroupName: string, expressRoutePortName: string, request: Models.GenerateExpressRoutePortsLOARequest, callback: msRest.ServiceCallback<Models.GenerateExpressRoutePortsLOAResult>): void;
  /**
   * @param resourceGroupName The name of the resource group.
   * @param expressRoutePortName The name of ExpressRoutePort.
   * @param request Request parameters supplied to generate LOA.
   * @param options The optional parameters
   * @param callback The callback
   */
  generate(resourceGroupName: string, expressRoutePortName: string, request: Models.GenerateExpressRoutePortsLOARequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GenerateExpressRoutePortsLOAResult>): void;
  generate(resourceGroupName: string, expressRoutePortName: string, request: Models.GenerateExpressRoutePortsLOARequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GenerateExpressRoutePortsLOAResult>, callback?: msRest.ServiceCallback<Models.GenerateExpressRoutePortsLOAResult>): Promise<Models.ExpressRoutePortsLOAGenerateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        expressRoutePortName,
        request,
        options
      },
      generateOperationSpec,
      callback) as Promise<Models.ExpressRoutePortsLOAGenerateResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const generateOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}/generateLOA",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.expressRoutePortName
  ],
  queryParameters: [
    Parameters.apiVersion0
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "request",
    mapper: {
      ...Mappers.GenerateExpressRoutePortsLOARequest,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.GenerateExpressRoutePortsLOAResult
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
