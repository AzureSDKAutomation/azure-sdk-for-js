/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import * as Mappers from "../models/billingAccountMappers";
import * as Parameters from "../models/parameters";
import { SubscriptionClientContext } from "../subscriptionClientContext";

/** Class representing a BillingAccount. */
export class BillingAccount {
  private readonly client: SubscriptionClientContext;

  /**
   * Create a BillingAccount.
   * @param {SubscriptionClientContext} client Reference to the service client.
   */
  constructor(client: SubscriptionClientContext) {
    this.client = client;
  }

  /**
   * Get Billing Account Policy.
   * @param billingAccountId Billing Account Id.
   * @param [options] The optional parameters
   * @returns Promise<Models.BillingAccountGetPolicyResponse>
   */
  getPolicy(billingAccountId: string, options?: msRest.RequestOptionsBase): Promise<Models.BillingAccountGetPolicyResponse> {
    return this.beginGetPolicy(billingAccountId,options)
      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.BillingAccountGetPolicyResponse>;
  }

  /**
   * Get Billing Account Policy.
   * @param billingAccountId Billing Account Id.
   * @param [options] The optional parameters
   * @returns Promise<msRestAzure.LROPoller>
   */
  beginGetPolicy(billingAccountId: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {
    return this.client.sendLRORequest(
      {
        billingAccountId,
        options
      },
      beginGetPolicyOperationSpec,
      options);
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const beginGetPolicyOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Subscription/policies/default",
  urlParameters: [
    Parameters.billingAccountId
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.BillingAccountPoliciesResponse
    },
    default: {
      bodyMapper: Mappers.ErrorResponseBody
    }
  },
  serializer
};
