/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const ProxyResource: msRest.CompositeMapper = {
  serializedName: "ProxyResource",
  type: {
    name: "Composite",
    className: "ProxyResource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DefaultSupportPlanResponseResult: msRest.CompositeMapper = {
  serializedName: "DefaultSupportPlanResponseResult",
  type: {
    name: "Composite",
    className: "DefaultSupportPlanResponseResult",
    modelProperties: {
      ...ProxyResource.type.modelProperties,
      planType: {
        serializedName: "properties.planType",
        type: {
          name: "Enum",
          allowedValues: [
            "basic_support",
            "developer_support",
            "standard_support",
            "prodirect_support"
          ]
        }
      },
      endDate: {
        serializedName: "properties.endDate",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SupportPlanName: msRest.CompositeMapper = {
  serializedName: "SupportPlanName",
  type: {
    name: "Composite",
    className: "SupportPlanName",
    modelProperties: {
      planType: {
        serializedName: "planType",
        type: {
          name: "Enum",
          allowedValues: [
            "basic_support",
            "developer_support",
            "standard_support",
            "prodirect_support"
          ]
        }
      }
    }
  }
};

export const PurchaseSupportPlanCreateOrUpdateHeaders: msRest.CompositeMapper = {
  serializedName: "purchasesupportplan-createorupdate-headers",
  type: {
    name: "Composite",
    className: "PurchaseSupportPlanCreateOrUpdateHeaders",
    modelProperties: {
      location: {
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      retryAfter: {
        serializedName: "retry-after",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const SupportPlanResponseListResult: msRest.CompositeMapper = {
  serializedName: "SupportPlanResponseListResult",
  type: {
    name: "Composite",
    className: "SupportPlanResponseListResult",
    modelProperties: {
      value: {
        readOnly: true,
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DefaultSupportPlanResponseResult"
            }
          }
        }
      },
      nextLink: {
        readOnly: true,
        serializedName: "nextLink",
        type: {
          name: "String"
        }
      }
    }
  }
};
