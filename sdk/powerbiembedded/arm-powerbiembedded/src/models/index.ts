/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * An interface representing ErrorDetail.
 */
export interface ErrorDetail {
  code?: string;
  message?: string;
  target?: string;
}

/**
 * An interface representing ErrorModel.
 */
export interface ErrorModel {
  code?: string;
  message?: string;
  target?: string;
  details?: ErrorDetail[];
}

/**
 * An interface representing AzureSku.
 */
export interface AzureSku {
}

/**
 * An interface representing WorkspaceCollection.
 */
export interface WorkspaceCollection {
  /**
   * Resource id
   */
  id?: string;
  /**
   * Workspace collection name
   */
  name?: string;
  /**
   * Resource type
   */
  type?: string;
  /**
   * Azure location
   */
  location?: string;
  tags?: { [propertyName: string]: string };
  /**
   * Properties
   */
  properties?: any;
}

/**
 * An interface representing Workspace.
 */
export interface Workspace {
  /**
   * Workspace id
   */
  id?: string;
  /**
   * Workspace name
   */
  name?: string;
  /**
   * Resource type
   */
  type?: string;
  /**
   * Property bag
   */
  properties?: any;
}

/**
 * An interface representing Display.
 */
export interface Display {
  /**
   * The localized friendly form of the resource provider name. This form is also expected to
   * include the publisher/company responsible. Use Title Casing. Begin with "Microsoft" for 1st
   * party services.
   */
  provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation. This form
   * should match the public documentation for the resource provider. Use Title Casing. For
   * examples, refer to the "name" section.
   */
  resource?: string;
  /**
   * The localized friendly name for the operation as shown to the user. This name should be
   * concise (to fit in drop downs), but clear (self-documenting). Use Title Casing and include the
   * entity/resource to which it applies.
   */
  operation?: string;
  /**
   * The localized friendly description for the operation as shown to the user. This description
   * should be thorough, yet concise. It will be used in tool-tips and detailed views.
   */
  description?: string;
  /**
   * The intended executor of the operation; governs the display of the operation in the RBAC UX
   * and the audit logs UX. Default value is 'user,system'
   */
  origin?: string;
}

/**
 * An interface representing Operation.
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object. This name should match
   * the action name that appears in RBAC / the event service.
   */
  name?: string;
  display?: Display;
}

/**
 * An interface representing OperationList.
 */
export interface OperationList {
  value?: Operation[];
}

/**
 * An interface representing WorkspaceCollectionAccessKeys.
 */
export interface WorkspaceCollectionAccessKeys {
  /**
   * Access key 1
   */
  key1?: string;
  /**
   * Access key 2
   */
  key2?: string;
}

/**
 * An interface representing WorkspaceCollectionAccessKey.
 */
export interface WorkspaceCollectionAccessKey {
  /**
   * Key name. Possible values include: 'key1', 'key2'
   */
  keyName?: AccessKeyName;
}

/**
 * An interface representing CreateWorkspaceCollectionRequest.
 */
export interface CreateWorkspaceCollectionRequest {
  /**
   * Azure location
   */
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * An interface representing UpdateWorkspaceCollectionRequest.
 */
export interface UpdateWorkspaceCollectionRequest {
  tags?: { [propertyName: string]: string };
}

/**
 * An interface representing CheckNameRequest.
 */
export interface CheckNameRequest {
  /**
   * Workspace collection name
   */
  name?: string;
  /**
   * Resource type. Default value: 'Microsoft.PowerBI/workspaceCollections'.
   */
  type?: string;
}

/**
 * An interface representing CheckNameResponse.
 */
export interface CheckNameResponse {
  /**
   * Specifies a Boolean value that indicates whether the specified Power BI Workspace Collection
   * name is available to use.
   */
  nameAvailable?: boolean;
  /**
   * Reason why the workspace collection name cannot be used. Possible values include:
   * 'Unavailable', 'Invalid'
   */
  reason?: CheckNameReason;
  /**
   * Message indicating an unavailable name due to a conflict, or a description of the naming rules
   * that are violated.
   */
  message?: string;
}

/**
 * An interface representing MigrateWorkspaceCollectionRequest.
 */
export interface MigrateWorkspaceCollectionRequest {
  /**
   * Name of the resource group the Power BI workspace collections will be migrated to.
   */
  targetResourceGroup?: string;
  resources?: string[];
}

/**
 * An interface representing PowerBIEmbeddedManagementClientOptions.
 */
export interface PowerBIEmbeddedManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * An interface representing the WorkspaceCollectionList.
 * @extends Array<WorkspaceCollection>
 */
export interface WorkspaceCollectionList extends Array<WorkspaceCollection> {
}

/**
 * @interface
 * An interface representing the WorkspaceList.
 * @extends Array<Workspace>
 */
export interface WorkspaceList extends Array<Workspace> {
}

/**
 * Defines values for AccessKeyName.
 * Possible values include: 'key1', 'key2'
 * @readonly
 * @enum {string}
 */
export type AccessKeyName = 'key1' | 'key2';

/**
 * Defines values for CheckNameReason.
 * Possible values include: 'Unavailable', 'Invalid'
 * @readonly
 * @enum {string}
 */
export type CheckNameReason = 'Unavailable' | 'Invalid';

/**
 * Contains response data for the getByName operation.
 */
export type WorkspaceCollectionsGetByNameResponse = WorkspaceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceCollection;
    };
};

/**
 * Contains response data for the create operation.
 */
export type WorkspaceCollectionsCreateResponse = WorkspaceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceCollection;
    };
};

/**
 * Contains response data for the update operation.
 */
export type WorkspaceCollectionsUpdateResponse = WorkspaceCollection & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceCollection;
    };
};

/**
 * Contains response data for the checkNameAvailability operation.
 */
export type WorkspaceCollectionsCheckNameAvailabilityResponse = CheckNameResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckNameResponse;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type WorkspaceCollectionsListByResourceGroupResponse = WorkspaceCollectionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceCollectionList;
    };
};

/**
 * Contains response data for the listBySubscription operation.
 */
export type WorkspaceCollectionsListBySubscriptionResponse = WorkspaceCollectionList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceCollectionList;
    };
};

/**
 * Contains response data for the getAccessKeys operation.
 */
export type WorkspaceCollectionsGetAccessKeysResponse = WorkspaceCollectionAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceCollectionAccessKeys;
    };
};

/**
 * Contains response data for the regenerateKey operation.
 */
export type WorkspaceCollectionsRegenerateKeyResponse = WorkspaceCollectionAccessKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceCollectionAccessKeys;
    };
};

/**
 * Contains response data for the getAvailableOperations operation.
 */
export type GetAvailableOperationsResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the list operation.
 */
export type WorkspacesListResponse = WorkspaceList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: WorkspaceList;
    };
};
