/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Error object returned by the RP
 */
export interface ErrorModel {
  /**
   * Error code. Possible values include: 'InvalidRequestParameter', 'MissingRequestParameter'
   */
  code?: ErrorCode;
  /**
   * A user readable error message. Localized based on x-ms-effective-locale header in the request
   */
  message?: string;
}

/**
 * The SKU to be applied for this resource
 */
export interface Sku {
  /**
   * Name of the SKU to be applied
   */
  name?: string;
}

/**
 * An interface representing Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Fully qualified resource Id for the resource. Ex -
   * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The name of the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The type of the resource. Ex- Microsoft.Compute/virtualMachines or
   * Microsoft.Storage/storageAccounts.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * Response on GET of a hybrid use benefit
 */
export interface HybridUseBenefitModel extends Resource {
  /**
   * Hybrid use benefit SKU
   */
  sku: Sku;
  /**
   * Indicates the revision of the hybrid use benefit
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: number;
  /**
   * Provisioning state. Possible values include: 'Succeeded', 'Cancelled', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Created date
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdDate?: Date;
  /**
   * Last updated date
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastUpdatedDate?: Date;
}

/**
 * Display fields for an operation.
 */
export interface OperationDisplay {
  /**
   * Resource Provider name
   */
  provider?: string;
  /**
   * Resource that is acted upon
   */
  resource?: string;
  /**
   * Operation to be performed
   */
  operation?: string;
  /**
   * Description of the operation
   */
  description?: string;
}

/**
 * Operation response.
 */
export interface OperationResponse {
  /**
   * Name of the operation
   */
  name?: string;
  /**
   * Display properties for the operation
   */
  display?: OperationDisplay;
  /**
   * Origin of the response
   */
  origin?: string;
}

/**
 * The resource model definition for a ARM proxy resource. It will have everything other than
 * required location and tags
 */
export interface ProxyResource extends Resource {
}

/**
 * The resource model definition for a ARM tracked top level resource
 */
export interface TrackedResource extends Resource {
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The geo-location where the resource lives
   */
  location: string;
}

/**
 * The resource model definition for a Azure Resource Manager resource with an etag.
 */
export interface AzureEntityResource extends Resource {
  /**
   * Resource Etag.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
}

/**
 * Optional Parameters.
 */
export interface HybridUseBenefitListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * Supports applying filter on the type of SKU
   */
  filter?: string;
}

/**
 * An interface representing SoftwareplanClientOptions.
 */
export interface SoftwareplanClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * List of hybrid use benefits
 * @extends Array<HybridUseBenefitModel>
 */
export interface HybridUseBenefitListResult extends Array<HybridUseBenefitModel> {
  /**
   * Url to get the next page of items.
   */
  nextLink?: string;
}

/**
 * @interface
 * List all the operations.
 * @extends Array<OperationResponse>
 */
export interface OperationList extends Array<OperationResponse> {
  /**
   * Url to get the next page of items.
   */
  nextLink?: string;
}

/**
 * Defines values for ErrorCode.
 * Possible values include: 'InvalidRequestParameter', 'MissingRequestParameter'
 * @readonly
 * @enum {string}
 */
export type ErrorCode = 'InvalidRequestParameter' | 'MissingRequestParameter';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Succeeded', 'Cancelled', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Succeeded' | 'Cancelled' | 'Failed';

/**
 * Contains response data for the list operation.
 */
export type HybridUseBenefitListResponse = HybridUseBenefitListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridUseBenefitListResult;
    };
};

/**
 * Contains response data for the create operation.
 */
export type HybridUseBenefitCreateResponse = HybridUseBenefitModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridUseBenefitModel;
    };
};

/**
 * Contains response data for the update operation.
 */
export type HybridUseBenefitUpdateResponse = HybridUseBenefitModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridUseBenefitModel;
    };
};

/**
 * Contains response data for the get operation.
 */
export type HybridUseBenefitGetResponse = HybridUseBenefitModel & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridUseBenefitModel;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type HybridUseBenefitListNextResponse = HybridUseBenefitListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridUseBenefitListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type HybridUseBenefitRevisionListResponse = HybridUseBenefitListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridUseBenefitListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type HybridUseBenefitRevisionListNextResponse = HybridUseBenefitListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HybridUseBenefitListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationList;
    };
};
