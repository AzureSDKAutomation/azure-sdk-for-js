/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export const CloudError = CloudErrorMapper;
export const BaseResource = BaseResourceMapper;

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "String"
        }
      },
      name: {
        readOnly: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        readOnly: true,
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      location: {
        required: true,
        serializedName: "location",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const EmailReceiver: msRest.CompositeMapper = {
  serializedName: "EmailReceiver",
  type: {
    name: "Composite",
    className: "EmailReceiver",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        required: true,
        serializedName: "emailAddress",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "NotSpecified",
            "Enabled",
            "Disabled"
          ]
        }
      }
    }
  }
};

export const SmsReceiver: msRest.CompositeMapper = {
  serializedName: "SmsReceiver",
  type: {
    name: "Composite",
    className: "SmsReceiver",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      countryCode: {
        required: true,
        serializedName: "countryCode",
        type: {
          name: "String"
        }
      },
      phoneNumber: {
        required: true,
        serializedName: "phoneNumber",
        type: {
          name: "String"
        }
      },
      status: {
        readOnly: true,
        serializedName: "status",
        type: {
          name: "Enum",
          allowedValues: [
            "NotSpecified",
            "Enabled",
            "Disabled"
          ]
        }
      }
    }
  }
};

export const WebhookReceiver: msRest.CompositeMapper = {
  serializedName: "WebhookReceiver",
  type: {
    name: "Composite",
    className: "WebhookReceiver",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      serviceUri: {
        required: true,
        serializedName: "serviceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ItsmReceiver: msRest.CompositeMapper = {
  serializedName: "ItsmReceiver",
  type: {
    name: "Composite",
    className: "ItsmReceiver",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      workspaceId: {
        required: true,
        serializedName: "workspaceId",
        type: {
          name: "String"
        }
      },
      connectionId: {
        required: true,
        serializedName: "connectionId",
        type: {
          name: "String"
        }
      },
      ticketConfiguration: {
        required: true,
        serializedName: "ticketConfiguration",
        type: {
          name: "String"
        }
      },
      region: {
        required: true,
        serializedName: "region",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AzureAppPushReceiver: msRest.CompositeMapper = {
  serializedName: "AzureAppPushReceiver",
  type: {
    name: "Composite",
    className: "AzureAppPushReceiver",
    modelProperties: {
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      emailAddress: {
        required: true,
        serializedName: "emailAddress",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AutomationRunbookReceiver: msRest.CompositeMapper = {
  serializedName: "AutomationRunbookReceiver",
  type: {
    name: "Composite",
    className: "AutomationRunbookReceiver",
    modelProperties: {
      automationAccountId: {
        required: true,
        serializedName: "automationAccountId",
        type: {
          name: "String"
        }
      },
      runbookName: {
        required: true,
        serializedName: "runbookName",
        type: {
          name: "String"
        }
      },
      webhookResourceId: {
        required: true,
        serializedName: "webhookResourceId",
        type: {
          name: "String"
        }
      },
      isGlobalRunbook: {
        required: true,
        serializedName: "isGlobalRunbook",
        type: {
          name: "Boolean"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      serviceUri: {
        serializedName: "serviceUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionGroupResource: msRest.CompositeMapper = {
  serializedName: "ActionGroupResource",
  type: {
    name: "Composite",
    className: "ActionGroupResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      groupShortName: {
        required: true,
        serializedName: "properties.groupShortName",
        constraints: {
          MaxLength: 12
        },
        type: {
          name: "String"
        }
      },
      enabled: {
        required: true,
        serializedName: "properties.enabled",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      emailReceivers: {
        serializedName: "properties.emailReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "EmailReceiver"
            }
          }
        }
      },
      smsReceivers: {
        serializedName: "properties.smsReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SmsReceiver"
            }
          }
        }
      },
      webhookReceivers: {
        serializedName: "properties.webhookReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "WebhookReceiver"
            }
          }
        }
      },
      itsmReceivers: {
        serializedName: "properties.itsmReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ItsmReceiver"
            }
          }
        }
      },
      azureAppPushReceivers: {
        serializedName: "properties.azureAppPushReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AzureAppPushReceiver"
            }
          }
        }
      },
      automationRunbookReceivers: {
        serializedName: "properties.automationRunbookReceivers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AutomationRunbookReceiver"
            }
          }
        }
      }
    }
  }
};

export const EnableRequest: msRest.CompositeMapper = {
  serializedName: "EnableRequest",
  type: {
    name: "Composite",
    className: "EnableRequest",
    modelProperties: {
      receiverName: {
        required: true,
        serializedName: "receiverName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResponse: msRest.CompositeMapper = {
  serializedName: "ErrorResponse",
  type: {
    name: "Composite",
    className: "ErrorResponse",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionGroupPatchBody: msRest.CompositeMapper = {
  serializedName: "ActionGroupPatchBody",
  type: {
    name: "Composite",
    className: "ActionGroupPatchBody",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ActivityLogAlertLeafCondition: msRest.CompositeMapper = {
  serializedName: "ActivityLogAlertLeafCondition",
  type: {
    name: "Composite",
    className: "ActivityLogAlertLeafCondition",
    modelProperties: {
      field: {
        required: true,
        serializedName: "field",
        type: {
          name: "String"
        }
      },
      equals: {
        required: true,
        serializedName: "equals",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActivityLogAlertAllOfCondition: msRest.CompositeMapper = {
  serializedName: "ActivityLogAlertAllOfCondition",
  type: {
    name: "Composite",
    className: "ActivityLogAlertAllOfCondition",
    modelProperties: {
      allOf: {
        required: true,
        serializedName: "allOf",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActivityLogAlertLeafCondition"
            }
          }
        }
      }
    }
  }
};

export const ActivityLogAlertActionGroup: msRest.CompositeMapper = {
  serializedName: "ActivityLogAlertActionGroup",
  type: {
    name: "Composite",
    className: "ActivityLogAlertActionGroup",
    modelProperties: {
      actionGroupId: {
        required: true,
        serializedName: "actionGroupId",
        type: {
          name: "String"
        }
      },
      webhookProperties: {
        serializedName: "webhookProperties",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ActivityLogAlertActionList: msRest.CompositeMapper = {
  serializedName: "ActivityLogAlertActionList",
  type: {
    name: "Composite",
    className: "ActivityLogAlertActionList",
    modelProperties: {
      actionGroups: {
        serializedName: "actionGroups",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActivityLogAlertActionGroup"
            }
          }
        }
      }
    }
  }
};

export const ActivityLogAlertResource: msRest.CompositeMapper = {
  serializedName: "ActivityLogAlertResource",
  type: {
    name: "Composite",
    className: "ActivityLogAlertResource",
    modelProperties: {
      ...Resource.type.modelProperties,
      scopes: {
        required: true,
        serializedName: "properties.scopes",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      },
      condition: {
        required: true,
        serializedName: "properties.condition",
        type: {
          name: "Composite",
          className: "ActivityLogAlertAllOfCondition"
        }
      },
      actions: {
        required: true,
        serializedName: "properties.actions",
        type: {
          name: "Composite",
          className: "ActivityLogAlertActionList"
        }
      },
      description: {
        serializedName: "properties.description",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActivityLogAlertPatchBody: msRest.CompositeMapper = {
  serializedName: "ActivityLogAlertPatchBody",
  type: {
    name: "Composite",
    className: "ActivityLogAlertPatchBody",
    modelProperties: {
      tags: {
        serializedName: "tags",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      enabled: {
        serializedName: "properties.enabled",
        defaultValue: true,
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ActionGroupList: msRest.CompositeMapper = {
  serializedName: "ActionGroupList",
  type: {
    name: "Composite",
    className: "ActionGroupList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionGroupResource"
            }
          }
        }
      }
    }
  }
};

export const ActivityLogAlertList: msRest.CompositeMapper = {
  serializedName: "ActivityLogAlertList",
  type: {
    name: "Composite",
    className: "ActivityLogAlertList",
    modelProperties: {
      value: {
        serializedName: "",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActivityLogAlertResource"
            }
          }
        }
      }
    }
  }
};
