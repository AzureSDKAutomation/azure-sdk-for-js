/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * Top level metadata
 * https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
 */
export interface SystemData {
  /**
   * A string identifier for the identity that created the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdBy?: string;
  /**
   * The type of identity that created the resource: user, application, managedIdentity, key
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdByType?: string;
  /**
   * The timestamp of resource creation (UTC)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly createdAt?: Date;
  /**
   * A string identifier for the identity that last modified the resource
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedBy?: string;
  /**
   * The type of identity that last modified the resource: user, application, managedIdentity, key
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedByType?: string;
  /**
   * The timestamp of resource last modification (UTC)
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedAt?: Date;
}

/**
 * The Resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Top level metadata
   * https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
   */
  systemData?: SystemData;
}

/**
 * ARM proxy resource.
 */
export interface ProxyResource extends Resource {
}

/**
 * Error definition.
 */
export interface ErrorDefinition {
  /**
   * Service specific error code which serves as the substatus for the HTTP error code.
   */
  code: string;
  /**
   * Description of the error.
   */
  message: string;
}

/**
 * Error response.
 */
export interface ErrorResponse {
  /**
   * Error definition.
   */
  error?: ErrorDefinition;
}

/**
 * Specifies that the scope of the extensionInstance is Cluster
 */
export interface ScopeCluster {
  /**
   * Namespace where the extension Release must be placed, for a Cluster scoped extensionInstance.
   * If this namespace does not exist, it will be created
   */
  releaseNamespace?: string;
}

/**
 * Specifies that the scope of the extensionInstance is Namespace
 */
export interface ScopeNamespace {
  /**
   * Namespace where the extensionInstance will be created for an Namespace scoped
   * extensionInstance.  If this namespace does not exist, it will be created
   */
  targetNamespace?: string;
}

/**
 * Scope of the extensionInstance. It can be either Cluster or Namespace; but not both.
 */
export interface Scope {
  /**
   * Specifies that the scope of the extensionInstance is Cluster
   */
  cluster?: ScopeCluster;
  /**
   * Specifies that the scope of the extensionInstance is Namespace
   */
  namespace?: ScopeNamespace;
}

/**
 * Status from this instance of the extension.
 */
export interface ExtensionStatus {
  /**
   * Status code provided by the Extension
   */
  code?: string;
  /**
   * Short description of status of this instance of the extension.
   */
  displayStatus?: string;
  /**
   * Level of the status. Possible values include: 'Error', 'Warning', 'Information'. Default
   * value: 'Information'.
   */
  level?: LevelType;
  /**
   * Detailed message of the status from the Extension instance.
   */
  message?: string;
  /**
   * DateLiteral (per ISO8601) noting the time of installation status.
   */
  time?: string;
}

/**
 * Identity for the managed cluster.
 */
export interface ConfigurationIdentity {
  /**
   * The principal id of the system assigned identity which is used by the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly principalId?: string;
  /**
   * The tenant id of the system assigned identity which is used by the configuration.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tenantId?: string;
  /**
   * The type of identity used for the configuration. Type 'SystemAssigned' will use an implicitly
   * created identity. Type 'None' will not use Managed Identity for the configuration. Possible
   * values include: 'SystemAssigned', 'None'
   */
  type?: ResourceIdentityType;
}

/**
 * The Extension Instance object.
 */
export interface ExtensionInstance extends ProxyResource {
  /**
   * Type of the Extension, of which this resource is an instance of.  It must be one of the
   * Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
   */
  extensionType?: string;
  /**
   * Flag to note if this instance participates in auto upgrade of minor version, or not.
   */
  autoUpgradeMinorVersion?: boolean;
  /**
   * ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview,
   * etc.) - only if autoUpgradeMinorVersion is 'true'.
   */
  releaseTrain?: string;
  /**
   * Version of the extension for this extension instance, if it is 'pinned' to a specific version.
   * autoUpgradeMinorVersion must be 'false'.
   */
  version?: string;
  /**
   * Scope at which the extension instance is installed.
   */
  scope?: Scope;
  /**
   * Configuration settings, as name-value pairs for configuring this instance of the extension.
   */
  configurationSettings?: { [propertyName: string]: string };
  /**
   * Configuration settings that are sensitive, as name-value pairs for configuring this instance
   * of the extension.
   */
  configurationProtectedSettings?: { [propertyName: string]: string };
  /**
   * Status of installation of this instance of the extension. Possible values include: 'Pending',
   * 'Installed', 'Failed'
   */
  installState?: InstallStateType;
  /**
   * Status from this instance of the extension.
   */
  statuses?: ExtensionStatus[];
  /**
   * DateLiteral (per ISO8601) noting the time the resource was created by the client (user).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly creationTime?: string;
  /**
   * DateLiteral (per ISO8601) noting the time the resource was modified by the client (user).
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastModifiedTime?: string;
  /**
   * DateLiteral (per ISO8601) noting the time of last status from the agent.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly lastStatusTime?: string;
  /**
   * Error information from the Agent - e.g. errors during installation.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly errorInfo?: ErrorDefinition;
  /**
   * The identity of the configuration.
   */
  identity?: ConfigurationIdentity;
}

/**
 * Update Extension Instance request object.
 */
export interface ExtensionInstanceUpdate {
  /**
   * Flag to note if this instance participates in Extension Lifecycle Management or not.
   */
  autoUpgradeMinorVersion?: boolean;
  /**
   * ReleaseTrain this extension instance participates in for auto-upgrade (e.g. Stable, Preview,
   * etc.) - only if autoUpgradeMinorVersion is 'true'.
   */
  releaseTrain?: string;
  /**
   * Version number of extension, to 'pin' to a specific version.  autoUpgradeMinorVersion must be
   * 'false'.
   */
  version?: string;
}

/**
 * An interface representing KubernetesConfigurationClientOptions.
 */
export interface KubernetesConfigurationClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of the request to list Extension Instances.  It contains a list of ExtensionInstance
 * objects and a URL link to get the next set of results.
 * @extends Array<ExtensionInstance>
 */
export interface ExtensionInstancesList extends Array<ExtensionInstance> {
  /**
   * URL to get the next set of extension instance objects, if any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for InstallStateType.
 * Possible values include: 'Pending', 'Installed', 'Failed'
 * @readonly
 * @enum {string}
 */
export type InstallStateType = 'Pending' | 'Installed' | 'Failed';

/**
 * Defines values for LevelType.
 * Possible values include: 'Error', 'Warning', 'Information'
 * @readonly
 * @enum {string}
 */
export type LevelType = 'Error' | 'Warning' | 'Information';

/**
 * Defines values for ResourceIdentityType.
 * Possible values include: 'SystemAssigned', 'None'
 * @readonly
 * @enum {string}
 */
export type ResourceIdentityType = 'SystemAssigned' | 'None';

/**
 * Defines values for ClusterRp.
 * Possible values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
 * @readonly
 * @enum {string}
 */
export type ClusterRp = 'Microsoft.ContainerService' | 'Microsoft.Kubernetes';

/**
 * Defines values for ClusterResourceName.
 * Possible values include: 'managedClusters', 'connectedClusters'
 * @readonly
 * @enum {string}
 */
export type ClusterResourceName = 'managedClusters' | 'connectedClusters';

/**
 * Defines values for ClusterRp1.
 * Possible values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
 * @readonly
 * @enum {string}
 */
export type ClusterRp1 = 'Microsoft.ContainerService' | 'Microsoft.Kubernetes';

/**
 * Defines values for ClusterResourceName1.
 * Possible values include: 'managedClusters', 'connectedClusters'
 * @readonly
 * @enum {string}
 */
export type ClusterResourceName1 = 'managedClusters' | 'connectedClusters';

/**
 * Defines values for ClusterRp2.
 * Possible values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
 * @readonly
 * @enum {string}
 */
export type ClusterRp2 = 'Microsoft.ContainerService' | 'Microsoft.Kubernetes';

/**
 * Defines values for ClusterResourceName2.
 * Possible values include: 'managedClusters', 'connectedClusters'
 * @readonly
 * @enum {string}
 */
export type ClusterResourceName2 = 'managedClusters' | 'connectedClusters';

/**
 * Defines values for ClusterRp3.
 * Possible values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
 * @readonly
 * @enum {string}
 */
export type ClusterRp3 = 'Microsoft.ContainerService' | 'Microsoft.Kubernetes';

/**
 * Defines values for ClusterResourceName3.
 * Possible values include: 'managedClusters', 'connectedClusters'
 * @readonly
 * @enum {string}
 */
export type ClusterResourceName3 = 'managedClusters' | 'connectedClusters';

/**
 * Defines values for ClusterRp4.
 * Possible values include: 'Microsoft.ContainerService', 'Microsoft.Kubernetes'
 * @readonly
 * @enum {string}
 */
export type ClusterRp4 = 'Microsoft.ContainerService' | 'Microsoft.Kubernetes';

/**
 * Defines values for ClusterResourceName4.
 * Possible values include: 'managedClusters', 'connectedClusters'
 * @readonly
 * @enum {string}
 */
export type ClusterResourceName4 = 'managedClusters' | 'connectedClusters';

/**
 * Contains response data for the create operation.
 */
export type ExtensionsCreateResponse = ExtensionInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionInstance;
    };
};

/**
 * Contains response data for the get operation.
 */
export type ExtensionsGetResponse = ExtensionInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionInstance;
    };
};

/**
 * Contains response data for the update operation.
 */
export type ExtensionsUpdateResponse = ExtensionInstance & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionInstance;
    };
};

/**
 * Contains response data for the list operation.
 */
export type ExtensionsListResponse = ExtensionInstancesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionInstancesList;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type ExtensionsListNextResponse = ExtensionInstancesList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ExtensionInstancesList;
    };
};
