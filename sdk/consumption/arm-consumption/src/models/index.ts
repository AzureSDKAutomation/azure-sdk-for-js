/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The properties of the meter detail.
 */
export interface MeterDetails {
  /**
   * The name of the meter, within the given meter category
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterName?: string;
  /**
   * The category of the meter, for example, 'Cloud services', 'Networking', etc..
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterCategory?: string;
  /**
   * The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterSubCategory?: string;
  /**
   * The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly unit?: string;
  /**
   * The location in which the Azure service is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly meterLocation?: string;
  /**
   * The total included quantity associated with the offer.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly totalIncludedQuantity?: number;
  /**
   * The pretax listing price.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly pretaxStandardRate?: number;
  /**
   * The name of the service.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceName?: string;
  /**
   * The service tier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly serviceTier?: string;
}

/**
 * The Resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource tags.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tags?: { [propertyName: string]: string };
}

/**
 * An usage detail resource.
 */
export interface UsageDetail {
  /**
   * Polymorphic Discriminator
   */
  kind: "UsageDetail";
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * Resource tags.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tags?: { [propertyName: string]: string };
}

/**
 * The Sku property
 */
export interface SkuProperty {
  /**
   * The name of sku property.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The value of sku property.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
}

/**
 * The tag resource.
 */
export interface Tag {
  /**
   * Tag key.
   */
  key?: string;
}

/**
 * The Resource model definition.
 */
export interface ProxyResource extends BaseResource {
  /**
   * Resource Id.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * Resource name.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Resource type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * eTag of the resource. To handle concurrent update scenario, this field will be used to
   * determine whether the user is updating the latest version or not.
   */
  eTag?: string;
}

/**
 * A resource listing all tags.
 */
export interface TagsResult extends ProxyResource {
  /**
   * A list of Tag.
   */
  tags?: Tag[];
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
  /**
   * The link (url) to the previous page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly previousLink?: string;
}

/**
 * The details of the error.
 */
export interface ErrorDetails {
  /**
   * Error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
}

/**
 * Error response indicates that the service is not able to process the incoming request. The
 * reason is provided in the error message.
 *
 * Some Error responses:
 *
 * * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the
 * "x-ms-ratelimit-microsoft.consumption-retry-after" header.
 *
 * * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time
 * specified in the "Retry-After" header.
 */
export interface ErrorResponse {
  /**
   * The details of the error.
   */
  error?: ErrorDetails;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Consumption.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed: UsageDetail, etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly operation?: string;
}

/**
 * A Consumption REST API operation.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * The Resource model definition.
 */
export interface ResourceAttributes {
  /**
   * Resource location
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * Resource sku
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly sku?: string;
}

/**
 * Optional Parameters.
 */
export interface UsageDetailsListOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the properties/additionalInfo or properties/meterDetails within a list
   * of usage details. By default, these fields are not included when listing usage details.
   */
  expand?: string;
  /**
   * May be used to filter usageDetails by properties/resourceGroup, properties/resourceName,
   * properties/resourceId, properties/chargeType, properties/reservationId,
   * properties/publisherType or tags. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'.
   * It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string
   * where key and value is separated by a colon (:). PublisherType Filter accepts two values azure
   * and marketplace and it is currently supported for Web Direct Offer Type
   */
  filter?: string;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous
   * response contains a nextLink element, the value of the nextLink element will include a
   * skiptoken parameter that specifies a starting point to use for subsequent calls.
   */
  skiptoken?: string;
  /**
   * May be used to limit the number of results to the most recent N usageDetails.
   */
  top?: number;
  /**
   * Allows to select different type of cost/usage records. Possible values include:
   * 'ActualCostMetricType', 'AmortizedCostMetricType', 'UsageMetricType'
   */
  metric?: Metrictype;
}

/**
 * Optional Parameters.
 */
export interface UsageDetailsListNextOptionalParams extends msRest.RequestOptionsBase {
  /**
   * May be used to expand the properties/additionalInfo or properties/meterDetails within a list
   * of usage details. By default, these fields are not included when listing usage details.
   */
  expand?: string;
  /**
   * May be used to filter usageDetails by properties/resourceGroup, properties/resourceName,
   * properties/resourceId, properties/chargeType, properties/reservationId,
   * properties/publisherType or tags. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'.
   * It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string
   * where key and value is separated by a colon (:). PublisherType Filter accepts two values azure
   * and marketplace and it is currently supported for Web Direct Offer Type
   */
  filter?: string;
  /**
   * Skiptoken is only used if a previous operation returned a partial result. If a previous
   * response contains a nextLink element, the value of the nextLink element will include a
   * skiptoken parameter that specifies a starting point to use for subsequent calls.
   */
  skiptoken?: string;
  /**
   * May be used to limit the number of results to the most recent N usageDetails.
   */
  top?: number;
  /**
   * Allows to select different type of cost/usage records. Possible values include:
   * 'ActualCostMetricType', 'AmortizedCostMetricType', 'UsageMetricType'
   */
  metric?: Metrictype;
}

/**
 * An interface representing ConsumptionManagementClientOptions.
 */
export interface ConsumptionManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * Result of listing usage details. It contains a list of available usage details in reverse
 * chronological order by billing period.
 * @extends Array<UsageDetail>
 */
export interface UsageDetailsListResult extends Array<UsageDetail> {
  /**
   * The link (url) to the next page of results.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * @interface
 * Result of listing consumption operations. It contains a list of operations and a URL link to get
 * the next set of results.
 * @extends Array<Operation>
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextLink?: string;
}

/**
 * Defines values for Metrictype.
 * Possible values include: 'ActualCostMetricType', 'AmortizedCostMetricType', 'UsageMetricType'
 * @readonly
 * @enum {string}
 */
export type Metrictype = 'actualcost' | 'amortizedcost' | 'usage';

/**
 * Defines values for Scope2.
 * Possible values include: 'Single', 'Shared'
 * @readonly
 * @enum {string}
 */
export type Scope2 = 'Single' | 'Shared';

/**
 * Contains response data for the list operation.
 */
export type UsageDetailsListResponse = UsageDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageDetailsListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type UsageDetailsListNextResponse = UsageDetailsListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsageDetailsListResult;
    };
};

/**
 * Contains response data for the get operation.
 */
export type TagsGetResponse = TagsResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: TagsResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = OperationListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OperationListResult;
    };
};
