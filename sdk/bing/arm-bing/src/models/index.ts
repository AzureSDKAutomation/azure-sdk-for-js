/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError, AzureServiceClientOptions } from "@azure/ms-rest-azure-js";
import * as msRest from "@azure/ms-rest-js";

export { BaseResource, CloudError };

/**
 * The SKU of the Bing account.
 */
export interface Sku {
  /**
   * Gets or sets the SKU name. Required for account creation, optional for update.
   */
  name: string;
  /**
   * Gets the SKU tier. This is based on the SKU name. Possible values include: 'Free', 'Standard',
   * 'Premium'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: SkuTier;
}

/**
 * Properties of Bing account.
 */
export interface BingAccountProperties {
  /**
   * Gets the status of the Bing account at the time the operation was called. Possible values
   * include: 'Creating', 'Moving', 'Deleting', 'Succeeded', 'Failed'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly provisioningState?: ProvisioningState;
  /**
   * Endpoint of the created account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly endpoint?: string;
  /**
   * An internal identifier.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly internalId?: string;
  /**
   * (Bing Search Only) A flag indicating whether Bing Statistics is enabled.
   */
  statisticsEnabled?: boolean;
}

/**
 * Bing Account is an Azure resource representing the provisioned account, its type, location and
 * SKU.
 */
export interface BingAccount extends BaseResource {
  /**
   * Entity Tag
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly etag?: string;
  /**
   * The id of the created account
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id?: string;
  /**
   * The Kind of the resource.
   */
  kind?: string;
  /**
   * The location of the resource
   */
  location?: string;
  /**
   * The name of the created account
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Properties of Bing account.
   */
  properties?: BingAccountProperties;
  /**
   * The SKU of Bing account.
   */
  sku?: Sku;
  /**
   * Gets or sets a list of key-value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of 15 tags can be
   * provided for a resource. Each tag must have a key no greater than 128 characters and value no
   * greater than 256 characters.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Resource type
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
}

/**
 * The access keys for the Bing account.
 */
export interface BingAccountKeys {
  /**
   * Gets the value of key 1.
   */
  key1?: string;
  /**
   * Gets the value of key 2.
   */
  key2?: string;
}

/**
 * Regenerate key parameters.
 */
export interface RegenerateKeyParameters {
  /**
   * key name to generate (Key1|Key2). Possible values include: 'Key1', 'Key2'
   */
  keyName: KeyName;
}

/**
 * Bing resource type and SKU.
 */
export interface BingResourceAndSku {
  /**
   * Resource Namespace and Type
   */
  resourceType?: string;
  /**
   * The SKU of Bing account.
   */
  sku?: Sku;
}

/**
 * The list of Bing accounts operation response.
 */
export interface BingAccountEnumerateSkusResult {
  /**
   * Gets the list of Bing accounts and their properties.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: BingResourceAndSku[];
}

/**
 * A metric name.
 */
export interface MetricName {
  /**
   * The name of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: string;
  /**
   * The friendly name of the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly localizedValue?: string;
}

/**
 * The usage data for a usage request.
 */
export interface Usage {
  /**
   * The unit of the metric. Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent',
   * 'CountPerSecond', 'BytesPerSecond', 'Milliseconds'
   */
  unit?: UnitType;
  /**
   * The name information for the metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: MetricName;
  /**
   * The quota period used to summarize the usage values.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly quotaPeriod?: string;
  /**
   * Maximum value for this metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly limit?: number;
  /**
   * Current value for this metric.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly currentValue?: number;
  /**
   * Next reset time for current quota.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextResetTime?: string;
  /**
   * Bing account quota usage status. Possible values include: 'Included', 'Blocked', 'InOverage',
   * 'Unknown'
   */
  status?: QuotaUsageStatus;
}

/**
 * The response to a list usage request.
 */
export interface UsagesResult {
  /**
   * The list of usages for bing account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly value?: Usage[];
}

/**
 * Operation display payload
 */
export interface OperationDisplay {
  /**
   * Resource provider of the operation
   */
  provider?: string;
  /**
   * Resource of the operation
   */
  resource?: string;
  /**
   * Localized friendly name for the operation
   */
  operation?: string;
  /**
   * Localized friendly description for the operation
   */
  description?: string;
}

/**
 * Specifications of the Log for Azure Monitoring
 */
export interface LogSpecification {
  /**
   * Name of the log
   */
  name?: string;
  /**
   * Localized friendly display name of the log
   */
  displayName?: string;
  /**
   * Blob duration of the log
   */
  blobDuration?: string;
}

/**
 * Availability of the metric.
 */
export interface Availability {
  /**
   * The time grain of the availability.
   */
  timeGrain?: string;
  /**
   * The retention of the availability.
   */
  retention?: string;
  /**
   * Duration of the availability blob.
   */
  blobDuration?: string;
}

/**
 * Specifications of the Dimension of metrics
 */
export interface MetricDimension {
  /**
   * Name of the dimension
   */
  name?: string;
  /**
   * Localized friendly display name of the dimension
   */
  displayName?: string;
}

/**
 * Specifications of the Metrics for Azure Monitoring
 */
export interface MetricSpecification {
  /**
   * Name of the metric
   */
  name?: string;
  /**
   * Localized friendly display name of the metric
   */
  displayName?: string;
  /**
   * Localized friendly description of the metric
   */
  displayDescription?: string;
  /**
   * Unit that makes sense for the metric
   */
  unit?: string;
  /**
   * Name of the metric category that the metric belongs to. A metric can only belong to a single
   * category.
   */
  category?: string;
  /**
   * Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.
   */
  aggregationType?: string;
  /**
   * List of availability.
   */
  availabilities?: Availability[];
  /**
   * Supported aggregation types
   */
  supportedAggregationTypes?: string[];
  /**
   * Supported time grain types
   */
  supportedTimeGrainTypes?: string[];
  /**
   * Optional. If set to true, then zero will be returned for time duration where no metric is
   * emitted/published.
   */
  fillGapWithZero?: boolean;
  /**
   * Dimensions of the metric
   */
  dimensions?: MetricDimension[];
}

/**
 * Service specification payload
 */
export interface ServiceSpecification {
  /**
   * Specifications of the Log for Azure Monitoring
   */
  logSpecifications?: LogSpecification[];
  /**
   * Specifications of the Metrics for Azure Monitoring
   */
  metricSpecifications?: MetricSpecification[];
}

/**
 * Extra Operation properties
 */
export interface OperationProperties {
  /**
   * Service specifications of the operation
   */
  serviceSpecification?: ServiceSpecification;
}

/**
 * Operation detail payload
 */
export interface OperationDetail {
  /**
   * Name of the operation
   */
  name?: string;
  /**
   * Indicates whether the operation is a data action
   */
  isDataAction?: boolean;
  /**
   * Display of the operation
   */
  display?: OperationDisplay;
  /**
   * Origin of the operation
   */
  origin?: string;
  /**
   * Properties of the operation
   */
  properties?: OperationProperties;
}

/**
 * The SKUs to check for availability in the specified subscription and location
 */
export interface CheckSkuAvailabilityParameter {
  /**
   * The SKU of the resource.
   */
  skus: string[];
  /**
   * The Kind of the resource.
   */
  kind: string;
  /**
   * The Type of the resource.
   */
  type: string;
}

/**
 * Check SKU availability result.
 */
export interface CheckSkuAvailabilityResult {
  /**
   * The Kind of the resource.
   */
  kind?: string;
  /**
   * The Type of the resource.
   */
  type?: string;
  /**
   * The SKU of Bing account.
   */
  skuName?: string;
  /**
   * Indicates the given SKU is available or not.
   */
  skuAvailable?: boolean;
  /**
   * Reason why the SKU is not available.
   */
  reason?: string;
  /**
   * Additional error message.
   */
  message?: string;
}

/**
 * Check SKU availability result list.
 */
export interface CheckSkuAvailabilityResultList {
  /**
   * Check SKU availability result list.
   */
  value?: CheckSkuAvailabilityResult[];
}

/**
 * SkuCapability indicates the capability of a certain feature.
 */
export interface SkuCapability {
  /**
   * The name of the SkuCapability.
   */
  name?: string;
  /**
   * The value of the SkuCapability.
   */
  value?: string;
}

/**
 * Information about the restriction where the SKU cannot be used.
 */
export interface ResourceSkuRestrictionInfo {
  /**
   * Locations where the SKU is restricted
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locations?: string[];
  /**
   * List of availability zones where the SKU is restricted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zones?: string[];
}

/**
 * Describes restrictions of a SKU.
 */
export interface ResourceSkuRestrictions {
  /**
   * The type of restrictions. Possible values include: 'Location', 'Zone'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: ResourceSkuRestrictionsType;
  /**
   * The value of restrictions. If the restriction type is set to location. This would be different
   * locations where the SKU is restricted.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly values?: string[];
  /**
   * Information about the restriction where the SKU cannot be used.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restrictionInfo?: ResourceSkuRestrictionInfo;
  /**
   * The reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription'
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly reasonCode?: ResourceSkuRestrictionsReasonCode;
}

/**
 * Describes The zonal capabilities of a SKU.
 */
export interface ResourceSkuZoneDetails {
  /**
   * The set of zones that the SKU is available in with the specified capabilities.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string[];
  /**
   * A list of capabilities that are available for the SKU in the specified list of zones.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly capabilities?: SkuCapability[];
}

/**
 * An interface representing ResourceSkuLocationInfo.
 */
export interface ResourceSkuLocationInfo {
  /**
   * Location of the SKU
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly location?: string;
  /**
   * List of availability zones where the SKU is supported.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zones?: string[];
  /**
   * Details of capabilities available to a SKU in specific zones.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly zoneDetails?: ResourceSkuZoneDetails[];
}

/**
 * Describes an available Bing SKU.
 */
export interface ResourceSku {
  /**
   * The type of resource the SKU applies to.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly resourceType?: string;
  /**
   * The name of SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name?: string;
  /**
   * Specifies the tier of Bing account.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly tier?: string;
  /**
   * The Kind of resources that are supported in this SKU.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly kind?: string;
  /**
   * The set of locations that the SKU is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locations?: string[];
  /**
   * A list of locations and availability zones in those locations where the SKU is available.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly locationInfo?: ResourceSkuLocationInfo[];
  /**
   * The restrictions because of which SKU cannot be used. This is empty if there are no
   * restrictions.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly restrictions?: ResourceSkuRestrictions[];
}

/**
 * The resource management error additional info.
 */
export interface ErrorAdditionalInfo {
  /**
   * The additional info type.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly type?: string;
  /**
   * The additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly info?: any;
}

/**
 * The resource management error response.
 */
export interface ErrorResponse {
  /**
   * The error code.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly code?: string;
  /**
   * The error message.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly message?: string;
  /**
   * The error target.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly target?: string;
  /**
   * The error details.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly details?: ErrorResponse[];
  /**
   * The error additional info.
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly additionalInfo?: ErrorAdditionalInfo[];
}

/**
 * Optional Parameters.
 */
export interface AccountsListUsagesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * An OData filter expression that describes a subset of usages to return. The supported
   * parameter is name.value (name of the metric, can have an or of multiple names).
   */
  filter?: string;
}

/**
 * An interface representing BingManagementClientOptions.
 */
export interface BingManagementClientOptions extends AzureServiceClientOptions {
  baseUri?: string;
}

/**
 * @interface
 * The list of Bing accounts operation response.
 * @extends Array<BingAccount>
 */
export interface BingAccountListResult extends Array<BingAccount> {
  /**
   * The link used to get the next page of accounts.
   */
  nextLink?: string;
}

/**
 * @interface
 * The list SKUs operation response.
 * @extends Array<ResourceSku>
 */
export interface ResourceSkusResult extends Array<ResourceSku> {
  /**
   * The URI to fetch the next page of SKUs.
   */
  nextLink?: string;
}

/**
 * @interface
 * Available operations of the service
 * @extends Array<OperationDetail>
 */
export interface AvailableOperations extends Array<OperationDetail> {
  /**
   * URL client should use to fetch the next page (per server side paging).
   * It's null for now, added for future use.
   */
  nextLink?: string;
}

/**
 * Defines values for SkuTier.
 * Possible values include: 'Free', 'Standard', 'Premium'
 * @readonly
 * @enum {string}
 */
export type SkuTier = 'Free' | 'Standard' | 'Premium';

/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Creating', 'Moving', 'Deleting', 'Succeeded', 'Failed'
 * @readonly
 * @enum {string}
 */
export type ProvisioningState = 'Creating' | 'Moving' | 'Deleting' | 'Succeeded' | 'Failed';

/**
 * Defines values for KeyName.
 * Possible values include: 'Key1', 'Key2'
 * @readonly
 * @enum {string}
 */
export type KeyName = 'Key1' | 'Key2';

/**
 * Defines values for UnitType.
 * Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond',
 * 'BytesPerSecond', 'Milliseconds'
 * @readonly
 * @enum {string}
 */
export type UnitType = 'Count' | 'Bytes' | 'Seconds' | 'Percent' | 'CountPerSecond' | 'BytesPerSecond' | 'Milliseconds';

/**
 * Defines values for QuotaUsageStatus.
 * Possible values include: 'Included', 'Blocked', 'InOverage', 'Unknown'
 * @readonly
 * @enum {string}
 */
export type QuotaUsageStatus = 'Included' | 'Blocked' | 'InOverage' | 'Unknown';

/**
 * Defines values for ResourceSkuRestrictionsType.
 * Possible values include: 'Location', 'Zone'
 * @readonly
 * @enum {string}
 */
export type ResourceSkuRestrictionsType = 'Location' | 'Zone';

/**
 * Defines values for ResourceSkuRestrictionsReasonCode.
 * Possible values include: 'QuotaId', 'NotAvailableForSubscription'
 * @readonly
 * @enum {string}
 */
export type ResourceSkuRestrictionsReasonCode = 'QuotaId' | 'NotAvailableForSubscription';

/**
 * Contains response data for the create operation.
 */
export type AccountsCreateResponse = BingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccount;
    };
};

/**
 * Contains response data for the update operation.
 */
export type AccountsUpdateResponse = BingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccount;
    };
};

/**
 * Contains response data for the get operation.
 */
export type AccountsGetResponse = BingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccount;
    };
};

/**
 * Contains response data for the listByResourceGroup operation.
 */
export type AccountsListByResourceGroupResponse = BingAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccountListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type AccountsListResponse = BingAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccountListResult;
    };
};

/**
 * Contains response data for the listKeys operation.
 */
export type AccountsListKeysResponse = BingAccountKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccountKeys;
    };
};

/**
 * Contains response data for the regenerateKey operation.
 */
export type AccountsRegenerateKeyResponse = BingAccountKeys & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccountKeys;
    };
};

/**
 * Contains response data for the listSkus operation.
 */
export type AccountsListSkusResponse = BingAccountEnumerateSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccountEnumerateSkusResult;
    };
};

/**
 * Contains response data for the listUsages operation.
 */
export type AccountsListUsagesResponse = UsagesResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UsagesResult;
    };
};

/**
 * Contains response data for the beginCreate operation.
 */
export type AccountsBeginCreateResponse = BingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccount;
    };
};

/**
 * Contains response data for the beginUpdate operation.
 */
export type AccountsBeginUpdateResponse = BingAccount & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccount;
    };
};

/**
 * Contains response data for the listByResourceGroupNext operation.
 */
export type AccountsListByResourceGroupNextResponse = BingAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccountListResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type AccountsListNextResponse = BingAccountListResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: BingAccountListResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type SkusListResponse = ResourceSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceSkusResult;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type SkusListNextResponse = ResourceSkusResult & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: ResourceSkusResult;
    };
};

/**
 * Contains response data for the list operation.
 */
export type OperationsListResponse = AvailableOperations & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableOperations;
    };
};

/**
 * Contains response data for the listNext operation.
 */
export type OperationsListNextResponse = AvailableOperations & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AvailableOperations;
    };
};

/**
 * Contains response data for the checkSkuAvailability operation.
 */
export type CheckSkuAvailabilityResponse = CheckSkuAvailabilityResultList & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CheckSkuAvailabilityResultList;
    };
};
