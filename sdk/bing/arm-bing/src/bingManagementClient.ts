/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as Parameters from "./models/parameters";
import * as operations from "./operations";
import { BingManagementClientContext } from "./bingManagementClientContext";


class BingManagementClient extends BingManagementClientContext {
  // Operation groups
  accounts: operations.Accounts;
  skus: operations.Skus;
  operations: operations.Operations;

  /**
   * Initializes a new instance of the BingManagementClient class.
   * @param credentials Credentials needed for the client to connect to Azure.
   * @param subscriptionId The ID of the target subscription.
   * @param [options] The parameter options
   */
  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.BingManagementClientOptions) {
    super(credentials, subscriptionId, options);
    this.accounts = new operations.Accounts(this);
    this.skus = new operations.Skus(this);
    this.operations = new operations.Operations(this);
  }

  /**
   * Check whether specific SKUs are available for the location and
   * @param location Resource location.
   * @param skus The SKU of the resource.
   * @param kind The Kind of the resource.
   * @param type The Type of the resource.
   * @param [options] The optional parameters
   * @returns Promise<Models.CheckSkuAvailabilityResponse>
   */
  checkSkuAvailability(location: string, skus: string[], kind: string, type: string, options?: msRest.RequestOptionsBase): Promise<Models.CheckSkuAvailabilityResponse>;
  /**
   * @param location Resource location.
   * @param skus The SKU of the resource.
   * @param kind The Kind of the resource.
   * @param type The Type of the resource.
   * @param callback The callback
   */
  checkSkuAvailability(location: string, skus: string[], kind: string, type: string, callback: msRest.ServiceCallback<Models.CheckSkuAvailabilityResultList>): void;
  /**
   * @param location Resource location.
   * @param skus The SKU of the resource.
   * @param kind The Kind of the resource.
   * @param type The Type of the resource.
   * @param options The optional parameters
   * @param callback The callback
   */
  checkSkuAvailability(location: string, skus: string[], kind: string, type: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CheckSkuAvailabilityResultList>): void;
  checkSkuAvailability(location: string, skus: string[], kind: string, type: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CheckSkuAvailabilityResultList>, callback?: msRest.ServiceCallback<Models.CheckSkuAvailabilityResultList>): Promise<Models.CheckSkuAvailabilityResponse> {
    return this.sendOperationRequest(
      {
        location,
        skus,
        kind,
        type,
        options
      },
      checkSkuAvailabilityOperationSpec,
      callback) as Promise<Models.CheckSkuAvailabilityResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const checkSkuAvailabilityOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.Bing/locations/{location}/checkSkuAvailability",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.location
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: {
      skus: "skus",
      kind: "kind",
      type: "type"
    },
    mapper: {
      ...Mappers.CheckSkuAvailabilityParameter,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CheckSkuAvailabilityResultList
    },
    default: {
      bodyMapper: Mappers.ErrorModel
    }
  },
  serializer
};

export {
  BingManagementClient,
  BingManagementClientContext,
  Models as BingManagementModels,
  Mappers as BingManagementMappers
};
export * from "./operations";
