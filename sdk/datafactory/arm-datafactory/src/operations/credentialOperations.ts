/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/credentialOperationsMappers";
import * as Parameters from "../models/parameters";
import { DataFactoryManagementClientContext } from "../dataFactoryManagementClientContext";

/** Class representing a CredentialOperations. */
export class CredentialOperations {
  private readonly client: DataFactoryManagementClientContext;

  /**
   * Create a CredentialOperations.
   * @param {DataFactoryManagementClientContext} client Reference to the service client.
   */
  constructor(client: DataFactoryManagementClientContext) {
    this.client = client;
  }

  /**
   * List credentials.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param [options] The optional parameters
   * @returns Promise<Models.CredentialOperationsListByFactoryResponse>
   */
  listByFactory(resourceGroupName: string, factoryName: string, options?: msRest.RequestOptionsBase): Promise<Models.CredentialOperationsListByFactoryResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param callback The callback
   */
  listByFactory(resourceGroupName: string, factoryName: string, callback: msRest.ServiceCallback<Models.CredentialListResponse>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByFactory(resourceGroupName: string, factoryName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CredentialListResponse>): void;
  listByFactory(resourceGroupName: string, factoryName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CredentialListResponse>, callback?: msRest.ServiceCallback<Models.CredentialListResponse>): Promise<Models.CredentialOperationsListByFactoryResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        options
      },
      listByFactoryOperationSpec,
      callback) as Promise<Models.CredentialOperationsListByFactoryResponse>;
  }

  /**
   * Creates or updates a credential.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param credential Credential resource definition.
   * @param [options] The optional parameters
   * @returns Promise<Models.CredentialOperationsCreateOrUpdateResponse>
   */
  createOrUpdate(resourceGroupName: string, factoryName: string, credentialName: string, credential: Models.CredentialResource, options?: Models.CredentialOperationsCreateOrUpdateOptionalParams): Promise<Models.CredentialOperationsCreateOrUpdateResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param credential Credential resource definition.
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, factoryName: string, credentialName: string, credential: Models.CredentialResource, callback: msRest.ServiceCallback<Models.CredentialResource>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param credential Credential resource definition.
   * @param options The optional parameters
   * @param callback The callback
   */
  createOrUpdate(resourceGroupName: string, factoryName: string, credentialName: string, credential: Models.CredentialResource, options: Models.CredentialOperationsCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.CredentialResource>): void;
  createOrUpdate(resourceGroupName: string, factoryName: string, credentialName: string, credential: Models.CredentialResource, options?: Models.CredentialOperationsCreateOrUpdateOptionalParams | msRest.ServiceCallback<Models.CredentialResource>, callback?: msRest.ServiceCallback<Models.CredentialResource>): Promise<Models.CredentialOperationsCreateOrUpdateResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        credentialName,
        credential,
        options
      },
      createOrUpdateOperationSpec,
      callback) as Promise<Models.CredentialOperationsCreateOrUpdateResponse>;
  }

  /**
   * Gets a credential.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param [options] The optional parameters
   * @returns Promise<Models.CredentialOperationsGetResponse>
   */
  get(resourceGroupName: string, factoryName: string, credentialName: string, options?: Models.CredentialOperationsGetOptionalParams): Promise<Models.CredentialOperationsGetResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param callback The callback
   */
  get(resourceGroupName: string, factoryName: string, credentialName: string, callback: msRest.ServiceCallback<Models.CredentialResource>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, factoryName: string, credentialName: string, options: Models.CredentialOperationsGetOptionalParams, callback: msRest.ServiceCallback<Models.CredentialResource>): void;
  get(resourceGroupName: string, factoryName: string, credentialName: string, options?: Models.CredentialOperationsGetOptionalParams | msRest.ServiceCallback<Models.CredentialResource>, callback?: msRest.ServiceCallback<Models.CredentialResource>): Promise<Models.CredentialOperationsGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        credentialName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.CredentialOperationsGetResponse>;
  }

  /**
   * Deletes a credential.
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, factoryName: string, credentialName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, factoryName: string, credentialName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The resource group name.
   * @param factoryName The factory name.
   * @param credentialName Credential name
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, factoryName: string, credentialName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, factoryName: string, credentialName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        factoryName,
        credentialName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * List credentials.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.CredentialOperationsListByFactoryNextResponse>
   */
  listByFactoryNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.CredentialOperationsListByFactoryNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  listByFactoryNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.CredentialListResponse>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  listByFactoryNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CredentialListResponse>): void;
  listByFactoryNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CredentialListResponse>, callback?: msRest.ServiceCallback<Models.CredentialListResponse>): Promise<Models.CredentialOperationsListByFactoryNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      listByFactoryNextOperationSpec,
      callback) as Promise<Models.CredentialOperationsListByFactoryNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const listByFactoryOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CredentialListResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const createOrUpdateOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials/{credentialName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.credentialName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.ifMatch,
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "credential",
    mapper: {
      ...Mappers.CredentialResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.CredentialResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials/{credentialName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.credentialName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.ifNoneMatch,
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CredentialResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials/{credentialName}",
  urlParameters: [
    Parameters.subscriptionId,
    Parameters.resourceGroupName,
    Parameters.factoryName,
    Parameters.credentialName
  ],
  queryParameters: [
    Parameters.apiVersion
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const listByFactoryNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.CredentialListResponse
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
