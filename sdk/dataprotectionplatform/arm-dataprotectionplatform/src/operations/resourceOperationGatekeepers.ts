/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import * as Mappers from "../models/resourceOperationGatekeepersMappers";
import * as Parameters from "../models/parameters";
import { DataProtectionClientContext } from "../dataProtectionClientContext";

/** Class representing a ResourceOperationGatekeepers. */
export class ResourceOperationGatekeepers {
  private readonly client: DataProtectionClientContext;

  /**
   * Create a ResourceOperationGatekeepers.
   * @param {DataProtectionClientContext} client Reference to the service client.
   */
  constructor(client: DataProtectionClientContext) {
    this.client = client;
  }

  /**
   * @summary Returns ResourceOperationGateKeepers collection belonging to a subscription.
   * @param [options] The optional parameters
   * @returns Promise<Models.ResourceOperationGatekeepersGetResourcesInSubscriptionResponse>
   */
  getResourcesInSubscription(options?: msRest.RequestOptionsBase): Promise<Models.ResourceOperationGatekeepersGetResourcesInSubscriptionResponse>;
  /**
   * @param callback The callback
   */
  getResourcesInSubscription(callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  getResourcesInSubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): void;
  getResourcesInSubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>, callback?: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): Promise<Models.ResourceOperationGatekeepersGetResourcesInSubscriptionResponse> {
    return this.client.sendOperationRequest(
      {
        options
      },
      getResourcesInSubscriptionOperationSpec,
      callback) as Promise<Models.ResourceOperationGatekeepersGetResourcesInSubscriptionResponse>;
  }

  /**
   * @summary Returns ResourceOperationGateKeepers collection belonging to a ResourceGroup
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param [options] The optional parameters
   * @returns Promise<Models.ResourceOperationGatekeepersGetResourcesInResourceGroupResponse>
   */
  getResourcesInResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceOperationGatekeepersGetResourcesInResourceGroupResponse>;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param callback The callback
   */
  getResourcesInResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): void;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param options The optional parameters
   * @param callback The callback
   */
  getResourcesInResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): void;
  getResourcesInResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>, callback?: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): Promise<Models.ResourceOperationGatekeepersGetResourcesInResourceGroupResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        options
      },
      getResourcesInResourceGroupOperationSpec,
      callback) as Promise<Models.ResourceOperationGatekeepersGetResourcesInResourceGroupResponse>;
  }

  /**
   * @summary Returns a ResourceOperationGateKeeper belonging to a resource group.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of the ResourceOperationGateKeeper
   * @param [options] The optional parameters
   * @returns Promise<Models.ResourceOperationGatekeepersGetResponse>
   */
  get(resourceGroupName: string, resourceOperationGateKeepersName: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceOperationGatekeepersGetResponse>;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of the ResourceOperationGateKeeper
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceOperationGateKeepersName: string, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>): void;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of the ResourceOperationGateKeeper
   * @param options The optional parameters
   * @param callback The callback
   */
  get(resourceGroupName: string, resourceOperationGateKeepersName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>): void;
  get(resourceGroupName: string, resourceOperationGateKeepersName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>, callback?: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>): Promise<Models.ResourceOperationGatekeepersGetResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceOperationGateKeepersName,
        options
      },
      getOperationSpec,
      callback) as Promise<Models.ResourceOperationGatekeepersGetResponse>;
  }

  /**
   * @summary Creates or updates a ResourceOperationGatekeeper resource belonging to a resource
   * group.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of ResourceOperationGatekeeper
   * @param parameters Request body for operation
   * @param [options] The optional parameters
   * @returns Promise<Models.ResourceOperationGatekeepersPutResponse>
   */
  put(resourceGroupName: string, resourceOperationGateKeepersName: string, parameters: Models.ResourceOperationGateKeeperResource, options?: msRest.RequestOptionsBase): Promise<Models.ResourceOperationGatekeepersPutResponse>;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of ResourceOperationGatekeeper
   * @param parameters Request body for operation
   * @param callback The callback
   */
  put(resourceGroupName: string, resourceOperationGateKeepersName: string, parameters: Models.ResourceOperationGateKeeperResource, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>): void;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of ResourceOperationGatekeeper
   * @param parameters Request body for operation
   * @param options The optional parameters
   * @param callback The callback
   */
  put(resourceGroupName: string, resourceOperationGateKeepersName: string, parameters: Models.ResourceOperationGateKeeperResource, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>): void;
  put(resourceGroupName: string, resourceOperationGateKeepersName: string, parameters: Models.ResourceOperationGateKeeperResource, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>, callback?: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>): Promise<Models.ResourceOperationGatekeepersPutResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceOperationGateKeepersName,
        parameters,
        options
      },
      putOperationSpec,
      callback) as Promise<Models.ResourceOperationGatekeepersPutResponse>;
  }

  /**
   * @summary Deletes a ResourceOperationGateKeeper resource from the resource group.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of ResourceOperationGatekeeper
   * @param [options] The optional parameters
   * @returns Promise<msRest.RestResponse>
   */
  deleteMethod(resourceGroupName: string, resourceOperationGateKeepersName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of ResourceOperationGatekeeper
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, resourceOperationGateKeepersName: string, callback: msRest.ServiceCallback<void>): void;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of ResourceOperationGatekeeper
   * @param options The optional parameters
   * @param callback The callback
   */
  deleteMethod(resourceGroupName: string, resourceOperationGateKeepersName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
  deleteMethod(resourceGroupName: string, resourceOperationGateKeepersName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceOperationGateKeepersName,
        options
      },
      deleteMethodOperationSpec,
      callback);
  }

  /**
   * @summary Updates a ResourceOperationGatekeeper resource belonging to a resource group. For
   * example, updating tags for a resource.
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of ResourceOperationGatekeeper
   * @param parameters Request body for operation
   * @param [options] The optional parameters
   * @returns Promise<Models.ResourceOperationGatekeepersPatchResponse>
   */
  patch(resourceGroupName: string, resourceOperationGateKeepersName: string, parameters: Models.PatchResourceRequestInput, options?: msRest.RequestOptionsBase): Promise<Models.ResourceOperationGatekeepersPatchResponse>;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of ResourceOperationGatekeeper
   * @param parameters Request body for operation
   * @param callback The callback
   */
  patch(resourceGroupName: string, resourceOperationGateKeepersName: string, parameters: Models.PatchResourceRequestInput, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>): void;
  /**
   * @param resourceGroupName The name of the resource group where the backup vault is present.
   * @param resourceOperationGateKeepersName The name of ResourceOperationGatekeeper
   * @param parameters Request body for operation
   * @param options The optional parameters
   * @param callback The callback
   */
  patch(resourceGroupName: string, resourceOperationGateKeepersName: string, parameters: Models.PatchResourceRequestInput, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>): void;
  patch(resourceGroupName: string, resourceOperationGateKeepersName: string, parameters: Models.PatchResourceRequestInput, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>, callback?: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResource>): Promise<Models.ResourceOperationGatekeepersPatchResponse> {
    return this.client.sendOperationRequest(
      {
        resourceGroupName,
        resourceOperationGateKeepersName,
        parameters,
        options
      },
      patchOperationSpec,
      callback) as Promise<Models.ResourceOperationGatekeepersPatchResponse>;
  }

  /**
   * @summary Returns ResourceOperationGateKeepers collection belonging to a subscription.
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ResourceOperationGatekeepersGetResourcesInSubscriptionNextResponse>
   */
  getResourcesInSubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceOperationGatekeepersGetResourcesInSubscriptionNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  getResourcesInSubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  getResourcesInSubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): void;
  getResourcesInSubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>, callback?: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): Promise<Models.ResourceOperationGatekeepersGetResourcesInSubscriptionNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      getResourcesInSubscriptionNextOperationSpec,
      callback) as Promise<Models.ResourceOperationGatekeepersGetResourcesInSubscriptionNextResponse>;
  }

  /**
   * @summary Returns ResourceOperationGateKeepers collection belonging to a ResourceGroup
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param [options] The optional parameters
   * @returns Promise<Models.ResourceOperationGatekeepersGetResourcesInResourceGroupNextResponse>
   */
  getResourcesInResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ResourceOperationGatekeepersGetResourcesInResourceGroupNextResponse>;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param callback The callback
   */
  getResourcesInResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): void;
  /**
   * @param nextPageLink The NextLink from the previous successful call to List operation.
   * @param options The optional parameters
   * @param callback The callback
   */
  getResourcesInResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): void;
  getResourcesInResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>, callback?: msRest.ServiceCallback<Models.ResourceOperationGateKeeperResourceList>): Promise<Models.ResourceOperationGatekeepersGetResourcesInResourceGroupNextResponse> {
    return this.client.sendOperationRequest(
      {
        nextPageLink,
        options
      },
      getResourcesInResourceGroupNextOperationSpec,
      callback) as Promise<Models.ResourceOperationGatekeepersGetResourcesInResourceGroupNextResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const getResourcesInSubscriptionOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/resourceOperationGateKeepers",
  urlParameters: [
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceOperationGateKeeperResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getResourcesInResourceGroupOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceOperationGateKeepers",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceOperationGateKeeperResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceOperationGateKeepers/{resourceOperationGateKeepersName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceOperationGateKeepersName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceOperationGateKeeperResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const putOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceOperationGateKeepers/{resourceOperationGateKeepersName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceOperationGateKeepersName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.ResourceOperationGateKeeperResource,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ResourceOperationGateKeeperResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const deleteMethodOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceOperationGateKeepers/{resourceOperationGateKeepersName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceOperationGateKeepersName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {},
    204: {},
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const patchOperationSpec: msRest.OperationSpec = {
  httpMethod: "PATCH",
  path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceOperationGateKeepers/{resourceOperationGateKeepersName}",
  urlParameters: [
    Parameters.resourceGroupName,
    Parameters.subscriptionId,
    Parameters.resourceOperationGateKeepersName
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  requestBody: {
    parameterPath: "parameters",
    mapper: {
      ...Mappers.PatchResourceRequestInput,
      required: true
    }
  },
  responses: {
    200: {
      bodyMapper: Mappers.ResourceOperationGateKeeperResource
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getResourcesInSubscriptionNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceOperationGateKeeperResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};

const getResourcesInResourceGroupNextOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  baseUrl: "https://management.azure.com",
  path: "{nextLink}",
  urlParameters: [
    Parameters.nextPageLink
  ],
  queryParameters: [
    Parameters.apiVersion1
  ],
  headerParameters: [
    Parameters.acceptLanguage
  ],
  responses: {
    200: {
      bodyMapper: Mappers.ResourceOperationGateKeeperResourceList
    },
    default: {
      bodyMapper: Mappers.CloudError
    }
  },
  serializer
};
